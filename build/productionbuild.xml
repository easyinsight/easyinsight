<project default="compileFlex" basedir="." name="Production">
    <property file="local.build.properties"/>
    <taskdef resource="flexTasks.tasks" classpath="${flex.sdk.dir}/ant/lib/flexTasks.jar"/>

    <taskdef name="S3Upload" classname="dak.ant.taskdefs.S3Upload"/>
    <taskdef name="StopInstances" classname="com.easyinsight.watchdog.updatetask.ShutdownAppInstanceTask"/>
    <taskdef name="UpdateInstances" classname="com.easyinsight.watchdog.updatetask.UpdateAppInstanceTask"/>
    <taskdef name="StartInstances" classname="com.easyinsight.watchdog.updatetask.StartAppInstanceTask"/>

    <taskdef name="migration" classname="com.easyinsight.database.ant.DatabaseMigrationTask"/>

    <property name="FLEX_HOME" value="${flex.sdk.dir}"/>

    <property name="watchdog.out.path" value="../java/out/watchdog/"/>
    <property name="watchdog.archive.path" value="${watchdog.out.path}/watchdog"/>

    <property name="code.path" value="../java/out/code/"/>
    <property name="webapp.path" value="${code.path}/webapp"/>
    <property name="flex.path" value="${webapp.path}/easyui-debug"/>

    <property name="test.path" value="../java/out/test"/>
    <property name="reports.tests" value="../java/out/test/reports"/>

    <target name="shutdownInstances">
        <StopInstances/>
    </target>

    <target name="updateInstances">
        <UpdateInstances/>
    </target>

    <target name="startInstances">
        <StartInstances/>
    </target>

    <target name="migration">
        <migration sqlDirectory="java/sql" databaseName="${database.name}" databaseUserName="${database.username}"
                   databasePassword="${database.password}"/>
    </target>

    <target name="tests" depends="migration">
        <delete dir="${test.path}/classes"/>
        <mkdir dir="${test.path}/classes"/>
        <delete dir="${reports.tests}"/>
        <mkdir dir="${reports.tests}"/>
       <javac destdir="${test.path}/classes"
               optimize="off"
               debug="on" failonerror="false"
               srcdir="../java/src"
               excludes="**/*.smap">
            <classpath>
                <fileset dir="../java/lib/cxf2">
                    <include name="*.jar"/>
                </fileset>
                <fileset dir="../java/lib/blazeds">
                    <include name="*.jar"/>
                </fileset>
                <fileset dir="../java/lib/core">
                    <include name="*.jar"/>
                </fileset>
                <fileset dir="../java/lib/commons">
                    <include name="*.jar"/>
                </fileset>
                <fileset dir="../java/lib/hibernate">
                    <include name="*.jar"/>
                </fileset>
                <fileset dir="../java/lib/google">
                    <include name="*.jar"/>
                </fileset>
                <fileset dir="../java/lib/excel">
                    <include name="*.jar"/>
                </fileset>
            </classpath>
            <include name="**"/>
            <exclude name="tags/**"/>
        </javac>
        <junit printsummary="yes" haltonfailure="no">
            <classpath>
                <pathelement location="${test.path}/classes"/>
                <pathelement location="../java/src"/>
                <fileset dir="../java/lib/cxf2">
                    <include name="*.jar"/>
                </fileset>
                <fileset dir="../java/lib/blazeds">
                    <include name="*.jar"/>
                </fileset>
                <fileset dir="../java/lib/core">
                    <include name="*.jar"/>
                </fileset>
                <fileset dir="../java/lib/commons">
                    <include name="*.jar"/>
                </fileset>
                <fileset dir="../java/lib/hibernate">
                    <include name="*.jar"/>
                </fileset>
                <fileset dir="../java/lib/google">
                    <include name="*.jar"/>
                </fileset>
                <fileset dir="../java/lib/excel">
                    <include name="*.jar"/>
                </fileset>
            </classpath>

            <formatter type="plain"/>

            <batchtest fork="yes" todir="${reports.tests}">
                <fileset dir="../java/src">
                    <include name="**/*Test.java"/>
                </fileset>
            </batchtest>
        </junit>
    </target>

    <target name="appwatchdog">
        <mkdir dir="${watchdog.archive.path}"/>
        <javac destdir="${watchdog.archive.path}"
               optimize="off"
               debug="on" failonerror="false"
               srcdir="../build/src"
               excludes="**/*.smap">
            <classpath>
                <fileset dir="../build/lib">
                    <include name="*.jar"/>
                </fileset>
            </classpath>
            <include name="**"/>
            <exclude name="tags/**"/>
        </javac>
        <unzip dest="${watchdog.archive.path}">
            <fileset dir="../build/lib">
                <include name="*.jar"/>
            </fileset>
        </unzip>
        <jar destfile="${watchdog.out.path}/watchdog.jar" baseDir="${watchdog.archive.path}"/>
    </target>

    <target name="clean">
        <delete dir="${webapp.path}"/>
        <delete dir="${watchdog.archive.path}"/>
        <delete dir="${test.path}/classes"/>
        <delete dir="${reports.tests}"/>
    </target>

    <target name="archive" depends="compileFlex">
        <zip destfile="${code.path}/code.zip" baseDir="${webapp.path}"/>
    </target>

    <target name="compileJava" depends="clean">
        <mkdir dir="${webapp.path}/WEB-INF/classes"/>
        <mkdir dir="${webapp.path}/assets"/>
        <mkdir dir="${webapp.path}/assets/icons"/>
        <mkdir dir="${webapp.path}/assets/icons/32x32"/>
        <mkdir dir="${webapp.path}/WEB-INF/flex"/>
        <mkdir dir="${webapp.path}/META-INF"/>
        <mkdir dir="${webapp.path}/WEB-INF/lib"/>

        <javac destdir="${webapp.path}/WEB-INF/classes"
               optimize="off"
               debug="on" failonerror="false"
               srcdir="../java/src"
               excludes="**/*.smap">
            <classpath>
                <fileset dir="../java/lib/cxf2">
                    <include name="*.jar"/>
                </fileset>
                <fileset dir="../java/lib/blazeds">
                    <include name="*.jar"/>
                </fileset>
                <fileset dir="../java/lib/core">
                    <include name="*.jar"/>
                </fileset>
                <fileset dir="../java/lib/commons">
                    <include name="*.jar"/>
                </fileset>
                <fileset dir="../java/lib/hibernate">
                    <include name="*.jar"/>
                </fileset>
                <fileset dir="../java/lib/google">
                    <include name="*.jar"/>
                </fileset>
                <fileset dir="../java/lib/excel">
                    <include name="*.jar"/>
                </fileset>
            </classpath>
            <include name="**"/>
            <exclude name="tags/**"/>
        </javac>
        <copy flatten="true" todir="${webapp.path}/WEB-INF/lib">
            <fileset dir="../java/lib">
                <include name="**/*"/>
            </fileset>
        </copy>
        <copy todir="${webapp.path}/WEB-INF/flex">
            <fileset dir="../java/web/WEB-INF/flex">
                <include name="**/*"/>
            </fileset>
        </copy>
        <copy todir="${webapp.path}/WEB-INF/classes">
            <fileset dir="../java/src">
                <include name="**/*"/>
            </fileset>
        </copy>
        <copy todir="${webapp.path}/META-INF">
            <fileset dir="../java/web/META-INF">
                <include name="**/*"/>
            </fileset>
        </copy>
        <copy todir="${webapp.path}/WEB-INF">
            <fileset dir="../java/web/WEB-INF">
                <include name="*.xml"/>
            </fileset>
        </copy>
        <copy todir="${webapp.path}">
            <fileset dir="../java/web">
                <include name="**/*"/>
            </fileset>
        </copy>
        <copy todir="${webapp.path}/assets/icons/32x32">
            <fileset dir="../java/web/assets/icons/32x32">
                <include name="**/*"/>
            </fileset>
        </copy>
    </target>

    <target name="compileFlex" depends="compileJava">
        <mxmlc file="${teamcity.build.checkoutDir}/flex/src/PrimaryWorkspace.mxml"
               output="${flex.path}/PrimaryWorkspace.swf"
               static-rsls="true">
            <load-config filename="${teamcity.build.checkoutDir}/flex/flex-config.xml"/>
        </mxmlc>
        <mxmlc file="${teamcity.build.checkoutDir}/flex/src/com/easyinsight/dashboard/ListViewModule.mxml"
               output="${flex.path}/ListViewModule.swf"
               static-rsls="true">
            <load-config filename="${teamcity.build.checkoutDir}/flex/list-module.xml"/>
        </mxmlc>
        <mxmlc file="${teamcity.build.checkoutDir}/flex/src/AdministrationApplication.mxml"
               output="${flex.path}/AdministrationApplication.swf" static-rsls="true">
            <load-config filename="${teamcity.build.checkoutDir}/flex/administration-app.xml"/>

        </mxmlc>
        <mxmlc file="${teamcity.build.checkoutDir}/flex/src/EmbeddedInsight.mxml"
               output="${flex.path}/EmbeddedInsight.swf" static-rsls="true">
            <load-config filename="${teamcity.build.checkoutDir}/flex/embedded-insight.xml"/>


        </mxmlc>
    </target>

    <target name="upload">
        <S3Upload verbose="true"
                  accessId="0AWCBQ78TJR8QCY8ABG2"
                  secretKey="bTUPJqHHeC15+g59BQP8ackadCZj/TsSucNwPwuI"
                  bucket="eiproduction"
                  publicRead="false">
            <fileset dir="${code.path}" includes="code.zip"/>
        </S3Upload>
    </target>
</project>