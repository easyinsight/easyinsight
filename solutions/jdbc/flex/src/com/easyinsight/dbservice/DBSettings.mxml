<?xml version="1.0" ?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:dbservice="com.easyinsight.dbservice.*">
    <mx:Metadata>
        [Event(name="dbConfigured", type="com.easyinsight.dbservice.ConfigProgressionEvent")]
    </mx:Metadata>
    <mx:states>
        <mx:State name="MySQL" enterState="assignPanel(event, mysqlPanel)">
            <mx:AddChild relativeTo="{coreBox}">
                <dbservice:MySQLPanel id="mysqlPanel"/>
            </mx:AddChild>
        </mx:State>
        <mx:State name="SQL Server" enterState="assignPanel(event, sqlServerPanel)">
            <mx:AddChild relativeTo="{coreBox}">
                <dbservice:SQLServerPanel id="sqlServerPanel"/>
            </mx:AddChild>
        </mx:State>
        <mx:State name="Generic JDBC" enterState="assignPanel(event, genericPanel)">
            <mx:AddChild relativeTo="{coreBox}">
                <dbservice:GenericJDBCWindow id="genericPanel"/>
            </mx:AddChild>
        </mx:State>
    </mx:states>
    <mx:Script><![CDATA[
import mx.controls.Alert;
import mx.rpc.events.FaultEvent;
        import mx.collections.ArrayCollection;

        private var currentPanel:IDatabaseSettings;

        [Bindable]
        private var validationNote:String;

        [Bindable]
        private var databases:ArrayCollection = new ArrayCollection([ "[ Select a Database ]", "MySQL", "SQL Server", "Generic JDBC"]);

        private function assignPanel(event:Event, settings:IDatabaseSettings):void {
            currentPanel = settings;
        }

        private function validateDatabase():void {
            ProgressAlert.alert(this, "Validating database...", null, dbService.validateDB);
            dbService.validateDB.send(currentPanel.createSettings());
        }

        private function onChange():void {
            var databaseSelection:String = databaseComboBox.selectedItem as String;
            if (databaseSelection == "[ Select a Database ]") {
                currentState = "";
            } else {
                currentState = databaseSelection;
            }
        }

        private function assigned():void {
            dispatchEvent(new ConfigProgressionEvent(currentPanel.createSettings()));
        }

        private function done():void {
            if (currentPanel == null) {
                dispatchEvent(new ConfigProgressionEvent(null));
            } else {
                ProgressAlert.alert(this, "Saving database information...", null, dbService.assignDB);
                dbService.assignDB.send(currentPanel.createSettings());
            }
        }

        private function gotValidation():void {
            var result:String = dbService.validateDB.lastResult as String;
            if (result == null) {
                validationNote = "Validated!";
            } else {
                validationNote = result;
            }
        }

        private function onFault(event:FaultEvent):void {
            Alert.show(event.message.toString());
        }
        ]]></mx:Script>
    <mx:RemoteObject id="dbService" destination="dbremote" fault="onFault(event)">
        <mx:method name="validateDB" result="gotValidation()"/>
        <mx:method name="assignDB" result="assigned()"/>
    </mx:RemoteObject>
    <mx:ComboBox dataProvider="{databases}" change="onChange()" id="databaseComboBox"/>
    <mx:VBox id="coreBox" width="100%" height="100%">

    </mx:VBox>
    <mx:Label text="{validationNote}"/>
    <mx:HBox width="100%" horizontalAlign="center">
        <mx:Button label="Validate Database" click="validateDatabase()"/>
        <mx:Button label="Done" click="done()"/>
    </mx:HBox>
</mx:VBox>