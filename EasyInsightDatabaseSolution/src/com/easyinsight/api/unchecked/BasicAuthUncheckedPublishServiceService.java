
package com.easyinsight.api.unchecked;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAXWS SI.
 * JAX-WS RI 2.1-02/02/2007 03:56 AM(vivekp)-FCS
 * Generated source version: 2.1
 * 
 */
@WebServiceClient(name = "BasicAuthUncheckedPublishServiceService", targetNamespace = "http://basicauth.api.easyinsight.com/", wsdlLocation = "https://www.easy-insight.com/app/services/UncheckedPublishBasic?wsdl")
public class BasicAuthUncheckedPublishServiceService
    extends Service
{

    private final static URL BASICAUTHUNCHECKEDPUBLISHSERVICESERVICE_WSDL_LOCATION;

    static {
        URL url = null;
        try {
            url = new URL("https://www.easy-insight.com/app/services/UncheckedPublishBasic?wsdl");
        } catch (MalformedURLException e) {
            e.printStackTrace();
        }
        BASICAUTHUNCHECKEDPUBLISHSERVICESERVICE_WSDL_LOCATION = url;
    }

    public BasicAuthUncheckedPublishServiceService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public BasicAuthUncheckedPublishServiceService() {
        super(BASICAUTHUNCHECKEDPUBLISHSERVICESERVICE_WSDL_LOCATION, new QName("http://basicauth.api.easyinsight.com/", "BasicAuthUncheckedPublishServiceService"));
    }

    /**
     * 
     * @return
     *     returns BasicAuthUncheckedPublish
     */
    @WebEndpoint(name = "BasicAuthUncheckedPublishServicePort")
    public BasicAuthUncheckedPublish getBasicAuthUncheckedPublishServicePort() {
        return (BasicAuthUncheckedPublish)super.getPort(new QName("http://basicauth.api.easyinsight.com/", "BasicAuthUncheckedPublishServicePort"), BasicAuthUncheckedPublish.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns BasicAuthUncheckedPublish
     */
    @WebEndpoint(name = "BasicAuthUncheckedPublishServicePort")
    public BasicAuthUncheckedPublish getBasicAuthUncheckedPublishServicePort(WebServiceFeature... features) {
        return (BasicAuthUncheckedPublish)super.getPort(new QName("http://basicauth.api.easyinsight.com/", "BasicAuthUncheckedPublishServicePort"), BasicAuthUncheckedPublish.class, features);
    }

}
