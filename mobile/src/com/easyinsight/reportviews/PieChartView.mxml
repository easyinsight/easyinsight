<?xml version="1.0"?>
<mx:PieChart xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark"
    xmlns:mx="library://ns.adobe.com/flex/mx" dataProvider="{graphData}" selectionMode="none"
                    showDataTips="true"
        implements="com.easyinsight.reportviews.IReportView" width="100%" height="100%">
    <fx:Script><![CDATA[
        import com.easyinsight.analysis.AnalysisDefinition;
        import com.easyinsight.analysis.FillProvider;
        import com.easyinsight.analysis.charts.xaxisbased.pie.PieChartDefinition;

        import mx.collections.ArrayCollection;
        import mx.formatters.Formatter;

        [Bindable]
        private var measureName:String;

        [Bindable]
        private var dimension:String;

        [Bindable]
        private var labelPosition:String;

        [Bindable]
        private var graphData:ArrayCollection;

        private var measureFormatter:Formatter;

        private function renderPieLabel(data:Object, field:String, index:Number, percentValue:Number):String {
            return data[dimension] + ": " + '\n' + this.measureFormatter.format(data[measureName]);
        }

        public function renderReport(data:ArrayCollection, report:AnalysisDefinition, additionalProperties:Object):void {
            var pieChartDef:PieChartDefinition = report as PieChartDefinition;
            measureName = pieChartDef.measures.getItemAt(0).qualifiedName();
            measureFormatter = pieChartDef.measures.getItemAt(0).getFormatter();
            dimension = pieChartDef.xaxis.qualifiedName();
            labelPosition = pieChartDef.labelPosition;
            if (pieChartDef.colorScheme == FillProvider.radialGradients) {
                pieSeries.setStyle("fills", FillProvider.createRadialGradients());
            } else if (pieChartDef.colorScheme == FillProvider.highContrast) {
                pieSeries.setStyle("fills", FillProvider.createSAPColors());
            } else {
                pieSeries.setStyle("fills", FillProvider.createRadialGradients());
            }
            graphData = data;
        }

        public function preserveValues():Boolean {
            return false;
        }
        ]]></fx:Script>
    <mx:series>
        <mx:PieSeries field="{measureName}" nameField="{dimension}" labelPosition="{labelPosition}"
            labelFunction="renderPieLabel" id="pieSeries">
        </mx:PieSeries>
    </mx:series>
</mx:PieChart>
