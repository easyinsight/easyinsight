<?xml version="1.0"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark"
        xmlns:mx="library://ns.adobe.com/flex/mx" viewActivate="onActivate()">
    <fx:Script><![CDATA[
        import com.easyinsight.analysis.AnalysisDimensionResultMetadata;

        import com.easyinsight.analysis.Value;

        import com.easyinsight.filtering.FilterValueDefinition;

        import mx.collections.ArrayCollection;

        import spark.collections.Sort;

        [Bindable]
        private var filterValues:ArrayCollection;

        private var filterInfo:FilterInfo;

        [Bindable]
        private var itemRenderer:IFactory;
        [Bindable]
        private var filterEnabled:Boolean;

        private function onActivate():void {
            filterInfo = data as FilterInfo;
            filterName = filterInfo.filterDefinition.label;
            filterEnabled = filterInfo.filterDefinition.enabled;
            var translated:ArrayCollection = new ArrayCollection();
            for each (var obj:Object in FilterValueDefinition(filterInfo.filterDefinition).filteredValues) {
                if (obj is Value) {
                    var value:Value = obj as Value;
                    translated.addItem(value.getValue());
                } else {
                    translated.addItem(obj);
                }
            }
            FilterValueDefinition(filterInfo.filterDefinition).filteredValues = translated;
            trace("sending...");
            busy = true;
            dataService.getAnalysisItemMetadata.send(filterInfo.dataSourceID, filterInfo.filterDefinition.field, 0, filterInfo.reportID, filterInfo.dashboardID);
        }

        private function gotMetadata():void {
            trace("got metadata!");
            var analysisDimensionResultMetadata:AnalysisDimensionResultMetadata = dataService.getAnalysisItemMetadata.lastResult as
            AnalysisDimensionResultMetadata;
            var strings:ArrayCollection = new ArrayCollection();
            if (analysisDimensionResultMetadata != null && analysisDimensionResultMetadata.values != null) {
                for each (var value:Value in analysisDimensionResultMetadata.values) {
                    var string:String = String(value.getValue());

                    if (!strings.contains(string)) {
                        strings.addItem(string);
                    }
                }
            }
            strings.sort = new Sort();
            strings.refresh();
            filterValues = strings;
            itemRenderer = new ClassFactory(FilterCheckbox);
            ClassFactory(itemRenderer).properties = { filterDefinition: filterInfo.filterDefinition};
            busy = false;
        }

        [Bindable]
        private var filterName:String;

        [Bindable]
        private var busy:Boolean;
        ]]></fx:Script>
    <fx:Declarations>
        <mx:RemoteObject destination="data" id="dataService" endpoint="https://www.easy-insight.com/app/messagebroker/amfsecure">
            <mx:method name="getAnalysisItemMetadata" result="gotMetadata()"/>
        </mx:RemoteObject>
    </fx:Declarations>
    <s:navigationContent>
        <s:Button label="Back" click="navigator.popView()"/>
    </s:navigationContent>
    <s:titleContent>
        <s:Label text="{filterName}" color="#FFFFFF"/>
    </s:titleContent>
    <s:actionContent>
        <s:BusyIndicator visible="{busy}" id="busyIndicator" symbolColor="#FFFFFF"/>
    </s:actionContent>
    <s:VGroup width="100%" height="100%">
        <s:CheckBox label="Filter Enabled:" selected="{filterEnabled}" change="filterInfo.filterDefinition.enabled = enabledCheckbox.selected; filterEnabled = enabledCheckbox.selected" id="enabledCheckbox"/>
        <s:List dataProvider="{filterValues}" itemRenderer="{itemRenderer}" width="100%" height="100%" enabled="{filterEnabled}">

        </s:List>
    </s:VGroup>
</s:View>
