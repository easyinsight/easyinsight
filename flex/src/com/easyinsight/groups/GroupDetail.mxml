<?xml version="1.0" encoding="utf-8"?>
<util:EISlimWindow xmlns:mx="http://www.adobe.com/2006/mxml"
                    width="100%"
                    height="100%"
                    xmlns:groups="com.easyinsight.groups.*"
                    creationComplete="setup()"
                    xmlns:util="com.easyinsight.util.*">
    <mx:Script>
		<![CDATA[
        import com.easyinsight.listing.DeleteDataSourceEvent;
        import com.easyinsight.solutions.DataSourceDescriptor;
        import com.easyinsight.util.ProgressAlert;

        import mx.controls.Alert;
        import mx.events.CloseEvent;


        import com.easyinsight.framework.User;

        import mx.collections.ArrayCollection;

        import mx.managers.PopUpManager;

        [Bindable]
        public var groupID:int;
        [Bindable]
        public var description:String;

        [Bindable]
        private var hasDescription:Boolean = false;

        [Bindable]
        private var groupName:String;

        [Bindable]
        private var recentChangesRowCount:int;

        [Bindable]
        private var groupUsers:ArrayCollection;

        [Bindable]
        private var adminEnabled:Boolean = false;

        [Bindable]
        private var editorEnabled:Boolean = false;

        [Bindable]
        private var _group:Group;


        private function setup():void {
            addEventListener(RemoveItemFromGroupEvent.REMOVE_DATA_SOURCE_FROM_GROUP, removeFromGroup);
            addEventListener(RemoveItemFromGroupEvent.REMOVE_REPORT_FROM_GROUP, removeFromGroup);
            addEventListener(RemoveItemFromGroupEvent.REMOVE_DASHBOARD_FROM_GROUP, removeFromGroup);
            addEventListener(RemoveItemFromGroupEvent.REMOVE_SCORECARD_FROM_GROUP, removeFromGroup);
            addEventListener(DeleteDataSourceEvent.DELETE_DATA_SOURCE, onDelete);
            gotFocus();
        }

        private function onDelete(event:DeleteDataSourceEvent):void {
            deleteItem(event.descriptor);
        }

        private function deleteItem(selectedItem:Object):void {
            this.selectedItem = selectedItem;
            if (selectedItem is DataSourceDescriptor) {
                Alert.show("Are you sure you want to remove this data source from the group?", "Alert",
                        Alert.OK | Alert.CANCEL, this, alertFeedListener, null, Alert.CANCEL);
            }
        }

        private var selectedItem:Object;

        private function alertFeedListener(event:CloseEvent):void {
            if (event.detail == Alert.OK) {
                var feedDescriptor:DataSourceDescriptor = selectedItem as DataSourceDescriptor;
                ProgressAlert.alert(this, "Removing data source...", null, groupService.removeDataSourceFromGroup);
                groupService.removeDataSourceFromGroup.send(feedDescriptor.id, groupID);
            }
        }

        public function gotFocus():void {
            ProgressAlert.alert(this, "Retrieving group data...", null, groupService.getGroup);
            groupService.getGroup.send(groupID);
            groupData.gotFocus();
        }

        private function gotGroupDetails():void {
            adminEnabled = User.getInstance().accountAdmin;
            editorEnabled = User.getInstance().accountAdmin;
            var group:Group = groupService.getGroup.lastResult as Group;

            var a:Boolean = false;
            for each (var groupUser:GroupUser in group.groupUsers) {
                if (groupUser.role == GroupUser.OWNER) {
                    if (groupUser.userID == User.getInstance().userID && groupUser.role == 1) {
                        a = true;
                        editorEnabled = true;
                    } else if (groupUser.userID == User.getInstance().userID && groupUser.role == 2) {
                        editorEnabled = true;
                    }
                }
            }

            adminEnabled = adminEnabled || a;

            this._group = group;
        }

        private function groupUpdated(event:GroupCreatedEvent):void {
            gotFocus();
        }


        private function onGroupRefresh(event:GroupRefreshEvent):void {

        }

        private function removeFromGroup(event:RemoveItemFromGroupEvent):void {
            if (event.type == RemoveItemFromGroupEvent.REMOVE_DATA_SOURCE_FROM_GROUP) {
                groupService.removeDataSourceFromGroup.send(event.id, groupID);
            } else if (event.type == RemoveItemFromGroupEvent.REMOVE_REPORT_FROM_GROUP) {
                groupService.removeReportFromGroup.send(event.id, groupID);
            } else if (event.type == RemoveItemFromGroupEvent.REMOVE_DASHBOARD_FROM_GROUP) {
                groupService.removeDashboardFromGroup.send(event.id, groupID);
            } else if (event.type == RemoveItemFromGroupEvent.REMOVE_SCORECARD_FROM_GROUP) {
                groupService.removeScorecardFromGroup.send(event.id, groupID);
            }
        }

        private function removed():void {
            groupData.gotFocus();
        }

        private function blah():void {
            viewStack.selectedIndex = buttonBar.selectedIndex;
        }
        ]]>
    </mx:Script>
    <mx:RemoteObject destination="groupService" id="groupService">
        <mx:method name="getGroup" result="gotGroupDetails()"/>
        <mx:method name="removeDataSourceFromGroup" result="removed()"/>
        <mx:method name="removeReportFromGroup" result="removed()"/>
        <mx:method name="removeDashboardFromGroup" result="removed()"/>
        <mx:method name="removeScorecardFromGroup" result="removed()"/>
    </mx:RemoteObject>
    <mx:VBox width="800" height="500" id="primaryCanvas" paddingTop="10" paddingLeft="10" paddingRight="10"
             paddingBottom="10" horizontalAlign="center">
            <mx:ToggleButtonBar id="buttonBar" itemClick="blah()" buttonStyleName="grayButton">
                <mx:dataProvider>
                    <mx:Array>
                        <mx:String>Data Sources and Reports</mx:String>
                        <mx:String>Members</mx:String>
                    </mx:Array>
                </mx:dataProvider>
            </mx:ToggleButtonBar>
            <mx:ViewStack width="100%" creationPolicy="all"
                          paddingLeft="10" paddingBottom="10" paddingRight="10" paddingTop="10" id="viewStack"
                          height="100%">
                <groups:GroupMyData groupID="{groupID}" label="Data Sources and Reports"
                                    groupAdmin="{editorEnabled}" id="groupData"/>
                <groups:ManageGroupUsers groupID="{groupID}" id="manageUsers" label="Members"
                                         groupAdmin="{adminEnabled}"/>
            </mx:ViewStack>
        <mx:Button styleName="grayButton" click="PopUpManager.removePopUp(this)" label="Close" fontSize="14"/>
    </mx:VBox>
</util:EISlimWindow>
