<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%" implements="com.easyinsight.listing.IPerspective"
	xmlns:groups="com.easyinsight.groups.*" xmlns:discussion="com.easyinsight.discussion.*">
	<!--
	<mx:states>
		<mx:State name="SearchState">
			<mx:RemoveChild target="{coreHBox}"/>			
			<mx:AddChild relativeTo="{primaryCanvas}">
				<listing:CatalogListing id="catalogListing" returnToStore="navigateToHome(event)"/>
			</mx:AddChild>
		</mx:State>
		<mx:State name="AnalysisSearchState">
			<mx:RemoveChild target="{coreHBox}"/>			
			<mx:AddChild relativeTo="{primaryCanvas}">
				<listing:CatalogAnalysisListing id="analysisCatalogListing" returnToStore="navigateToHome(event)"/>
			</mx:AddChild>
		</mx:State>
	</mx:states>
	-->
	<mx:Script>
		<![CDATA[
import com.easyinsight.discussion.MessagePostedEvent;
import com.easyinsight.discussion.NewMessageWindow;
import mx.controls.Alert;
			import mx.managers.PopUpManager;
			import com.easyinsight.help.HelpWindow;
			import com.easyinsight.framework.User;
			import com.easyinsight.listing.HeaderBarEvent;
			import mx.collections.ArrayCollection;
			import com.easyinsight.genredata.ChildSearchEvent;
			import com.easyinsight.listing.CatalogNavigationEvent;
			import com.easyinsight.listing.AnalyzeSource;
			import com.easyinsight.framework.NavigationEvent;
			
			[Bindable]
	        [Embed(source="../../../../assets/helpx48.png")]
	        public var helpIcon:Class;

            [Bindable]
	        [Embed(source="../../../../assets/message.png")]
	        public var messageIcon:Class;

            [Bindable]
	        [Embed(source="../../../../assets/data_add_x64.png")]
	        public var addDataSourceIcon:Class;

            [Bindable]
	        [Embed(source="../../../../assets/chart_area_x64.png")]
	        public var addInsightIcon:Class;

            [Bindable]
	        [Embed(source="../../../../assets/earth_connection.png")]
	        public var connectIcon:Class;

            [Bindable]
	        [Embed(source="../../../../assets/earth_edit.png")]
	        public var administerIcon:Class;
			
			[Bindable]
			public var groupID:int;
			[Bindable]
			public var description:String;

			[Bindable]
			private var hasDescription:Boolean = false;
						
			[Bindable]
			private var groupName:String;
			
			[Bindable]
			private var recentChanges:ArrayCollection;

            [Bindable]
            private var messages:ArrayCollection; 
			
			[Bindable]
			private var recentChangesRowCount:int;

            [Bindable]
            private var groupUsers:ArrayCollection;
			
			[Bindable]
			private var ownerLabel:String = "Group Owner:";

            [Bindable]
            private var adminEnabled:Boolean = false;

            [Bindable]
            private var joinEnabled:Boolean = false;

            [Bindable]
            private var ownerText:String;

            [Bindable]
            private var numberMembersText:String;
			
			private var _group:Group;
		
			public function search(keyword:String = null):void {

            }
            
            private function onSearchAnalysis(event:ChildSearchEvent):void {
				var analysisDefs:ArrayCollection = event.items;
                //currentState = "AnalysisSearchState";
                //analysisCatalogListing.analysisDefinitions = analysisDefs;
                dispatchEvent(new HeaderBarEvent(true, false));
            }

            private function onSearchFeed(event:ChildSearchEvent):void {
                var dataProviderDescriptors:ArrayCollection = event.items;
                //currentState = "SearchState";
                //catalogListing.dataFeeds = dataProviderDescriptors;
                dispatchEvent(new HeaderBarEvent(true, false));
            }

            private function navigateToHome(event:CatalogNavigationEvent):void {
                currentState = "";
                dispatchEvent(new HeaderBarEvent(false, false));
            }

            public function analyze():AnalyzeSource {
                return null;
            }

            public function gotFocus():void {
            	groupService.getGroup.send(groupID);
            	groupService.getGroupMessages.send(groupID);
            	groupInsights.refreshData();
            	groupFeeds.refreshData();
            }

            public function lostFocus():void {
            }

            public function getDefaultAnalyzeState():Boolean {
                return false;
            }

            public function isKeywordSearchInstant():Boolean {
                return false;
            }
            
            private function backToGroupList():void {
            	User.getEventNotifier().dispatchEvent(new NavigationEvent("Groups"));
            }
            
            private function gotGroupDetails():void {
            	var group:Group = groupService.getGroup.lastResult as Group;
            	this.description = group.description;
            	if (description != null && description.length > 0) {
            		hasDescription = true;
            	}  
            	this.groupName = group.name;
                ownerText = "";
                var secondUser:Boolean = false;
                var foundUser:Boolean = false;
                for each (var groupUser:GroupUser in group.groupUsers) {
                    if (groupUser.role == GroupUser.OWNER) {
                        if (secondUser) {
                            ownerText += ", ";
                        }
                        ownerText += "<b>" + groupUser.name + "</b>";
                        if (groupUser.name == User.getInstance().userName) {
                            adminEnabled = true;
                        }
                    }
                    if (groupUser.name == User.getInstance().userName) {
                        foundUser = true;
                    }
                }
                if (!foundUser) {
                    joinEnabled = true;
                }
                if (secondUser && ownerText != "") {
                    ownerLabel = "Group Owners:";
                }
                numberMembersText = group.groupUsers.length > 1 ? (group.groupUsers.length + " members") : (group.groupUsers.length + " member");
            	this._group = group;          	
            }
            
            private function help():void {
	        	HelpWindow.createHelpWindow(GroupHelp, this);
	     	}
	     	
	     	private function groupUpdated(event:GroupCreatedEvent):void {
	     		gotFocus();
	     	}          
	        
	        private function administer():void {
	        	var window:GroupAdministration = GroupAdministration(PopUpManager.createPopUp(this, GroupAdministration, true));
	        	window.group = _group;
	        	window.addEventListener(GroupCreatedEvent.GROUP_UPDATED, groupUpdated);
	        	PopUpManager.centerPopUp(window);
	        }

            private function joinGroup():void {
                groupService.addMemberToGroup.send(_group.groupID);
            }

            private function addedToGroup():void {
                numberMembersText = (_group.groupUsers.length) + _group.groupUsers.length + " members";
                joinEnabled = false;
                Alert.show("You are now a member of this group.");
            }

            private function gotGroupMessages():void {
                this.messages = groupService.getGroupMessages.lastResult as ArrayCollection;
            }

            private function newMessage():void {
                var newMessageWindow:NewMessageWindow = new NewMessageWindow();
                newMessageWindow.addEventListener(MessagePostedEvent.MESSAGE_POSTED, onMessagePost);
                PopUpManager.addPopUp(newMessageWindow, this);
                PopUpManager.centerPopUp(newMessageWindow);
            }

            private function onMessagePost(event:MessagePostedEvent):void {
                var groupComment:GroupComment = new GroupComment();
                groupComment.message = event.message;
                groupComment.timestamp = new Date();
                groupComment.groupID = _group.groupID;
                groupService.addGroupComment.send(groupComment);
            }

            private function addedComment():void {
                groupService.getGroupMessages.send(_group.groupID);
            }
		]]>		
	</mx:Script>
	<mx:RemoteObject destination="groupService" id="groupService">
		<mx:method name="getGroup" result="gotGroupDetails()"/>
		<mx:method name="getGroupMessages" result="gotGroupMessages()"/>
		<mx:method name="addMemberToGroup" result="addedToGroup()"/>
		<mx:method name="addGroupComment" result="addedComment()"/>
		<mx:method name="getInsights"/>
		<mx:method name="getFeeds"/>
	</mx:RemoteObject>
    <mx:Box width="100%" height="5" backgroundColor="#D42525" left="0" right="0"/>
	<mx:VBox width="100%" height="100%" id="primaryCanvas" paddingTop="10" paddingLeft="10" paddingRight="10" paddingBottom="10">
		<mx:HBox width="100%">
			<mx:Button label="Back to Group List" click="backToGroupList()"/>
            <mx:Button icon="{connectIcon}" toolTip="Join Group" click="joinGroup()" visible="{joinEnabled}"/>
            <mx:Button icon="{administerIcon}" toolTip="Administer Group" click="administer()" visible="{adminEnabled}"/>
            <mx:Button icon="{addDataSourceIcon}" toolTip="Add Data Source..." visible="{adminEnabled}"/>
            <mx:Button icon="{addInsightIcon}" toolTip="Add Report..." visible="{adminEnabled}"/>
            <mx:Button icon="{messageIcon}" toolTip="New Message" click="newMessage()" visible="{!joinEnabled}"/>
			<mx:Button icon="{helpIcon}" toolTip="Help!" click="help()" />
			<mx:HBox width="100%" horizontalAlign="center">
                <mx:ApplicationControlBar>
                    <mx:Label fontSize="16" text="{groupName}"/>
                </mx:ApplicationControlBar>
		    </mx:HBox>
		</mx:HBox>
        <mx:Spacer height="20"/>
		<mx:HBox width="100%">

		<mx:VBox verticalGap="0">
            <mx:Box width="100%" height="5" backgroundColor="#D42525" left="0" right="0"/>
            <mx:Box width="100%" backgroundColor="#F6A76B" horizontalAlign="center">
                <mx:Label text="Group Attributes"/>
            </mx:Box>
            <mx:Form paddingTop="0" paddingLeft="0" paddingRight="0" paddingBottom="0" backgroundColor="#F5CDAF">
                <mx:FormItem label="Description:" fontFamily="Tahoma" fontWeight="bold">
                    <mx:TextArea text="{description}" fontFamily="Lucida Grande" fontWeight="normal"/>
                </mx:FormItem>
                <mx:FormItem label="{ownerLabel}" fontFamily="Tahoma" fontWeight="bold">
                    <mx:Label htmlText="{ownerText}" fontFamily="Lucida Grande" fontWeight="normal"/>
                </mx:FormItem>
                <mx:FormItem label="Number of Members:" fontFamily="Tahoma" fontWeight="bold">
                    <mx:Label text="{numberMembersText}" fontFamily="Lucida Grande" fontWeight="normal"/>
                </mx:FormItem>
            </mx:Form>
		</mx:VBox>

        <mx:VBox width="100%" verticalGap="0">
            <discussion:DiscussionPanel dataProvider="{messages}" width="100%"/>
        </mx:VBox>		

		</mx:HBox>
		<mx:VBox>
			<!--
			<mx:DataGrid dataProvider="{recentChanges}" rowCount="{recentChangesRowCount}">
				<mx:columns>
					<mx:DataGridColumn headerText="" dataFielditemRenderer=""
				</mx:columns>
			</mx:DataGrid>
			-->
		</mx:VBox>
		<mx:HBox width="100%" backgroundColor="#FFFFFF" backgroundAlpha=".1" id="coreHBox">
			<mx:Spacer width="5%"/>
			<groups:GroupItemPanel rendererClass="com.easyinsight.genredata.PopularAnalysisItem" width="28%" id="groupInsights"
				title="Group Reports" groupID="{groupID}" dataOperation="{groupService.getInsights}"
				fullDataOperation="{groupService.getInsights}" fullEventType="{ChildSearchEvent.ANALYSIS_SEARCH}"
				analysisSearch="onSearchAnalysis(event)"/>
			<mx:Spacer width="5%"/>
			<groups:GroupItemPanel rendererClass="com.easyinsight.genredata.PopularFeed" width="28%" id="groupFeeds"
				title="Group Data Sources" groupID="{groupID}" dataOperation="{groupService.getFeeds}"
				fullDataOperation="{groupService.getFeeds}" fullEventType="{ChildSearchEvent.FEED_SEARCH}"
				feedSearch="onSearchFeed(event)" />			
			<mx:Spacer width="5%"/>							
		</mx:HBox>
	</mx:VBox>
</mx:VBox>
