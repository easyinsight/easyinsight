<?xml version="1.0" encoding="utf-8"?>
<skin:BackgroundImage xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:util="com.easyinsight.util.*"
                      xmlns:discussion="com.easyinsight.discussion.*"
                      implements="com.easyinsight.listing.IPerspective"
                      xmlns:groups="com.easyinsight.groups.*"
                      creationComplete="initListeners()" xmlns:listing="com.easyinsight.listing.*"
                      xmlns:skin="com.easyinsight.skin.*">
    <mx:Script>
		<![CDATA[

        import com.easyinsight.account.Account;
        import com.easyinsight.framework.PerspectiveInfo;
        import com.easyinsight.skin.ApplicationSkin;
        import com.easyinsight.util.PopUpUtil;

        import mx.utils.URLUtil;
        import mx.managers.BrowserManager;

        import com.easyinsight.framework.NavigationEvent;
        import com.easyinsight.framework.User;

        import mx.managers.PopUpManager;
        import mx.collections.ArrayCollection;

        [Bindable]
        private var myGroups:ArrayCollection;

        [Bindable]
        private var showMyGroups:Boolean = false;

        private function initListeners():void {
        }

        [Embed(source="../../../../assets/background2.JPG")]
        private var defaultReportBackground:Class;

        protected override function commitProperties():void {
            super.commitProperties();
            solutionGrid.setStyle("backgroundImage", defaultReportBackground);
            solutionGrid.setStyle("backgroundSize", ApplicationSkin.instance().reportBackgroundSize);
        }

        private function gotCreate():void {
            var canCreateGroup:Boolean = groupService.canCreateGroup.lastResult as Boolean;

            if (canCreateGroup) {
                groupAddIndex = 3;
            } else {
                groupAddIndex = 2;
            }
        }

        public function gotFocus():void {
            var fragmentObject:Object = new Object();
            fragmentObject.page = "groups";
            BrowserManager.getInstance().setTitle("Easy Insight - Groups");
            var fragmentString:String = URLUtil.objectToString(fragmentObject);
            BrowserManager.getInstance().setFragment(fragmentString);
            if (User.getInstance().getAccountType() == Account.PERSONAL) {
                groupAddIndex = 1;
            } else {
                groupService.canCreateGroup.send();
            }
            stackIndex = 0;
            groupService.getMemberGroups.send();
            //groupService.getPublicGroups.send();
        }

        public function lostFocus():void {
        }

        private function groupSelected(event:GroupSelectedEvent):void {
            User.getEventNotifier().dispatchEvent(new NavigationEvent(null, new PerspectiveInfo(PerspectiveInfo.GROUP_DETAIL, {groupID : event.groupID})));
        }

        private function onNewGroup(event:GroupSelectedEvent):void {
            if (User.getInstance().getAccountType() == Account.BASIC) {
                groupAddIndex = 2;
            }
            User.getEventNotifier().dispatchEvent(new NavigationEvent(null, new PerspectiveInfo(PerspectiveInfo.GROUP_DETAIL, {groupID : event.groupID})));
        }

        private function gotMemberGroups():void {
            stackIndex = 1;
            this.myGroups = groupService.getMemberGroups.lastResult as ArrayCollection;
            showMyGroups = (myGroups.length > 0);
        }

        /*private function gotPublicGroups():void {
         this.publicGroups = groupService.getPublicGroups.lastResult as ArrayCollection;
         publicGroupRowCount = this.publicGroups.length;
         }*/

        private function createNewGroup():void {
            var groupWindow:NewGroupWindow = NewGroupWindow(PopUpManager.createPopUp(this, NewGroupWindow, true));
            groupWindow.addEventListener(GroupSelectedEvent.GROUP_SELECTED, groupSelected);
            PopUpUtil.centerPopUp(groupWindow);
        }

        /*private function joinPublicGroup():void {
         var groupJoinWindow:GroupJoinWindow = new GroupJoinWindow();
         groupJoinWindow.addEventListener(GroupSelectedEvent.GROUP_SELECTED, groupSelected);
         PopUpManager.addPopUp(groupJoinWindow, this, true);
         PopUpUtil.centerPopUp(groupJoinWindow);
         }*/
        public function cleanup():void {
        }

        [Bindable]
        private var stackIndex:int;

        [Bindable]
        private var groupAddIndex:int = 0;
        ]]>
    </mx:Script>
    <mx:RemoteObject destination="groupService" id="groupService">
        <mx:method name="getMemberGroups" result="gotMemberGroups()"/>
        <mx:method name="canCreateGroup" result="gotCreate()"/>
        <!--<mx:method name="getPublicGroups" result="gotPublicGroups()"/>-->
    </mx:RemoteObject>
    <mx:VBox paddingLeft="10" paddingRight="10" paddingTop="10">
    <mx:ViewStack resizeToContent="true" selectedIndex="{groupAddIndex}">
        <mx:Box/>
        <mx:Box width="100%" horizontalAlign="center" verticalAlign="middle" height="100%">
            <mx:Label text="You are only able to create groups with a Basic or higher account." fontSize="16"
                      color="#000000"/>
        </mx:Box>
        <mx:Box width="100%" horizontalAlign="center" verticalAlign="middle" height="100%">
            <mx:Label text="You are only allowed to have one group with a Basic account." fontSize="16"
                      color="#000000"/>
        </mx:Box>
        <mx:Box width="100%" horizontalAlign="center" verticalAlign="middle" height="100%">
            <mx:Button icon="@Embed('../../../../assets/users3_add.png')" label="Create a New Group..."
                       click="createNewGroup()" labelPlacement="bottom"/>
        </mx:Box>
    </mx:ViewStack>
    <mx:ViewStack width="100%" height="100%" selectedIndex="{stackIndex}" id="groupStack"
                  creationPolicy="all">
        <mx:Box width="100%" height="100%" horizontalAlign="center" verticalAlign="middle">
            <mx:ProgressBar indeterminate="{stackIndex == 0}" label="Loading available groups..."/>
        </mx:Box>
        <mx:Canvas width="100%" height="100%">
            <mx:TileList width="100%" height="100%" itemRenderer="com.easyinsight.groups.GroupView"
                         dataProvider="{myGroups}" id="solutionGrid"
                         columnWidth="240" rowHeight="160"/>
        </mx:Canvas>
    </mx:ViewStack>
    </mx:VBox>
</skin:BackgroundImage>
