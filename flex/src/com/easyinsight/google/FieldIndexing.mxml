<?xml version="1.0"?>
<feed:DataSourceWindow xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:util="com.easyinsight.util.*" width="100%"
                       height="100%"
                       paddingTop="10"
                       xmlns:feed="com.easyinsight.administration.feed.*">
    <mx:Script><![CDATA[
        import com.easyinsight.administration.feed.FeedDefinitionData;
        import com.easyinsight.analysis.AnalysisItem;
        import com.easyinsight.analysis.DerivedKey;

        import com.easyinsight.feedassembly.CompositeFeedDefinition;
        import com.easyinsight.feedassembly.CompositeFeedNode;

        import mx.collections.ArrayCollection;
        import mx.managers.PopUpManager;

        [Bindable]
        private var _fields:ArrayCollection;

        override protected function gotSource():void {
            fields = dataSource.fields;
            var comp:CompositeFeedDefinition = dataSource as CompositeFeedDefinition;
            dataSources = new ArrayCollection(comp.compositeFeedNodes.toArray());
            dataSources.addItemAt({dataSourceName:"[ All ]" }, 0);
        }

        public function set fields(value:ArrayCollection):void {
            var fields:ArrayCollection = new ArrayCollection();
            for each (var analysisItem:AnalysisItem in value) {
                fields.addItem(new AnalysisItemDispatcher(analysisItem));
            }
            _fields = fields;
            _fields.filterFunction = filterFunction;
        }

        private function filterFunction(item:Object):Boolean {
            var dataSource:CompositeFeedNode = dataSourceBox.selectedItem as CompositeFeedNode;
            if (dataSource != null) {
                var analysisItem:AnalysisItem = AnalysisItemDispatcher(item).analysisItem;
                if (analysisItem.key is DerivedKey) {
                    var key:DerivedKey = analysisItem.key as DerivedKey;
                    if (dataSource.dataFeedID == key.feedID) {
                        return true;
                    }
                }
                return false;
            }
            return true;
        }


        [Bindable]
        private var dataSources:ArrayCollection;

        public function updateDataSource(feedDefinition:FeedDefinitionData):void {

        }

        private function save():void {
            for each (var item:AnalysisItem in dataSource.fields) {
                for each (var field:AnalysisItemDispatcher in _fields) {
                    if (item.analysisItemID == field.analysisItem.analysisItemID) {
                        item.key = field.analysisItem.key;
                    }
                }
            }
            saveSource();
        }

        private function onChange():void {
            _fields.refresh();
        }

        private function selectAll():void {
            for each (var dispatcher:AnalysisItemDispatcher in _fields) {
                dispatcher.indexed = true;
            }
        }

        private function unselectAll():void {
            for each (var dispatcher:AnalysisItemDispatcher in _fields) {
                dispatcher.indexed = false;
            }
        }
        ]]></mx:Script>
    <mx:HBox>
        <mx:Button label="Select All" click="selectAll()" styleName="grayButton"/>
        <mx:Button label="Unselect All" click="unselectAll()" styleName="grayButton"/>
        <mx:ComboBox dataProvider="{dataSources}" labelField="dataSourceName" change="onChange()" id="dataSourceBox"/>
    </mx:HBox>
    <mx:DataGrid dataProvider="{_fields}" width="950" height="100%" id="dataGrid">
        <mx:columns>
            <util:EIDataGridColumn dataField="display" headerText="Field" width="900"/>
            <util:EIDataGridColumn headerText="" itemRenderer="com.easyinsight.google.IndexCheckbox" width="100"/>
        </mx:columns>
    </mx:DataGrid>
    <mx:HBox>
        <util:SaveButton label="Save" click="save()"/>
        <util:CancelButton label="Cancel" click="PopUpManager.removePopUp(this)"/>
    </mx:HBox>
</feed:DataSourceWindow>
