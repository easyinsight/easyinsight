<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" 
	creationComplete="retrieveSpreadsheets()"
	label="Google" width="100%" height="100%" xmlns:local="com.easyinsight.*" xmlns:listing="com.easyinsight.listing.*" 
	doubleClickEnabled="true">
	<mx:Metadata>
		[Event(name="userConfigComplete", type="com.easyinsight.customupload.UploadConfigEvent")]
		[Event(name="userConfigCancel", type="com.easyinsight.customupload.UploadConfigEvent")]
	</mx:Metadata>
	<mx:states>
		<mx:State name="notLoggedIn">
			<mx:RemoveChild target="{coreHBox}"/>
			<mx:RemoveChild target="{spreadsheetTree}"/>
			<mx:AddChild relativeTo="{coreContent}">
				<listing:GottaLoginPage loginEvent2="currentState=''; retrieveSpreadsheets()"/>
			</mx:AddChild>
		</mx:State>
	</mx:states>
	<mx:Script>
		<![CDATA[
        import com.easyinsight.genredata.AnalyzeEvent;
        import com.easyinsight.util.PopUpUtil;
        import com.easyinsight.util.ProgressAlert;

        import mx.collections.ArrayCollection;

        import mx.managers.PopUpManager;

        [Bindable]
        private var googleSpreadsheets:ArrayCollection = new ArrayCollection();

        [Bindable]
        private var connectMessage:String = "";

        [Bindable]
        [Embed(source="../../../../assets/tables_x16.png")]
        public var spreadsheetIcon:Class;

        [Bindable]
        [Embed(source="../../../../assets/table_x16.png")]
        public var worksheetIcon:Class;

        private var _straightToConnect:Boolean;


        public function set straightToConnect(value:Boolean):void {
            _straightToConnect = value;
        }        

        private function worksheetClick():void {
            if (spreadsheetTree.selectedItem != null) {
                trace(spreadsheetTree.selectedItem.dataFeedID);
            }
        }

        private function passThrough(event:Event):void {
            dispatchEvent(event);
        }

        private function retrieveSpreadsheets():void {
            //addEventListener(UploadConfigEvent.UPLOAD_CONFIG_COMPLETE, onComplete);
            dataService.getAvailableGoogleSpreadsheets.send();
            addEventListener(AnalyzeEvent.ANALYZE, analyze);
        }

        private function processSpreadsheets():void {
            connectMessage = "Successfully connected to Google Spreadsheets.";
            progressBar.visible = false;
            var spreadsheets:ArrayCollection = dataService.getAvailableGoogleSpreadsheets.lastResult as ArrayCollection;
            this.googleSpreadsheets = spreadsheets;
            spreadsheetTree.rowCount = spreadsheets.length;
            spreadsheetTree.visible = true;
            stackIndex = 1;
        }

        private function attemptGoogleConnect():void {
            ProgressAlert.alert(this, "Attempting to connect to Google...", null, tokenService.isTokenEstablished);
            tokenService.isTokenEstablished.send(1);
        }

        private function onKeyUp(event:KeyboardEvent):void {
            if (event.keyCode == Keyboard.ENTER) {
                attemptGoogleConnect();
            }
        }

        /*private function doubleClicked(event:ListEvent):void {
         var selectedObject:Object = event.currentTarget.selectedItem;
         if (selectedObject is Worksheet) {
         var worksheet:Worksheet = selectedObject as Worksheet;
         dispatchEvent(new AnalyzeEvent(new DescriptorAnalyzeSource(worksheet.feedDescriptor)));
         }
         }*/

        private function gotToken():void {
            var result:Boolean = tokenService.isTokenEstablished.lastResult as Boolean;
            if (result) {
                ProgressAlert.alert(this, "Retrieving available spreadsheets...", null, dataService.getAvailableGoogleSpreadsheets);
                dataService.getAvailableGoogleSpreadsheets.send();
            } else {
                ProgressAlert.alert(this, "Generating Google URL...", null, tokenService.getAuthSubURL);
                tokenService.getAuthSubURL.send(1);
            }
        }

        private function gotURL():void {
            var window:AuthSubNavWindow = new AuthSubNavWindow();
            window.googleURL = tokenService.getAuthSubURL.lastResult as String;
            PopUpManager.addPopUp(window, this, true);
            PopUpUtil.centerPopUp(window);
        }

        private function analyze(event:AnalyzeEvent):void {
            dispatchEvent(event);
        }

        private var stackIndex:int = 0;
                ]]>
	</mx:Script>
	<mx:RemoteObject id="dataService" destination="google">
		<mx:method name="getAvailableGoogleSpreadsheets" result="processSpreadsheets()"/>
	</mx:RemoteObject>
    <mx:RemoteObject id="tokenService" destination="tokenService">
        <mx:method name="isTokenEstablished" result="gotToken()"/>
        <mx:method name="getAuthSubURL" result="gotURL()"/>
    </mx:RemoteObject>
	<mx:WipeRight id="wipeIn" duration="1000"/>
	<mx:ViewStack id="coreContent" width="100%" height="100%" selectedIndex="{stackIndex}" resizeToContent="true"
            creationPolicy="all">
		<mx:HBox id="coreHBox" width="100%" height="100%" horizontalAlign="center" verticalAlign="middle">
            <mx:ProgressBar id="progressBar" indeterminate="true" label="Retrieving the available spreadsheets..."/>
		</mx:HBox>
        <mx:Box width="100%" height="100%">
            <mx:AdvancedDataGrid width="100%" height="100%"
                id="spreadsheetTree" rowHeight="28" fontSize="12" rowCount="5" visible="false" showEffect="{wipeIn}"
                defaultLeafIcon="{worksheetIcon}" folderOpenIcon="{spreadsheetIcon}" folderClosedIcon="{spreadsheetIcon}">
                <mx:dataProvider>
                    <mx:HierarchicalData source="{googleSpreadsheets}"/>
                </mx:dataProvider>
                <mx:columns>
                    <mx:AdvancedDataGridColumn headerText="Name" dataField="title" headerRenderer="com.easyinsight.groups.CustomGroupHeader"/>
                    <mx:AdvancedDataGridColumn id="spFeed" width="80" sortable="false" headerText="" dataField="url" itemRenderer="com.easyinsight.google.SpreadsheetFeedButton"/>
                </mx:columns>
            </mx:AdvancedDataGrid>
        </mx:Box>
	</mx:ViewStack>
</mx:Canvas>
