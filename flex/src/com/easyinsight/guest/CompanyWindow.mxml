<?xml version="1.0"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:guest="com.easyinsight.guest.*" width="100%" height="100%"
         horizontalAlign="center" paddingLeft="30" paddingRight="30"
         paddingBottom="30" paddingTop="30" creationComplete="authService.getScenarios.send()">
    <mx:Metadata>
        [Event(name="loginEvent2", type="com.easyinsight.framework.LoginEvent")]
        [Event(name="cancel", type="flash.events.Event")]
    </mx:Metadata>
    <mx:Script><![CDATA[
        import com.easyinsight.framework.LoginEvent;
        import com.easyinsight.framework.UserServiceResponse;

        import mx.collections.ArrayCollection;
        import mx.events.ListEvent;
        import mx.messaging.config.ServerConfig;
        import mx.rpc.AsyncResponder;
        import mx.rpc.AsyncToken;
        import mx.rpc.events.FaultEvent;
        import mx.rpc.events.ResultEvent;

        private function onScenarioSelect():void {
            authService.loginScenario.send(scenario.scenarioKey);
        }

        private function handleAuthentication():void {
            var authResult:UserServiceResponse = authService.loginScenario.lastResult as UserServiceResponse;
            var successful:Boolean = authResult.successful;
            if (successful) {
                if (authService.channelSet == null) {
                    authService.channelSet = ServerConfig.getChannelSet(authService.destination);
                }
                var token:AsyncToken = authService.channelSet.login(authResult.userName, scenario.scenarioKey);
                token.addResponder(new AsyncResponder(
                        function (event:ResultEvent, token:Object = null):void {
                            switch (event.result) {
                                case "success":
                                    authResult.scenario = scenario;
                                    dispatchEvent(new LoginEvent(LoginEvent.LOGIN, authResult));
                                    break;
                                default:
                                    trace(event.result);
                            }
                        },
                        function (event:FaultEvent, token:Object = null):void {
                        }));

            }
        }
        [Bindable]
        private var scenarios:ArrayCollection;

        private function gotScenarios():void {
            scenarios = authService.getScenarios.lastResult as ArrayCollection;
            scenario = scenarios.getItemAt(0) as Scenario;
            index = 1;
        }

        [Bindable]
        private var index:int;

        [Bindable]
        private var scenario:Scenario;

        private function onList(event:ListEvent):void {
            scenario = scenarios.getItemAt(event.rowIndex) as Scenario;
        }
        ]]></mx:Script>
    <mx:RemoteObject destination="login" id="authService">
        <mx:method name="loginScenario" result="handleAuthentication()"/>
        <mx:method name="getScenarios" result="gotScenarios()"/>
    </mx:RemoteObject>
    <mx:TextArea
            text="We have a variety of sample data available to give you a taste as to what sort of value Easy Insight can deliver for your business:"
            width="100%" fontSize="18" editable="false" selectable="false" height="50"/>
    <mx:Spacer height="100%"/>
    <mx:HBox width="100%" height="100%">
        <mx:VBox width="50%" horizontalAlign="center">
            <mx:ViewStack selectedIndex="{index}" resizeToContent="true">
                <mx:Box/>
                <guest:SelectedScenarioRenderer scenario="{scenario}" scenarioSelection="onScenarioSelect()"/>
            </mx:ViewStack>
        </mx:VBox>
        <mx:VBox width="50%" horizontalAlign="center" height="100%">
            <mx:List dataProvider="{scenarios}" selectedIndex="0" useRollOver="true" selectable="true" labelField="name" rowCount="2" itemClick="onList(event)" itemRenderer="com.easyinsight.guest.GuestScenarioRenderer"/>
            <mx:Spacer height="100%"/>
            <mx:Button label="Back" click="dispatchEvent(new Event('cancel'))"/>
        </mx:VBox>
    </mx:HBox>
    <mx:Spacer height="100%"/>

</mx:VBox>
