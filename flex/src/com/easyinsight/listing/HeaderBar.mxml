<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:listing="com.easyinsight.listing.*"
         width="100%" xmlns:easyinsight="com.easyinsight.*" horizontalGap="0" verticalGap="0" top="0" bottom="0"
         height="42" implements="com.easyinsight.listing.IHeaderBar" paddingTop="0" paddingBottom="0" paddingLeft="0"
         paddingRight="0"
         backgroundColor="#FFFFFF" borderThickness="0" borderStyle="solid" horizontalAlign="center">
    <mx:Metadata>
        [Event(name="listingChange", type="com.easyinsight.listing.ListingChangeEvent")]
        [Event(name="launchQuickSearch", type="com.easyinsight.listing.LaunchQuickSearchEvent")]
    </mx:Metadata>
    <mx:Script>
		<![CDATA[
        import com.easyinsight.framework.LoginEvent;
        import com.easyinsight.framework.ModulePerspective;
        import com.easyinsight.framework.PerspectiveInfo;
        import com.easyinsight.framework.User;
        import com.easyinsight.listing.HeaderListingOption;
        import com.easyinsight.listing.IPerspective;
        import com.easyinsight.preferences.UIConfiguration;
        import com.easyinsight.preferences.UIOption;

        import com.easyinsight.skin.ApplicationSkin;

        import mx.binding.utils.BindingUtils;
        import mx.events.ItemClickEvent;


        public function set headerBarBackgroundColor(value:uint):void {
            //setStyle("backgroundColor", value);
        }

        protected override function createChildren():void {
            super.createChildren();
            /*BindingUtils.bindProperty(this, "headerBarBackgroundColor", ApplicationSkin.instance(), "headerBarBackgroundColor");
             BindingUtils.bindProperty(this, "headerBarLogo", ApplicationSkin.instance(), "headerBarLogo");*/
        }

        [Bindable]
        private var loggedIn:Boolean = false;

        private static function findNode(targetPage:String, items:ArrayCollection):HeaderListingOption {
            for each (var obj:HeaderListingOption in items) {
                if (obj.label == targetPage) {
                    return obj;
                }
            }
            return null;
        }

        private var perspectiveMap:Object = new Object();

        private function getPerspective(type:int):IPerspective {
            var perspective:IPerspective = perspectiveMap[String(type)];
            if (perspective == null) {
                perspective = new ModulePerspective(new PerspectiveInfo(type));
                perspectiveMap[type] = perspective;
            }
            return perspective;
        }

        public function explicitChange(targetPage:String, properties:Object):void {

            var listingOption:HeaderListingOption = findNode(targetPage, nodes);
            if (listingOption != null) {
                toggleBar.selectedIndex = nodes.getItemIndex(listingOption);
                dispatchEvent(new ListingChangeEvent(getPerspective(listingOption.perspective), properties));
            }

        }

        private function choseButton(event:ItemClickEvent):void {
            var option:HeaderListingOption = event.item as HeaderListingOption;
            dispatchEvent(new ListingChangeEvent(getPerspective(option.perspective)));
        }
        ]]>
    </mx:Script>
    <mx:ArrayCollection id="nodes">
        <mx:Array>
            <listing:HeaderListingOption label="Home" perspective="{PerspectiveInfo.HOME_PAGE}"/>
            <listing:HeaderListingOption label="Connections" perspective="{PerspectiveInfo.CONNECTIONS}"/>
            <listing:HeaderListingOption label="Exchange" perspective="{PerspectiveInfo.EXCHANGE}"/>
            <listing:HeaderListingOption label="Scheduling" perspective="{PerspectiveInfo.SCHEDULING}"/>
            <listing:HeaderListingOption label="Account" perspective="{PerspectiveInfo.ACCOUNT}"/>
            <listing:HeaderListingOption label="Help" perspective="{PerspectiveInfo.HELP}"/>
        </mx:Array>
    </mx:ArrayCollection>
    <mx:HBox width="1000" verticalAlign="middle">

        <mx:ToggleButtonBar buttonStyleName="topGrayButton" dataProvider="{nodes}" itemClick="choseButton(event)"
                            fontSize="24" height="38" selectedButtonTextStyleName="headerSelected"
                            top="0" bottom="0" id="toggleBar" themeColor="#FFFFFF">
        </mx:ToggleButtonBar>
        <mx:Spacer width="100%"/>
        <listing:WhatsNewButton styleName="solidMenuButton"/>
        <listing:SearchButton styleName="solidMenuButton"/>
        <!--<easyinsight:NewLoggedOnStatus/>-->
        <easyinsight:AltLoggedOnStatus/>
    </mx:HBox>
    <mx:Canvas width="100%" backgroundColor="#0084B4" height="4"/>
</mx:VBox>
