<?xml version="1.0" encoding="utf-8"?>
<mx:HBox xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:listing="com.easyinsight.listing.*"
         width="100%" borderStyle="none" xmlns:easyinsight="com.easyinsight.*" horizontalGap="0" verticalAlign="middle"
        creationComplete="setup()" height="68" implements="com.easyinsight.listing.IHeaderBar">
    <mx:Metadata>
        [Event(name="listingChange", type="com.easyinsight.listing.ListingChangeEvent")]
        [Event(name="launchQuickSearch", type="com.easyinsight.listing.LaunchQuickSearchEvent")]
    </mx:Metadata>
    <mx:Script>
		<![CDATA[
        import com.easyinsight.framework.ModulePerspective;
        import com.easyinsight.framework.PerspectiveInfo;
        import com.easyinsight.listing.IPerspective;
        import com.easyinsight.preferences.UIConfiguration;
        import com.easyinsight.preferences.UIOption;
        import com.easyinsight.skin.ApplicationSkin;

        import mx.binding.utils.BindingUtils;
        import mx.states.RemoveChild;

        private function setup():void {
            if (ApplicationSkin.instance().headerBarLogo != null) {
                logoImage.source = ApplicationSkin.instance().headerBarLogo;
            }
        }
        
        private var home:IPerspective = new ModulePerspective(new PerspectiveInfo(PerspectiveInfo.HOME_PAGE));

        public function set headerBarBackgroundColor(value:uint):void {
            setStyle("backgroundColor", value);
        }

        protected override function createChildren():void {
            super.createChildren();
            BindingUtils.bindProperty(this, "headerBarBackgroundColor", ApplicationSkin.instance(), "headerBarBackgroundColor");
            BindingUtils.bindProperty(this, "headerBarLogo", ApplicationSkin.instance(), "headerBarLogo");
        }

        private var _headerBarLogo:Object;

        public function set headerBarLogo(value:Object):void {
            _headerBarLogo = value;
            if (value is Bitmap) {
                var bitmap:Bitmap = ApplicationSkin.instance().headerBarLogo as Bitmap;
                logoImage.source = new Bitmap(bitmap.bitmapData);
            } else {
                logoImage.source = logo;
            }
        }

        [Bindable]
        [Embed(source="../../../../assets/logo2.PNG")]
        private var logo:Class;

        [Bindable]
        private var loggedIn:Boolean = false;

        private function onListingChange(event:ListingChangeEvent):void {
            //dispatchEvent(event);
        }

        private function findNode(targetPage:String, items:Array):ListingOption {
            for each (var obj:Object in items) {
                if (obj is ListingOption) {
                    var listingOption:ListingOption = obj as ListingOption;
                    if (listingOption.displayName == targetPage) {
                        return listingOption;
                    }
                }
            }
            return null;
        }

        public function explicitChange(targetPage:String, properties:Object):void {
            dispatchEvent(new ListingChangeEvent(home, properties));
        }

        private function evaluate(listingOption:ListingOption, key:String, uiConfig:UIConfiguration, ops:Array):void {
            var uiOption:UIOption = uiConfig.getConfiguration(key);
            if (!uiOption.selected) {
                var removeChild:RemoveChild = new RemoveChild();
                removeChild.target = listingOption;
                ops.push(removeChild);
            }
        }
        ]]>
    </mx:Script>
    <mx:Image source="{logo}" id="logoImage" maxWidth="180" maxHeight="50"/>
    <mx:Spacer width="10"/>
    <mx:Spacer width="100%"/>
    <listing:SearchButton/>
    <mx:Spacer width="10"/>
    <easyinsight:LoggedOnStatus/>
</mx:HBox>
