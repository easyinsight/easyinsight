<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" verticalScrollPolicy="off" creationComplete="initComponent()">
	<mx:Script>
		<![CDATA[
			import mx.core.UIComponent;
			import mx.effects.Move;
			
			[Bindable]
			private var _dataProvider:Object = null;
			public function set dataProvider(value:Object):void {
				_dataProvider = value;
				for each (var obj:Object in _dataProvider) {
					var child:* = itemRenderer.newInstance();
					child.data = obj;
					this.contents.addChild(child);
				}
			}
		
			[Bindable]
			public var itemRenderer:IFactory = null;
			
			public static var UP:String = "up"
			public static var DOWN:String = "down" 
			
			private var maxSize:int;
			
			private var maxGap:int;
			
			[Bindable]
         	private var interval:uint;
			
			[Bindable]
			public var direction:String = UP;
			public function set dir(value:String):void {
				direction = value;
			}
			
			private var curr:UIComponent = null;
			
			[Bindable]
            private var mov:Move= new Move();
			
			private function initComponent():void {
				maxSize = contents.getChildren().length;
				interval = setInterval(marquee,100);
				maxGap = (contents.getChildAt(0) as UIComponent).height * maxSize - contents.height;
				trace(maxGap);
				
			}
			
			 private function stop():void{             	
             	clearInterval(interval); 
             }
             private function playAgain():void{
             	initComponent();
             }
             
           
             
             private function marquee():void
             {             	
             	for(var j:int = 0; j < maxSize ;j++)
             	{
             		curr = contents.getChildAt(j) as UIComponent;
             		
             		mov.repeatCount = 1;
             		mov.target = curr;
             		mov.duration = 0;
             		if(direction == UP)
             		{
             			downToUp();
             		}  
             		else
             		{
             			upToDown();
             		}       	
             		mov.play();	             	
             		
             	}  	
             }
             
             
             private function downToUp():void{
             
             	if(curr.y + curr.height <= -(maxGap))
             		{
             			mov.yFrom = curr.y;
             			mov.yTo = contents.height - curr.height;
             		}
             		else
             		{
             			mov.yFrom = curr.y;
             			mov.yTo = curr.y - 1;
             		}
             }
               
              private function upToDown():void{
               
	             if(curr.y > contents.height + maxGap)
	             		{
	             			mov.yFrom = curr.y;
	             			mov.yTo = contents.y ;
	             		}
	             		else
	             		{
	             			mov.yFrom = curr.y;
	             			mov.yTo = curr.y + 1;
	             		}
             }

			
			]]>
	</mx:Script>
	<mx:VBox id="contents" clipContent="true" width="100%" height="100%" verticalAlign="middle"></mx:VBox>
	
	
</mx:Canvas>
