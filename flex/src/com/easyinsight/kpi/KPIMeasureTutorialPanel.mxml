<?xml version="1.0" ?>
<kpi:KPITutorialPanel xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:kpi="com.easyinsight.kpi.*"
        implements="com.easyinsight.kpi.ITutorialPanel">
    <mx:Script><![CDATA[
        import com.easyinsight.analysis.AnalysisItem;
        import com.easyinsight.analysis.AnalysisItemTypes;
        import com.easyinsight.analysis.AnalysisMeasure;
        import com.easyinsight.analysis.FeedMetadata;

        import mx.collections.ArrayCollection;

        private var analysisMeasure:AnalysisMeasure;

        [Bindable]
        private var measures:ArrayCollection;

        public function gotFocus():void {
            analysisMeasure = kpiData.measure;
            dataService.getFeedMetadata.send(kpiData.dataSourceID);
        }

        public function saveValues():void {
            kpiData.measure = availableItemBox.selectedItem as AnalysisMeasure;
        }

        private function gotDefinition():void {
            var feedDefinition:FeedMetadata = dataService.getFeedMetadata.lastResult as FeedMetadata;
            // allFields = new ArrayCollection();

            var measures:ArrayCollection = new ArrayCollection();
            var dimensions:ArrayCollection = new ArrayCollection();
            for each (var analysisItem:AnalysisItem in feedDefinition.fields) {                
                if (analysisItem.hasType(AnalysisItemTypes.MEASURE)) {
                    measures.addItem(analysisItem);
                } else if (analysisItem.hasType(AnalysisItemTypes.DIMENSION)) {
                    dimensions.addItem(analysisItem);
                }
                /*var aNode:AnalysisItemNode = new AnalysisItemNode();
                 aNode.analysisItem = analysisItem;
                 allFields.addItem(new AnalysisItemWrapper(aNode));*/
            }
            this.measures = measures;

            //processFeed(feedDefinition);
            if (analysisMeasure != null) {
                var foundAnalysisItem:AnalysisItem = null;
                for (var i:int = 0; i < measures.length && foundAnalysisItem == null; i++) {
                    var analysisTest:AnalysisItem = measures.getItemAt(i) as AnalysisItem;
                    if (analysisTest.display == analysisMeasure.display) {
                        foundAnalysisItem = analysisTest;
                    }
                }
                if (foundAnalysisItem != null) {
                    var index:int = measures.getItemIndex(foundAnalysisItem);
                    measures.removeItemAt(index);
                    measures.addItemAt(analysisMeasure, index);
                    availableItemBox.selectedItem = analysisMeasure;
                }
            } else {
                if (measures.length > 0) {
                    analysisMeasure = measures.getItemAt(0) as AnalysisMeasure;
                }
            }
        }

        public function validate():Boolean {
            return true;
        }
        ]]></mx:Script>
    <mx:RemoteObject destination="data" id="dataService">
        <mx:method name="getFeedMetadata" result="gotDefinition()"/>
    </mx:RemoteObject>
    <mx:VBox width="100%" height="100%" verticalGap="0">
        <mx:Box height="50%" width="100%"  backgroundColor="#000000" horizontalAlign="center" verticalAlign="middle">
            <mx:Text text="What do you want to measure?" fontSize="24" color="#FFFFFF"/>
        </mx:Box>
        <mx:HBox verticalAlign="middle" horizontalAlign="center" height="50%" width="100%" backgroundColor="#FFFFFF">
            <mx:Label text="Measure: " fontSize="18"/>
            <mx:ComboBox id="availableItemBox" dataProvider="{measures}" labelField="display" fontSize="18"/>
        </mx:HBox>
    </mx:VBox>
</kpi:KPITutorialPanel>