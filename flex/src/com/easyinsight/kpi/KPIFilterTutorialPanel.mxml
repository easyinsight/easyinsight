<?xml version="1.0" ?>
<kpi:KPITutorialPanel xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:kpi="com.easyinsight.kpi.*"
                      xmlns:filtering="com.easyinsight.filtering.*"
                      implements="com.easyinsight.kpi.ITutorialPanel" creationComplete="setup()">
    <mx:Script><![CDATA[
        import com.easyinsight.analysis.AnalysisItem;
        import com.easyinsight.analysis.AnalysisItemNode;
        import com.easyinsight.analysis.AnalysisItemWrapper;
        import com.easyinsight.analysis.FeedMetadata;
        import com.easyinsight.commands.CommandEvent;
        import com.easyinsight.commands.CommandProcessor;
        import com.easyinsight.filtering.FilterDefinition;

        import mx.collections.ArrayCollection;

        [Bindable]
        private var feedID:int;
        [Bindable]
        private var allFields:ArrayCollection;
        [Bindable]
        private var availableDimensions:ArrayCollection;

        public function saveValues():void {
            kpiData.filters = transformContainer.getFilterDefinitions();
        }

        public function validate():Boolean {
            return true;
        }

        private function setup():void {
            commandProcessor = new CommandProcessor();
            addEventListener(CommandEvent.COMMAND, onCommand);
        }

        private var commandProcessor:CommandProcessor;

        private function onCommand(event:CommandEvent):void {
            commandProcessor.addCommand(event.command);
        }

        private function gotDefinition():void {
            var feedDefinition:FeedMetadata = dataService.getFeedMetadata.lastResult as FeedMetadata;
            explanation = feedDefinition.filterExampleMessage;
            // allFields = new ArrayCollection();

            allFields = new ArrayCollection();
            var dimensions:ArrayCollection = new ArrayCollection();            
            for each (var analysisItem:AnalysisItem in feedDefinition.fields) {
                dimensions.addItem(analysisItem);
                var aNode:AnalysisItemNode = new AnalysisItemNode();
                aNode.analysisItem = analysisItem;
                allFields.addItem(new AnalysisItemWrapper(aNode));
            }
            this.availableDimensions = dimensions;
            if (transformContainer.getFilterDefinitions().length == 0) {
                for each (var filter:FilterDefinition in feedDefinition.intrinsicFilters) {
                    transformContainer.addFilterDefinition(filter);
                }
            }
        }

        [Bindable]
        private var explanation:String;

        private var firstFocus:Boolean = false;

        public function gotFocus():void {
            if (!firstFocus) {
                feedID = kpiData.dataSourceID;
                for each (var filter:FilterDefinition in kpiData.filters) {
                    transformContainer.addFilterDefinition(filter);
                }
                dataService.getFeedMetadata.send(kpiData.dataSourceID);
                firstFocus = true;
            } else {
                
            }
        }]]></mx:Script>
    <mx:RemoteObject destination="data" id="dataService">
        <mx:method name="getFeedMetadata" result="gotDefinition()"/>
    </mx:RemoteObject>
    <mx:VBox width="100%" height="100%" verticalGap="0">
        <mx:VBox height="50%" width="100%"  backgroundColor="#000000" horizontalAlign="center" verticalAlign="middle">            
            <mx:Text text="How do you want to filter this KPI?" fontSize="24" color="#FFFFFF"/>            
            <mx:TextArea backgroundAlpha="0" borderStyle="none" selectable="false" editable="false"
                         text="{explanation}"
                     fontSize="18" color="#FFFFFF" width="500" height="140"/>
        </mx:VBox>
        <mx:HDividedBox height="50%" width="100%" backgroundColor="#FFFFFF" paddingBottom="5" paddingLeft="5" paddingRight="5" paddingTop="10">
            <mx:List dataProvider="{availableDimensions}" labelField="display"
                     dragEnabled="true"
                     dragMoveEnabled="false" width="30%"
                     height="100%"/>
            <mx:Canvas width="70%" height="100%">
                <filtering:TransformContainer id="transformContainer" width="100%" height="100%"
                                              borderStyle="solid"
                                              borderThickness="1" backgroundColor="#ffffff"
                                              backgroundAlpha=".1" feedID="{feedID}"
                                              analysisItems="{allFields}"
                                              paddingBottom="5" paddingLeft="5" paddingRight="5"
                                              paddingTop="5"/>
            </mx:Canvas>
        </mx:HDividedBox>
    </mx:VBox>

</kpi:KPITutorialPanel>