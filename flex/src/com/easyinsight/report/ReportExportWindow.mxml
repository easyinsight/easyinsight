<?xml version="1.0" ?>
<util:EISlimWindow xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:util="com.easyinsight.util.*"
                   xmlns:report="com.easyinsight.report.*"
                   creationComplete="onCreation()" horizontalAlign="center">
    <mx:Script><![CDATA[
        import com.easyinsight.analysis.AnalysisDefinition;
        import com.easyinsight.analysis.EmailReportWindow;
        import com.easyinsight.analysis.EmbedReportWindow;
        import com.easyinsight.analysis.ExcelCreator;
        import com.easyinsight.analysis.PDFCreator;
        import com.easyinsight.analysis.PNGCreator;
        import com.easyinsight.schedule.ReportDelivery;
        import com.easyinsight.schedule.ReportDeliveryScheduleWindow;

        import mx.managers.PopUpManager;

        private var _reportType:int;
        private var _dataSourceID:int;
        private var _reportName:String;
        private var _coreView:DisplayObject;

        private var _report:AnalysisDefinition;

        private function onCreation():void {
            stage.addEventListener(MouseEvent.MOUSE_DOWN, onMouseDown, false, 0, true);
        }

        private function onMouseDown(event:MouseEvent):void {
            var result:Boolean = hitTestPoint(event.stageX, event.stageY);
            if (!result) {
                close();
            }
        }

        protected override function commitProperties():void {
            super.commitProperties();
            _reportName = _report.name;
            _reportType = _report.reportType;
            _dataSourceID = _report.dataFeedID;
        }

        public function set report(value:AnalysisDefinition):void {
            _report = value;
        }

        public function set coreView(value:DisplayObject):void {
            _coreView = value;
        }

        private function excel():void {
            new ExcelCreator().exportExcel(_report, this);
            PopUpManager.removePopUp(this);
        }

        private function csv():void {

        }

        private function png():void {
            new PNGCreator().exportPNG(_coreView, this, _report.name);
            PopUpManager.removePopUp(this);
        }

        private function pdf():void {
            new PDFCreator().exportReportToPDF(_report, this, _coreView);
            PopUpManager.removePopUp(this);
        }


        private function url():void {
            //var escapedName:String = _reportName.replace(/[ @\"&*#$%^~]/g, "-");
            var url:String = "https://www.easy-insight.com/app/#reportID=" + _report.urlKey;
            var urlWindow:URLWindow = new URLWindow();
            urlWindow.x = this.x;
            urlWindow.y = this.y;
            urlWindow.url = url;
            PopUpManager.addPopUp(urlWindow, this, true);
            PopUpManager.removePopUp(this);
        }

        private function embed():void {
            var embedReportWindow:EmbedReportWindow = new EmbedReportWindow();
            embedReportWindow.reportName = _reportName;
            embedReportWindow.urlKey = _report.urlKey;
            embedReportWindow.dataSourceID = _dataSourceID;
            embedReportWindow.reportType = _reportType;
            embedReportWindow.x = this.x;
            embedReportWindow.y = this.y;
            PopUpManager.addPopUp(embedReportWindow, this, true);
            PopUpManager.removePopUp(this);
        }

        private function schedule():void {
            exportService.getReportDelivery.send(_report.analysisID, new Date().getTimezoneOffset());
        }

        private function gotReportDelivery():void {
            var delivery:ReportDelivery = exportService.getReportDelivery.lastResult as ReportDelivery;
            var window:ReportDeliveryScheduleWindow = new ReportDeliveryScheduleWindow();
            window.fixedReportID = _report.analysisID;
            window.fixedReportName = _reportName;
            window.fixedReportURLKey = _report.urlKey;
            window.activity = delivery;
            window.x = this.x;
            window.y = this.y;
            PopUpManager.addPopUp(window, this, true);
            PopUpManager.removePopUp(this);
        }

        private function email():void {
            var window:EmailReportWindow = new EmailReportWindow();
            window.report = _report;
            window.coreView = _coreView;
            window.x = this.x;
            window.y = this.y;
            PopUpManager.addPopUp(window, this, true);
            PopUpManager.removePopUp(this);
        }
        ]]></mx:Script>
    <mx:RemoteObject id="exportService" destination="exportService">
        <mx:method name="getReportDelivery" result="gotReportDelivery()"/>
    </mx:RemoteObject>
    <mx:HBox>
        <report:BigButtonNoDescription imageClass="@Embed(source='../../../../assets/table.png')"
                          headerText="Export to Excel"
                          click="excel()"/>
        <report:BigButtonNoDescription imageClass="@Embed(source='../../../../assets/document_chart.png')"
                          headerText="Export to PDF"
                          click="pdf()"/>
    </mx:HBox>
    <mx:HBox>
        <report:BigButtonNoDescription imageClass="@Embed(source='../../../../assets/camera.png')"
                          headerText="Export to PNG"
                          click="png()"/>
        <report:BigButtonNoDescription imageClass="@Embed(source='../../../../assets/calendar.png')"
                          headerText="Scheduling"
                          click="schedule()"/>
    </mx:HBox>
    <mx:HBox>
        <report:BigButtonNoDescription imageClass="@Embed(source='../../../../assets/mail.png')"
                          headerText="Email"
                          click="email()"/>
        <report:BigButtonNoDescription imageClass="@Embed(source='../../../../assets/plasma_tv.png')"
                          headerText="Embed Report into Website"
                          click="embed()"/>
    </mx:HBox>
    <util:CancelButton label="Cancel" click="this.close()"/>
</util:EISlimWindow>