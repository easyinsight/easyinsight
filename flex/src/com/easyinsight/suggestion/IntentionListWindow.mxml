<?xml version="1.0"?>
<util:EISlimWindow xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:util="com.easyinsight.util.*"
        creationComplete="onCreation()">
    <mx:Script><![CDATA[
        import com.easyinsight.SimpleReportEditor;
        import com.easyinsight.analysis.AnalysisDefinition;
        import com.easyinsight.analysis.DataViewFactory;
        import com.easyinsight.datasources.DataSourceInfo;
        import com.easyinsight.filtering.TransformContainer;
        import com.easyinsight.util.PopUpUtil;

        import mx.collections.ArrayCollection;
        import mx.events.FlexEvent;
        import mx.managers.PopUpManager;

        [Bindable]
        public var suggestions:ArrayCollection;

        private var _report:AnalysisDefinition;

        private var _dataView:DataViewFactory;

        private var _fields:ArrayCollection;

        private var _transformContainer:TransformContainer;

        private var _allFields:ArrayCollection;

        private var _wrappers:ArrayCollection;

        private var _dataSourceDisplay:DataSourceInfo;

        private var _simpleReportEditor:SimpleReportEditor;

        public function get simpleReportEditor():SimpleReportEditor {
            return _simpleReportEditor;
        }

        public function set simpleReportEditor(value:SimpleReportEditor):void {
            _simpleReportEditor = value;
        }

        public function set dataSourceDisplay(value:DataSourceInfo):void {
            _dataSourceDisplay = value;
        }

        public function set allFields(value:ArrayCollection):void {
            _allFields = value;
        }

        public function set wrappers(value:ArrayCollection):void {
            _wrappers = value;
        }

        public function set transformContainer(value:TransformContainer):void {
            _transformContainer = value;
        }

        public function set fields(value:ArrayCollection):void {
            _fields = value;
        }

        public function set dataView(value:DataViewFactory):void {
            _dataView = value;
        }

        private function onCreation():void {
            addEventListener(IntentionEvent.SUGGESTION_CHOICE, onIntentionChoice);
            suggestionList.rowCount = suggestions.length + 1;
        }

        public function set report(value:AnalysisDefinition):void {
            _report = value;
        }

        private function onUpdateComplete(event:FlexEvent):void {
            suggestionList.removeEventListener(FlexEvent.UPDATE_COMPLETE, onUpdateComplete);
            PopUpUtil.centerPopUp(this);
        }

        private function onIntentionChoice(event:IntentionEvent):void {
            if (event.suggestion.requiresServerCallback) {
                analysisService.getIntentions.send(_report, _fields, event.suggestion.scope, event.suggestion.type);
            } else {
                if (_report != null) {
                    new SuggestionFactory(simpleReportEditor).argh(event.suggestion.type, _fields, _report.dataFeedID);
                    PopUpManager.removePopUp(this);
                }
            }
        }

        private function gotIntentions():void {
            var intentions:ArrayCollection = analysisService.getIntentions.lastResult as ArrayCollection;
            var metadata:SuggestionMetadata = new SuggestionMetadata(_report, _transformContainer, _allFields, _wrappers, _dataSourceDisplay, _simpleReportEditor);
            for each (var intention:Intention in intentions) {
                intention.addEventListener(IntentionTriggerEvent.INTENTION_TRIGGER, onIntentionEvent);
                intention.apply(metadata);
            }
            if (_dataView != null) {
                _dataView.refresh();
            }
            PopUpManager.removePopUp(this);
        }

        private function onIntentionEvent(event:IntentionTriggerEvent):void {
            dispatchEvent(event);
        }

        [Bindable]
        public var windowLabel:String = "Suggestions";
        ]]></mx:Script>
    <mx:RemoteObject id="analysisService" destination="analysisDefinition">
        <mx:method name="getIntentions" result="gotIntentions()"/>
    </mx:RemoteObject>
    <mx:Text text="{windowLabel}"/>
    <mx:HRule width="100%"/>
    <mx:List dataProvider="{suggestions}" itemRenderer="com.easyinsight.suggestion.IntentionRenderer" selectable="false" variableRowHeight="true"
            id="suggestionList" width="700" borderStyle="none" maxHeight="500"/>
    <util:CancelButton label="Cancel" click="PopUpManager.removePopUp(this)"/>
</util:EISlimWindow>
