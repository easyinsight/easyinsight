<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:listing="com.easyinsight.listing.*"
         xmlns:goals="com.easyinsight.goals.*" xmlns:util="com.easyinsight.util.*"
         implements="com.easyinsight.listing.IPerspective" creationComplete="onCreation()" width="100%" height="100%"
         doubleClickEnabled="true" verticalGap="0">
    <mx:states>
        <mx:State name="notLoggedIn">
            <mx:RemoveChild target="{controlsBox}"/>
            <mx:RemoveChild target="{dataBoxes}"/>
            <mx:AddChild relativeTo="{coreContent}">
                <listing:GottaLoginPage/>
            </mx:AddChild>
        </mx:State>
        <mx:State name="functionalityUnavailable">
            <mx:RemoveChild target="{controlsBox}"/>
            <mx:RemoveChild target="{dataBoxes}"/>
            <mx:AddChild relativeTo="{coreContent}">
                <goals:GoalFunctionalityUnavailable/>
            </mx:AddChild>
        </mx:State>
        <mx:State name="noGoalsIndividual">
            <mx:RemoveChild target="{controlsBox}"/>
            <mx:RemoveChild target="{dataBoxes}"/>
            <mx:AddChild relativeTo="{coreContent}">
                <mx:VBox width="100%">
                    <mx:HBox width="100%">
                        <mx:Image source="{screenshot}"/>
                        <mx:VBox height="100%" width="100%" verticalAlign="middle">
                            <mx:TextArea editable="false" text="Goals provide you with a broad strategic view of your improvement on key metrics. Starting with a high level overall goal, you repeatedly subdivide into the various lower level goals that will bring you closer to achieving that overall goal."
                                    borderStyle="none" width="100%" fontSize="14" height="120"/>
                        </mx:VBox>
                    </mx:HBox>
                    <mx:HBox width="100%" paddingLeft="30" paddingRight="30">
                        <mx:TextArea editable="false"  text="You can't use any of the goal functionality with your account level. You'll have to upgrade to Group or higher for access to the functionality."
                                width="100%" borderStyle="none" fontSize="14"/>
                    </mx:HBox>
                </mx:VBox>
            </mx:AddChild>
        </mx:State>
        <mx:State name="noGoalsPro">
            <mx:RemoveChild target="{goalTreesBox}"/>
            <mx:RemoveChild target="{dataBoxes}"/>
            <mx:AddChild relativeTo="{coreContent}">
                <mx:VBox width="100%" verticalGap="15">
                    <mx:HBox width="100%" horizontalGap="10">
                        <mx:Image source="{screenshot}"/>
                        <mx:VBox height="100%" width="100%" verticalAlign="middle">
                            <mx:TextArea editable="false"  text="Goals provide you with a broad strategic view of your improvement on key metrics. Starting with a high level overall goal, you repeatedly subdivide into the various lower level goals that will bring you closer to achieving that overall goal."
                                    borderStyle="none" width="100%" fontSize="14" height="150"/>
                        </mx:VBox>
                    </mx:HBox>
                    <mx:HBox width="100%" paddingLeft="30" paddingRight="30">
                        <mx:TextArea editable="false"  text="You can start by importing goal trees from solutions or by clicking Create New Goal... above. From there, you can customize the tree, altering template goals to match your specific scenarios, drag in additional trees to rapidly build out a tree, and associating relevant data sources and reports to goals."
                            width="100%" borderStyle="none" fontSize="14" height="60"/>
                    </mx:HBox>
                </mx:VBox>
            </mx:AddChild>
        </mx:State>
    </mx:states>
    <mx:Script>
		<![CDATA[
        import com.easyinsight.account.Account;

        import mx.controls.Alert;
        import mx.events.CloseEvent;
        import mx.events.ListEvent;
        import mx.managers.PopUpManager;
        import mx.utils.URLUtil;
        import mx.managers.BrowserManager;

        import com.easyinsight.framework.LoginEvent;
        import com.easyinsight.framework.User;
        import com.easyinsight.listing.AnalyzeSource;
        import com.easyinsight.genredata.AnalyzeEvent;
        import com.easyinsight.util.ProgressAlert;

        import mx.collections.ArrayCollection;

        private function onGoalDetail(event:GoalDetailEvent):void {
            dispatchEvent(new AnalyzeEvent(new GoalDetailAnalyzeSource(event.goalTreeNodeData)));
        }

        private var deleteID:int;

        [Bindable]
        private var addGoalTreeAvailable:Boolean = false;

        private var fileRef:FileReference;

        [Bindable]
        private var goalTrees:ArrayCollection;

        [Bindable]
        private var myGoals:ArrayCollection;

        [Bindable]
        [Embed(source="../../../../assets/branch_add.png")]
        public var addIcon:Class;

        [Bindable]
        [Embed(source="../../../../assets/document_gear.png")]
        public var downloadYahooWidget:Class;

        [Bindable]
        [Embed(source="../../../../assets/calendar_list.png")]
        public var calendarIcon:Class;

        [Bindable]
        [Embed(source="../../../../assets/goalsscreenshot.JPG")]
        public var screenshot:Class;

        private function createGoalTree():void {
            dispatchEvent(new AnalyzeEvent(new GoalTreeAdminAnalyzeSource(0)));
        }

        public function analyze():AnalyzeSource {
            return null;
        }

        private function onCreation():void {
            User.getEventNotifier().addEventListener(LoginEvent.LOGIN, onLogin);
            addEventListener(DeleteGoalTreeEvent.DELETE_GOAL_TREE, onDelete);
        }

        private function onDelete(event:DeleteGoalTreeEvent):void {
            deleteID = event.goalTree.id;
            Alert.show("Are you sure you want to delete the goal tree?", "Alert",
                    Alert.OK | Alert.CANCEL, this, alertListener, null, Alert.CANCEL);
        }

        private function alertListener(event:CloseEvent):void {
            if (event.detail == Alert.OK) {
                ProgressAlert.alert(this, "Deleting goal tree...", "Deleted goal tree!", goalService.deleteGoalTree);
                goalService.deleteGoalTree.send(deleteID);
            }
        }

        private function onLogin(event:LoginEvent):void {
            gotFocus();
        }

        public function gotFocus():void {
            var fragmentObject:Object = new Object();
            fragmentObject.page = "myGoals";
            BrowserManager.getInstance().setTitle("Easy Insight - Goals");
            var fragmentString:String = URLUtil.objectToString(fragmentObject);
            BrowserManager.getInstance().setFragment(fragmentString);
            var user:User = User.getInstance();
            if (user == null) {
                currentState = "notLoggedIn";
            } else {
                if (User.getInstance().getAccountType() == Account.FREE) {
                    currentState = "functionalityUnavailable";
                } else {
                    if (currentState != "") {
                        currentState = "";
                    }
                    addGoalTreeAvailable = User.getInstance().getAccountType() >= Account.GROUP;
                    goalService.getGoalTrees.send();
                    myGoalsGrid.gotFocus();
                }
            }
        }

        private function deletedTree():void {
            goalService.getGoalTrees.send();
        }

        public function getDefaultAnalyzeState():Boolean {
            return false;
        }

        public function isKeywordSearchInstant():Boolean {
            return false;
        }

        private function netvibes():void {
            flash.net.navigateToURL(new URLRequest("http://www.netvibes.com/subscribe.php?module=UWA&moduleUrl=" + escape("https://www.easy-insight.com/app/widgets/UWAGoalsWidget.html")));
        }

        private function igoogle():void {
            flash.net.navigateToURL(new URLRequest("http://www.google.com/ig/add?moduleurl=" + escape("http://www.netvibes.com/api/uwa/compile/google.php?moduleUrl=" + escape("https://www.easy-insight.com/app/widgets/UWAGoalsWidget.html"))));
        }

        private function gotTrees():void {
            goalTrees = goalService.getGoalTrees.lastResult as ArrayCollection;
            if (goalTrees.length == 0) {
                if (User.getInstance().getAccountType() == Account.INDIVIDUAL) {
                    currentState = "noGoalsIndividual";
                } else {
                    currentState = "noGoalsPro";
                }
            }
        }

        private function gridDoubleClick(event:ListEvent):void {
            if (goalTreesBox.selectedItem != null) {
                var goalTree:GoalTreeDescriptor = goalTreesBox.selectedItem as GoalTreeDescriptor;
                dispatchEvent(new AnalyzeEvent(new GoalTreeAdminAnalyzeSource(goalTree.id)));
            }
        }

        private function downloadWidget():void {

            fileRef = new FileReference();

            var request:URLRequest = new URLRequest("/app/assets/goalswidget.widget");
            request.method = URLRequestMethod.GET;

            fileRef = new FileReference();
            fileRef.addEventListener(Event.CANCEL, doEvent);
            fileRef.addEventListener(Event.COMPLETE, complete);
            fileRef.addEventListener(Event.OPEN, doEvent);
            fileRef.addEventListener(Event.SELECT, doEvent);
            fileRef.addEventListener(HTTPStatusEvent.HTTP_STATUS, doEvent);
            fileRef.addEventListener(IOErrorEvent.IO_ERROR, doEvent);
            fileRef.addEventListener(ProgressEvent.PROGRESS, doEvent);
            fileRef.addEventListener(SecurityErrorEvent.SECURITY_ERROR, doEvent);

            fileRef.download(request, "goalswidget.widget");
        }

        private function complete(event:Event):void {
			Alert.show("This downloaded widget will allow you to see your monitored goals. You can add it to your widgets by selecting Open Widget... from your Yahoo Widgets dock.");
            fileRef = null;
		}

        private function doEvent(event:Event):void {
        }

        private function manageMilestones():void {
            var window:MilestonesWindow = new MilestonesWindow();
            PopUpManager.addPopUp(window, this, true);
            PopUpManager.centerPopUp(window);
        }
		]]>
    </mx:Script>
    <mx:RemoteObject destination="goalService" id="goalService">
        <mx:method name="getGoalTrees" result="gotTrees()"/>
        <mx:method name="deleteGoalTree" result="deletedTree()"/>
    </mx:RemoteObject>
    <mx:VBox height="100%" width="100%" backgroundColor="#818285" horizontalAlign="center">
        <mx:VBox width="1000" height="100%" paddingTop="10" paddingBottom="10" paddingLeft="10"
                 paddingRight="10" verticalGap="10" backgroundColor="#ffffff" id="coreContent">
            <mx:HBox width="100%" id="controlsBox">
                <mx:Button toolTip="Add Goal Tree..." click="createGoalTree()" id="uploadButton" icon="{addIcon}"
                           label="Add Goal Tree" labelPlacement="bottom" visible="{addGoalTreeAvailable}"/>
                <mx:Button toolTip="Manage Milestones..." click="manageMilestones()" id="milestonesButton" icon="{calendarIcon}"
                           label="Milestones" labelPlacement="bottom"/>
                <!--<mx:Button icon="@Embed('../../../../assets/helpx48.png')" label="Help..." labelPlacement="bottom"/>-->
            </mx:HBox>
            <mx:VDividedBox width="100%" height="100%" id="dataBoxes">
                <mx:DataGrid dataProvider="{goalTrees}" width="100%" id="goalTreesBox"
                         itemDoubleClick="gridDoubleClick(event)">
                    <mx:columns>
                        <util:EIDataGridColumn headerText="Goal Tree Name" dataField="name"/>
                        <util:EIDataGridColumn headerText="" dataField="goalTreeName" width="150"
                                               itemRenderer="com.easyinsight.goals.MyGoalsControls" sortable="false"/>
                    </mx:columns>
                </mx:DataGrid>
                <mx:VBox height="100%" width="100%">
                    <mx:HBox>
                        <mx:Button toolTip="Download Yahoo Widget for Goal Display..." click="downloadWidget()" id="downloadYahooWidgetButton" icon="@Embed(source='../../../../assets/document_gear_x16.png')"
                           label="Yahoo! Widget"/>
                        <mx:Button id="igoogleButton" toolTip="Add to iGoogle"
                           icon="@Embed(source='../../../../assets/uwa-google.png')" click="igoogle()" />
                        <mx:Button id="netvibesButton" toolTip="Add to Netvibes"
                           icon="@Embed(source='../../../../assets/uwa-netvibes.png')" click="netvibes()" />
                    </mx:HBox>
                    <goals:MyGoalsGrid id="myGoalsGrid" width="100%" height="100%" goalDetailNav="onGoalDetail(event)"/>
                </mx:VBox>
                </mx:VDividedBox>
        </mx:VBox>
    </mx:VBox>
</mx:VBox>
