<?xml version="1.0" encoding="utf-8"?>
<mx:HBox xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:goals="com.easyinsight.goals.*" width="100%" height="100%" creationComplete="populateData()" borderStyle="solid"
        paddingTop="10" paddingLeft="10" paddingRight="10" paddingBottom="10">
    <mx:Metadata>
        [Event(name="splitTree", type="com.easyinsight.goals.SplitGoalTreeEvent")]
    </mx:Metadata>
	<mx:Script> 
		<![CDATA[
import com.easyinsight.util.ProgressAlert;

        import mx.collections.ArrayCollection;
import mx.collections.Sort;
import mx.collections.SortField;

[Bindable]
        private var _goalTreeNode:GoalTreeNode;

        private var _goalTreeID:int;

        [Bindable]
        private var solutions:ArrayCollection;

        [Bindable]
        private var kpis:ArrayCollection;
        [Bindable]
        private var goalTrees:ArrayCollection;
        [Bindable]
        private var accountTrees:ArrayCollection;        

        [Bindable]
        [Embed(source="../../../../assets/component_x16.png")]
        private var solutionIcon:Class;

        [Bindable]
        [Embed(source="../../../../assets/branchx16.png")]
        private var goalIcon:Class;

        [Bindable]
        [Embed(source="../../../../assets/data_blue_x16.png")]
        private var dataSourceIcon:Class;

        [Bindable]
        [Embed(source="../../../../assets/chart_pie2.png")]
        private var reportIcon:Class;

        private function populateData():void {
            accordion.getHeaderAt(0).setStyle("fontSize", 12);
            accordion.getHeaderAt(0).setStyle("icon", goalIcon);
            accordion.getHeaderAt(0).labelPlacement = "right";
            accordion.getHeaderAt(0).setStyle("fontfamily", "Tahoma");
            accordion.getHeaderAt(0).setStyle("fontWeight", "bold");
            accordion.getHeaderAt(1).setStyle("fontSize", 12);
            accordion.getHeaderAt(1).setStyle("icon", solutionIcon);
            accordion.getHeaderAt(1).labelPlacement = "right";
            accordion.getHeaderAt(1).setStyle("fontfamily", "Tahoma");
            accordion.getHeaderAt(1).setStyle("fontWeight", "bold");
            /*accordion.getHeaderAt(2).setStyle("fontSize", 12);
            accordion.getHeaderAt(2).setStyle("icon", dataSourceIcon);
            accordion.getHeaderAt(2).labelPlacement = "right";
            accordion.getHeaderAt(2).setStyle("fontfamily", "Tahoma");
            accordion.getHeaderAt(2).setStyle("fontWeight", "bold");*/
            ProgressAlert.alert(this, "Retrieving possible data...", null, kpiService.getKPIs,
                    goalService.getGoalTreesForInstall);
            goalService.getGoalTreesForInstall.send(_goalTreeID);
            kpiService.getKPIs.send();
        }

        public function set goalTreeID(val:int):void {
            _goalTreeID = val;
        }

        public function set goalTreeNode(goalTreeNode:GoalTreeNode):void {
            _goalTreeNode = goalTreeNode;
        }

        private function gotKPIs():void {
            kpis = kpiService.getKPIs.lastResult as ArrayCollection;
            var sort:Sort = new Sort();
            sort.fields = [ new SortField("name") ];
            kpis.sort = sort;
            kpis.refresh();
        }

        private function gotGoalTrees():void {
            var availableTrees:AvailableGoalTreeList = goalService.getGoalTreesForInstall.lastResult as AvailableGoalTreeList;
            var myRemoveIndex:int = -1;
            for each (var myDescriptor:GoalTreeDescriptor in availableTrees.myTrees) {
                if (myDescriptor.id == this._goalTreeID) {
                    myRemoveIndex = availableTrees.myTrees.getItemIndex(myDescriptor);
                }
            }
            if (myRemoveIndex != -1) {
                availableTrees.myTrees.removeItemAt(myRemoveIndex);
            }
            this.accountTrees = availableTrees.myTrees;
            var sort:Sort = new Sort();
            sort.fields = [ new SortField("name") ];
            accountTrees.sort = sort;
            accountTrees.refresh();
            this.goalTrees = availableTrees.solutionTrees;
            goalTrees.sort = sort;
            goalTrees.refresh();
        }

        private function onSplitTree(event:SplitGoalTreeEvent):void {
            dispatchEvent(event);
        }

		]]>
	</mx:Script>
    <mx:RemoteObject destination="goalService" id="goalService">
        <mx:method name="getGoalTreesForInstall" result="gotGoalTrees()"/>
    </mx:RemoteObject>
    <mx:RemoteObject destination="kpiService" id="kpiService">
        <mx:method name="getKPIs" result="gotKPIs()"/>
    </mx:RemoteObject>
    <mx:VBox height="100%">
        <mx:VBox verticalGap="0" height="100%" width="100%">
            <mx:Box width="100%" backgroundColor="#3B56AF" horizontalAlign="center">
                <mx:TextArea editable="false" text="You can drag the below items onto nodes to create associations." color="0xFFFFFF" backgroundAlpha="0" borderThickness="0" width="100%" height="57"/>
            </mx:Box>
            <mx:Accordion height="100%" id="accordion" width="100%" headerHeight="18">
                <mx:VBox label="KPI Trees" width="100%" height="100%" verticalGap="0">
                    <mx:Box width="100%">
                        <mx:Label text="My KPI Trees"/>
                    </mx:Box>
                    <mx:List dataProvider="{accountTrees}" width="100%" height="100%" labelField="name" dragEnabled="true"/>
                    <mx:Box width="100%">
                        <mx:Label text="External KPI Trees"/>
                    </mx:Box>
                    <mx:List dataProvider="{goalTrees}" width="100%" height="100%" labelField="name" dragEnabled="true"/>
                </mx:VBox>
                <mx:VBox label="KPIs" width="100%" height="100%">
                    <mx:List dataProvider="{kpis}" width="100%" height="100%" labelField="name" dragEnabled="true"/>
                </mx:VBox>                
            </mx:Accordion>
        </mx:VBox>
    </mx:VBox>
	<goals:GoalOrganizationChart goalTreeNodes="{_goalTreeNode}" width="100%" height="100%" backgroundColor="#FFFFFF" backgroundAlpha="1"
            splitTree="onSplitTree(event)"/>
</mx:HBox>
