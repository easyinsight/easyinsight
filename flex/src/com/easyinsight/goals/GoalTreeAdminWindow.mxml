<?xml version="1.0" encoding="utf-8"?>
<mx:HBox xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:goals="com.easyinsight.goals.*" width="100%" height="100%"
         creationComplete="populateData()" borderStyle="solid"
         paddingTop="10" paddingLeft="10" paddingRight="10" paddingBottom="10">
    <mx:Script>
		<![CDATA[
        import com.easyinsight.util.ProgressAlert;

        import mx.collections.ArrayCollection;
        import mx.collections.Sort;
        import mx.collections.SortField;


        private var _goalTreeNode:GoalTreeNode;

        private var _goalTreeID:int;

        [Bindable]
        private var kpis:ArrayCollection;
        [Bindable]
        private var accountTrees:ArrayCollection;

        [Bindable]
        [Embed(source="../../../../assets/component_x16.png")]
        private var solutionIcon:Class;

        [Bindable]
        [Embed(source="../../../../assets/branchx16.png")]
        private var goalIcon:Class;

        [Bindable]
        [Embed(source="../../../../assets/data_blue_x16.png")]
        private var dataSourceIcon:Class;

        [Bindable]
        [Embed(source="../../../../assets/chart_pie2.png")]
        private var reportIcon:Class;

        private var _dataSourceID:int;


        [Bindable(event="dataSourceIDChanged")]
        public function get dataSourceID():int {
            return _dataSourceID;
        }

        public function set dataSourceID(value:int):void {
            if (_dataSourceID == value) return;
            _dataSourceID = value;
            if (value != 0) {
                ProgressAlert.alert(this, "Retrieving possible data...", null, kpiService.getKPIsForDataSource,
                        goalService.getGoalTreesForInstall);
                goalService.getGoalTreesForInstall.send(_goalTreeID, _dataSourceID);
                kpiService.getKPIsForDataSource.send(_dataSourceID);
            }
            dispatchEvent(new Event("dataSourceIDChanged"));
        }

        private function populateData():void {
            accordion.getHeaderAt(0).setStyle("fontSize", 12);
            accordion.getHeaderAt(0).setStyle("icon", goalIcon);
            accordion.getHeaderAt(0).labelPlacement = "right";
            accordion.getHeaderAt(0).setStyle("fontfamily", "Tahoma");
            accordion.getHeaderAt(0).setStyle("fontWeight", "bold");
            accordion.getHeaderAt(1).setStyle("fontSize", 12);
            accordion.getHeaderAt(1).setStyle("icon", solutionIcon);
            accordion.getHeaderAt(1).labelPlacement = "right";
            accordion.getHeaderAt(1).setStyle("fontfamily", "Tahoma");
            accordion.getHeaderAt(1).setStyle("fontWeight", "bold");

        }

        public function set goalTreeID(val:int):void {
            _goalTreeID = val;
        }


        [Bindable(event="goalTreeNodeChanged")]
        public function get goalTreeNode():GoalTreeNode {
            return _goalTreeNode;
        }

        public function set goalTreeNode(value:GoalTreeNode):void {
            if (_goalTreeNode == value) return;
            _goalTreeNode = value;
            dispatchEvent(new Event("goalTreeNodeChanged"));
        }

        private function gotKPIs():void {
            kpis = kpiService.getKPIs.lastResult as ArrayCollection;
            var sort:Sort = new Sort();
            sort.fields = [ new SortField("name") ];
            kpis.sort = sort;
            kpis.refresh();
        }

        private function gotGoalTrees():void {
            accountTrees = goalService.getGoalTreesForInstall.lastResult as ArrayCollection;
            var sort:Sort = new Sort();
            sort.fields = [ new SortField("name") ];
            accountTrees.sort = sort;
            accountTrees.refresh();
        }

        private function onSplitTree(event:SplitGoalTreeEvent):void {
            dispatchEvent(event);
        }
        ]]>
	</mx:Script>
    <mx:RemoteObject destination="goalService" id="goalService">
        <mx:method name="getGoalTreesForInstall" result="gotGoalTrees()"/>
    </mx:RemoteObject>
    <mx:RemoteObject destination="kpiService" id="kpiService">
        <mx:method name="getKPIsForDataSource" result="gotKPIs()"/>
    </mx:RemoteObject>
    <mx:VBox height="100%">
        <mx:VBox verticalGap="0" height="100%" width="100%">
            <mx:Box width="100%" backgroundColor="#3B56AF" horizontalAlign="center">
                <mx:TextArea editable="false" text="You can drag the below items onto nodes to create associations."
                             color="0xFFFFFF" backgroundAlpha="0" borderThickness="0" width="100%" height="57"/>
            </mx:Box>
            <mx:Accordion height="100%" id="accordion" width="100%" headerHeight="18">
                <mx:VBox label="KPI Trees" width="100%" height="100%" verticalGap="0">
                    <mx:Box width="100%">
                        <mx:Label text="My KPI Trees"/>
                    </mx:Box>
                    <mx:List dataProvider="{accountTrees}" width="100%" height="100%" labelField="name"
                             dragEnabled="true"/>
                </mx:VBox>
                <mx:VBox label="My KPIs" width="100%" height="100%">
                    <mx:List dataProvider="{kpis}" width="100%" height="100%" labelField="name" dragEnabled="true"/>
                </mx:VBox>
            </mx:Accordion>
        </mx:VBox>
    </mx:VBox>
    <goals:GoalOrganizationChart goalTreeNodes="{goalTreeNode}" width="100%" height="100%" backgroundColor="#FFFFFF"
                                 backgroundAlpha="1" dataSourceID="{dataSourceID}"
                                 splitTree="onSplitTree(event)"/>
</mx:HBox>
