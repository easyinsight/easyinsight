<?xml version="1.0" ?>
<mx:Form xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:util="com.easyinsight.util.*"
        paddingLeft="0" paddingBottom="0" paddingRight="0" paddingTop="0" verticalGap="8">
    <mx:Script><![CDATA[
        import com.easyinsight.framework.User;

        private function changeSchedule():void {
            var item:String = scheduleBox.selectedItem as String;
            if (item == "Weekly") {
                extraScheduleConfig = true;
                extraLabel = "Day of Week";
                scheduleIndex = 1;
            } else if (item == "Monthly") {
                extraScheduleConfig = true;
                extraLabel = "Day of Month";
                scheduleIndex = 2;
            } else {
                extraScheduleConfig = false;
                extraLabel = "";
                scheduleIndex = 0;
            }
        }

        [Bindable]
        private var extraScheduleConfig:Boolean = false;

        [Bindable]
        private var hour:int;

        [Bindable]
        private var minute:int;

        [Bindable]
        private var scheduleIndex:int;


        [Bindable]
        private var extraLabel:String;

        [Bindable]
        private var selectedDayOfWeek:int = 2;

        [Bindable]
        private var selectedDayOfMonth:String;

        [Bindable]
        private var scheduleType:String = "Daily";

        private var _activity:ScheduledActivity;

        public function set activity(value:ScheduledActivity):void {
            _activity = value;
        }

        private var _editEnabled:Boolean = true;


        [Bindable(event="editEnabledChanged")]
        public function get editEnabled():Boolean {
            return _editEnabled;
        }

        public function set editEnabled(value:Boolean):void {
            if (_editEnabled == value) return;
            _editEnabled = value;
            dispatchEvent(new Event("editEnabledChanged"));
        }

        protected override function commitProperties():void {
            super.commitProperties();
            if (_activity != null) {
                if (_activity.scheduleType.useAccountTimezone) {
                    timezone = User.getInstance().accountTimezone;
                } else {
                    timezone = "(UTC" + (_activity.scheduleType.timeOffset > 0 ? "-" : "+") + (_activity.scheduleType.timeOffset / 60) + ":00)";
                }
                hour = _activity.scheduleType.hour;
                minute = _activity.scheduleType.minute;
                if (_activity.scheduleType is DailyScheduleType) {
                    scheduleType = "Daily";
                } else if (_activity.scheduleType is WeekdayScheduleType) {
                    scheduleType = "Every Weekday";
                } else if (_activity.scheduleType is MWFScheduleType) {
                    scheduleType = "Monday/Wednesday/Friday";
                } else if (_activity.scheduleType is TRScheduleType) {
                    scheduleType = "Tuesday/Thursday";
                } else if (_activity.scheduleType is WeeklyScheduleType) {
                    scheduleType = "Weekly";
                    extraScheduleConfig = true;
                    extraLabel = "Day of Week";
                    selectedDayOfWeek = WeeklyScheduleType(_activity.scheduleType).dayOfWeek;
                    scheduleIndex = 1;
                } else if (_activity.scheduleType is MonthlyScheduleType) {
                    scheduleType = "Monthly";
                    extraScheduleConfig = true;
                    extraLabel = "Day of Month";
                    selectedDayOfMonth = String(MonthlyScheduleType(_activity.scheduleType).dayOfMonth);
                    scheduleIndex = 2;
                } else if (_activity.scheduleType is NeverScheduleType) {
                    scheduleType = "Never (Disabled)";
                }
            } else {
                if (User.getInstance().accountTimezone != null && User.getInstance().accountTimezone != "") {
                    timezone = User.getInstance().accountTimezone;
                } else {
                    var offset:int = new Date().getTimezoneOffset();
                    timezone = "(UTC" + (offset > 0 ? "-" : "+") + (offset / 60) + ":00)";
                }
            }
            var fontSize:int = getStyle("fontSize");
            scheduleBox.setStyle("fontSize", fontSize);
            dayOfWeekBox.setStyle("fontSize", fontSize);
            dayInput.setStyle("fontSize", fontSize);
            hourStepper.setStyle("fontSize", fontSize);
            minuteStepper.setStyle("fontSize", fontSize);
        }

        public function save():Boolean {
            if (scheduleBox.selectedItem == "Daily") {
                _activity.scheduleType = new DailyScheduleType();
            } else if (scheduleBox.selectedItem == "Every Weekday") {
                _activity.scheduleType = new WeekdayScheduleType();
            } else if (scheduleBox.selectedItem == "Monday/Wednesday/Friday") {
                _activity.scheduleType = new MWFScheduleType();
            } else if (scheduleBox.selectedItem == "Tuesday/Thursday") {
                _activity.scheduleType = new TRScheduleType();
            } else if (scheduleBox.selectedItem == "Weekly") {
                _activity.scheduleType = new WeeklyScheduleType();
                WeeklyScheduleType(_activity.scheduleType).dayOfWeek = dayOfWeekBox.selectedItem.data;
            } else if (scheduleBox.selectedItem == "Monthly") {
                _activity.scheduleType = new MonthlyScheduleType();
                var dayOfMonth:int = int(dayInput.text);
                if (dayOfMonth == 0 || dayOfMonth > 31) {
                    dayInput.errorString = "Please enter a value between 1 and 31.";
                    return false;
                }
                MonthlyScheduleType(_activity.scheduleType).dayOfMonth = int(dayInput.text);
            } else if (scheduleBox.selectedItem == "Never (Disabled)") {
                _activity.scheduleType = new NeverScheduleType();
            }
            _activity.scheduleType.hour = hourStepper.value;
            _activity.scheduleType.minute = minuteStepper.value;
            if (User.getInstance().accountTimezone != null && User.getInstance().accountTimezone != "") {
                _activity.scheduleType.useAccountTimezone = true;
            } else {
                _activity.scheduleType.useAccountTimezone = false;
            }
            return true;
        }

        [Bindable]
        private var timezone:String;
        ]]></mx:Script>
    <mx:FormItem label="How often should this event happen?">
        <mx:ComboBox rowCount="6" id="scheduleBox" change="changeSchedule()" selectedItem="{scheduleType}" enabled="{editEnabled}">
            <mx:dataProvider>
                <mx:ArrayCollection>
                    <mx:Array>
                        <mx:String>Daily</mx:String>
                        <mx:String>Every Weekday</mx:String>
                        <mx:String>Monday/Wednesday/Friday</mx:String>
                        <mx:String>Tuesday/Thursday</mx:String>
                        <mx:String>Weekly</mx:String>
                        <mx:String>Monthly</mx:String>
                        <mx:String>Never (Disabled)</mx:String>
                    </mx:Array>
                </mx:ArrayCollection>
            </mx:dataProvider>
        </mx:ComboBox>
    </mx:FormItem>
    <mx:FormItem label="{extraLabel}" visible="{extraScheduleConfig}">
        <mx:ViewStack selectedIndex="{scheduleIndex}" resizeToContent="true" creationPolicy="all">
            <mx:Box/>
            <mx:Box>
                <util:SmartComboBox id="dayOfWeekBox" selectedProperty="data" labelField="label"
                                    selectedValue="{selectedDayOfWeek}" rowCount="7" enabled="{editEnabled}">
                    <util:dataProvider>
                        <mx:ArrayCollection>
                            <mx:Array>
                                <mx:Object label="Monday" data="2"/>
                                <mx:Object label="Tuesday" data="3"/>
                                <mx:Object label="Wednesday" data="4"/>
                                <mx:Object label="Thursday" data="5"/>
                                <mx:Object label="Friday" data="6"/>
                                <mx:Object label="Saturday" data="7"/>
                                <mx:Object label="Sunday" data="1"/>
                            </mx:Array>
                        </mx:ArrayCollection>
                    </util:dataProvider>
                </util:SmartComboBox>
            </mx:Box>
            <mx:Box>
                <mx:TextInput id="dayInput" text="{selectedDayOfMonth}"/>
            </mx:Box>
        </mx:ViewStack>
    </mx:FormItem>
    <mx:FormItem label="What time of day?" direction="horizontal">
        <mx:NumericStepper value="{hour}" minimum="0" maximum="23" id="hourStepper" enabled="{editEnabled}"/>
        <mx:Label text=":"/>
        <mx:NumericStepper value="{minute}" minimum="0" maximum="59" id="minuteStepper" enabled="{editEnabled}"/>
        <mx:Text text="{timezone}"/>
    </mx:FormItem>
</mx:Form>