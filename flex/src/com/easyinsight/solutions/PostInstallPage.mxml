<?xml version="1.0" ?>
<mx:ViewStack xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:easyinsight="com.easyinsight.*"
                            xmlns:solutions="com.easyinsight.solutions.*"
                            creationComplete="onCreation()"
        width="100%" height="100%" implements="com.easyinsight.listing.IPerspective" selectedIndex="{coreStackIndex}">
    <mx:Script><![CDATA[
        import com.easyinsight.framework.InsightRequestMetadata;
        import com.easyinsight.framework.NavigationEvent;

        import mx.collections.ArrayCollection;
        import mx.controls.Alert;

        private var _dataSourceDescriptor:DataSourceDescriptor;

        private function onCreation():void {
            var metadata:InsightRequestMetadata = new InsightRequestMetadata();
            metadata.utcOffset = new Date().getTimezoneOffset(); kpiService.getKPIsForStart.send(_dataSourceDescriptor.id, metadata)
        }

        [Bindable(event="dataSourceDescriptorChanged")]
        public function get dataSourceDescriptor():DataSourceDescriptor {
            return _dataSourceDescriptor;
        }

        public function set dataSourceDescriptor(value:DataSourceDescriptor):void {
            if (_dataSourceDescriptor == value) return;
            _dataSourceDescriptor = value;
            dispatchEvent(new Event("dataSourceDescriptorChanged"));
        }

        private function gotInitialKPIs():void {
            var kpis:ArrayCollection = kpiService.getKPIsForStart.lastResult as ArrayCollection;
            if (kpis.length > 0) {
                this.kpis = kpis;
                coreStackIndex = 1;
            } else {
                dispatchEvent(new NavigationEvent("Home"));
            }
        }

        private var _solution:Solution;


        [Bindable(event="solutionChanged")]
        public function get solution():Solution {
            return _solution;
        }

        public function set solution(value:Solution):void {
            if (_solution == value) return;
            _solution = value;
            dispatchEvent(new Event("solutionChanged"));
        }

        [Bindable]
        private var kpis:ArrayCollection;

        [Bindable]
        private var coreStackIndex:int = 0;

        public function gotFocus():void {
        }

        public function cleanup():void {
        }
        ]]></mx:Script>
    <mx:RemoteObject destination="kpiService" id="kpiService">
        <mx:method name="getKPIsForStart" result="gotInitialKPIs()" fault="Alert.show(event.fault.faultString)"/>
    </mx:RemoteObject>
        <!--
            first step: show some KPIs, boil things into a handful of #'s
                explain the KPIs
                need steps around scorecard
                adding to dashboard
            next step: diving into #'s
                jump to connection report summary, showing the list of reports
                need to explain the concept here
                clicking on a report, show the report view, explain it
                        
        -->
    <mx:Box width="100%" height="100%" horizontalAlign="center" verticalAlign="middle">
        <mx:ProgressBar label="Generating values for your key metrics..." indeterminate="true"/>
    </mx:Box>
    <solutions:SolutionKPIWindow kpis="{kpis}" connectionProgression="coreStackIndex = 2" width="100%" height="100%"
            dataSourceDescriptor="{dataSourceDescriptor}" solution="{solution}"/>
    <!--
        we'll have post install window there for the moment, but fill that in later
    -->
    <solutions:PostInstallWindow dataSourceDescriptor="{dataSourceDescriptor}" solution="{solution}" width="100%" height="100%"/>
</mx:ViewStack>