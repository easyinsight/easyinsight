<?xml version="1.0" encoding="utf-8"?>
<FullScreenPage xmlns="com.easyinsight.*" xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%"
                paddingLeft="0" paddingBottom="0" paddingTop="0" paddingRight="0" creationComplete="onCreation()">
    <mx:Script>
		<![CDATA[
			import com.easyinsight.analysis.AnalysisCloseEvent;

            import com.easyinsight.framework.NavigationEvent;
            import com.easyinsight.genredata.ModuleAnalyzeEvent;
            import com.easyinsight.util.FileAlert;

        import mx.controls.Alert;

        import com.easyinsight.framework.User;

        import mx.collections.ArrayCollection;
        import mx.managers.BrowserManager;
        import mx.managers.PopUpManager;
        import mx.utils.URLUtil;

        [Bindable]
        [Embed(source="../../../../assets/document_out.png")]
        private var closeIcon:Class;

        [Bindable]
        [Embed(source="../../../../assets/component_x16.png")]
        private var installIcon:Class;

        [Bindable]
        [Embed(source="../../../../assets/gear.png")]
        private var archiveIcon:Class;

        [Bindable]
        [Embed(source="../../../../assets/background2.JPG")]
        private var background2:Class;

        [Bindable]
        [Embed(source="../../../../assets/data_blue_x16.png")]
        public var dataSourceIcon:Class;

        [Bindable]
        [Embed(source="../../../../assets/chart_column.png")]
        public var insightIcon:Class;

        [Bindable]
        [Embed(source="../../../../assets/branchx16.png")]
        public var goalTreeIcon:Class;

        [Bindable]
        private var description:String;

        private var _solution:Solution;

        [Bindable]
        private var solutionName:String;
        [Bindable]
        private var solutionIndustry:String;
        [Bindable]
        private var solutionAuthor:String;

        [Bindable]
        private var solutionDescription:String;

        [Bindable]
        private var solutionFileName:String;

        private var solutionID:int;

        [Bindable]
        private var displayTreeData:ArrayCollection;

        private var fileRef:FileReference;

        [Bindable]
        private var downloadAvailable:Boolean = true;

        [Bindable]
        private var installAvailable:Boolean = true;

        [Bindable]
        private var dataSources:ArrayCollection;

        [Bindable]
        private var goalTrees:ArrayCollection;

        [Bindable]
        private var insights:ArrayCollection;

        [Bindable]
        private var showDataSources:Boolean;

        [Bindable]
        private var showInsights:Boolean;

        [Bindable]
        private var showGoalTrees:Boolean;

        [Bindable]
        private var dataSourceCount:int;
        [Bindable]
        private var goalCount:int;
        [Bindable]
        private var reportCount:int;

        [Bindable]
        [Embed(source="../../../../assets/data_blue_x16.png")]
        public var listIcon:Class;

        [Bindable]
        [Embed(source="../../../../assets/chart_column.png")]
        public var crosstabIcon:Class;

        private function onCreation():void {
            var fragmentObject:Object = new Object();
            fragmentObject.solutionID = String(solutionID);
            var fragmentString:String = URLUtil.objectToString(fragmentObject);
            BrowserManager.getInstance().setFragment(fragmentString);
            BrowserManager.getInstance().setTitle("Easy Insight - " + solutionName);
            solutionService.getSolutionContents.send(_solution.solutionID);
        }

        public function set treeData(data:ArrayCollection):void {
            this.displayTreeData = data;
        }

        public function set solution(solution:Solution):void {
            this._solution = solution;
            description = solution.description;
            solutionID = solution.solutionID;
            solutionFileName = solution.solutionArchiveName;
            solutionName = solution.name;
            solutionAuthor = solution.author;
            solutionIndustry = solution.industry;
            solutionDescription = solution.description;
            if (solution.solutionArchiveName == null || solution.solutionArchiveName == "") {
                downloadAvailable = false;
            }
            installAvailable = solution.installable;
        }

        private function iconFunction(item:Object, depth:int):Class {
            return listIcon;
        }

        private function download():void {
            //fileReference = new FileReference();
            var request:URLRequest = new URLRequest("/app/DownloadServlet");
            request.method = URLRequestMethod.GET;
            var vars:URLVariables = new URLVariables();

            vars.userName = new String(User.getInstance().userName);
            vars.password = new String(User.getInstance().password);
            vars.operation = new String(2);
            vars.fileID = new String(_solution.solutionID);
            request.data = vars;

            fileRef = new FileReference();
            fileRef.addEventListener(Event.CANCEL, doEvent);
            fileRef.addEventListener(Event.COMPLETE, complete);
            fileRef.addEventListener(Event.OPEN, doEvent);
            fileRef.addEventListener(Event.SELECT, doEvent);
            fileRef.addEventListener(HTTPStatusEvent.HTTP_STATUS, doEvent);
            fileRef.addEventListener(IOErrorEvent.IO_ERROR, doEvent);
            fileRef.addEventListener(ProgressEvent.PROGRESS, doEvent);
            fileRef.addEventListener(SecurityErrorEvent.SECURITY_ERROR, doEvent);

            FileAlert.alert(this, "Downloading...", null, fileRef);
            fileRef.download(request, _solution.solutionArchiveName);
        }

        private function doEvent(event:Event):void {
            trace(event);
        }

            private function onModuleAnalyze(event:ModuleAnalyzeEvent):void {
                dispatchEvent(event);
            }

            private function install():void {
            var window:SolutionInstallationWindow = SolutionInstallationWindow(PopUpManager.createPopUp(this.parent, SolutionInstallationWindow, true));
            window.addEventListener(SolutionEvent.SOLUTION_INSTALLED, onSolutionInstalled);
            window.addEventListener(ModuleAnalyzeEvent.MODULE_ANALYZE, onModuleAnalyze);
            window.solution = this._solution;
            PopUpManager.centerPopUp(window);
        }

        private function onSolutionInstalled(event:SolutionEvent):void {
            dispatchEvent(new NavigationEvent("My Data"));
        }

        private function complete(event:Event):void {
            Alert.show("Solution files copied!");
        }

        private function gotContents():void {
            var solutionContents:SolutionContents = solutionService.getSolutionContents.lastResult as SolutionContents;
            dataSources = solutionContents.feedDescriptors;
            dataSourceCount = dataSources.length;
            showDataSources = true;
            insights = solutionContents.insightDescriptors;
            showInsights = true;
            reportCount = insights.length;
            goalTrees = solutionContents.goalTreeDescriptors;
            showGoalTrees = true;
            goalCount = goalTrees.length;
        }
		]]>
	</mx:Script>
    <mx:RemoteObject destination="solutionService" id="solutionService">
        <mx:method name="getSolutionContents" result="gotContents()"/>
    </mx:RemoteObject>
    <mx:Box width="100%" height="100%" backgroundColor="#818285" horizontalAlign="center" paddingLeft="0" paddingTop="0"
            paddingRight="0" paddingBottom="0">
        <mx:VBox width="1000" height="100%" backgroundImage="{background2}" backgroundSize="100%" paddingLeft="20"
                paddingRight="20" paddingTop="20" paddingBottom="20"> 
            <mx:HBox>
                <mx:Button icon="{closeIcon}" toolTip="Close" click="dispatchEvent(new AnalysisCloseEvent(this))"/>
                <mx:Button icon="{installIcon}" toolTip="Install" click="install()" visible="{installAvailable}"/>
                <mx:Button icon="{archiveIcon}" toolTip="Download" visible="{downloadAvailable}" click="download()"/>
            </mx:HBox>
            <mx:HBox>
                <mx:VBox width="400">
                    <mx:VBox verticalGap="0" width="100%">
                        <mx:Box backgroundColor="#254BD4" height="5" width="100%"/>
                        <mx:Box width="100%" horizontalAlign="center" backgroundColor="#C7CBF0">
                            <mx:Label text="Solution Summary"/>
                        </mx:Box>
                        <mx:Form>
                            <mx:FormItem label="Name:">
                                <mx:Label text="{solutionName}"/>
                            </mx:FormItem>
                            <mx:FormItem label="Industry:">
                                <mx:Label text="{solutionIndustry}"/>
                            </mx:FormItem>
                            <mx:FormItem label="Author:">
                                <mx:Label text="{solutionAuthor}"/>
                            </mx:FormItem>
                            <mx:FormItem label="Downloadable File:" direction="horizontal" visible="{downloadAvailable}">
                                <mx:Label text="{solutionFileName}"/>
                                <mx:Button icon="{archiveIcon}" click="download()" toolTip="Download File"/>
                            </mx:FormItem>
                        </mx:Form>
                    </mx:VBox>
                    <mx:Spacer height="30"/>
                    <mx:TabNavigator width="100%">
                        <mx:Box width="100%" height="100%" label="Data Sources">
                            <mx:DataGrid dataProvider="{dataSources}" visible="{showDataSources}" width="100%"
                                         rowCount="{dataSourceCount}" rowHeight="28">
                                <mx:columns>
                                    <mx:DataGridColumn headerText="" dataField="name" width="50" sortable="false">
                                        <mx:itemRenderer>
                                            <mx:Component>
                                                <mx:HBox width="100%" horizontalAlign="center">
                                                    <mx:Image source="{outerDocument.dataSourceIcon}"/>
                                                </mx:HBox>
                                            </mx:Component>
                                        </mx:itemRenderer>
                                    </mx:DataGridColumn>
                                    <mx:DataGridColumn headerText="Name" dataField="name"
                                                       headerRenderer="com.easyinsight.groups.CustomGroupHeader"/>
                                </mx:columns>
                            </mx:DataGrid>
                        </mx:Box>
                        <mx:Box width="100%" height="100%" label="Reports">
                            <mx:DataGrid dataProvider="{insights}" visible="{showInsights}" width="100%"
                                         rowCount="{reportCount}"
                                         rowHeight="28">
                                <mx:columns>
                                    <mx:DataGridColumn headerText="" dataField="name" width="50" sortable="false">
                                        <mx:itemRenderer>
                                            <mx:Component>
                                                <mx:HBox width="100%" horizontalAlign="center">
                                                    <mx:Image source="{outerDocument.insightIcon}"/>
                                                </mx:HBox>
                                            </mx:Component>
                                        </mx:itemRenderer>
                                    </mx:DataGridColumn>
                                    <mx:DataGridColumn headerText="Name" dataField="name"
                                                       headerRenderer="com.easyinsight.groups.CustomGroupHeader"/>
                                </mx:columns>
                            </mx:DataGrid>
                        </mx:Box>
                        <mx:Box width="100%" height="100%" label="Goal Trees">
                            <mx:DataGrid dataProvider="{goalTrees}" visible="{showGoalTrees}" width="100%"
                                         rowCount="{goalCount}"
                                         rowHeight="28">
                                <mx:columns>
                                    <mx:DataGridColumn headerText="" dataField="name" width="50" sortable="false">
                                        <mx:itemRenderer>
                                            <mx:Component>
                                                <mx:HBox width="100%" horizontalAlign="center">
                                                    <mx:Image source="{outerDocument.goalTreeIcon}"/>
                                                </mx:HBox>
                                            </mx:Component>
                                        </mx:itemRenderer>
                                    </mx:DataGridColumn>
                                    <mx:DataGridColumn headerText="Name" dataField="goalTreeName"
                                                       headerRenderer="com.easyinsight.groups.CustomGroupHeader"/>
                                </mx:columns>
                            </mx:DataGrid>
                        </mx:Box>
                    </mx:TabNavigator>
                </mx:VBox>
                <mx:Spacer width="50"/>
                <mx:VBox width="500" verticalGap="0" height="100%">
                    <mx:Box backgroundColor="#254BD4" height="5" width="100%"/>
                    <mx:Box width="100%" horizontalAlign="center" backgroundColor="#C7CBF0">
                        <mx:Label text="Documentation"/>
                    </mx:Box>
                    <mx:TextArea height="100%" width="100%" backgroundAlpha="0" borderStyle="none" selectable="false"
                                 htmlText="{solutionDescription}" borderThickness="0"/>
                </mx:VBox>
            </mx:HBox>
        </mx:VBox>
    </mx:Box>
</FullScreenPage>
