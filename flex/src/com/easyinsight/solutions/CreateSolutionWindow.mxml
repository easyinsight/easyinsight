<?xml version="1.0" encoding="utf-8"?>
<util:EITitleWindow xmlns:util="com.easyinsight.util.*" xmlns:mx="http://www.adobe.com/2006/mxml" creationComplete="goalService.getGoalTrees.send(); addEventListener(DataSourceSolutionEvent.DELETE_DATA_SOURCE, onDelete)">
	<mx:Script>
		<![CDATA[
        import com.easyinsight.goals.GoalTreeDescriptor;
        import com.easyinsight.listing.DataFeedDescriptor;

        import com.easyinsight.util.PopUpUtil;

        import mx.controls.Alert;
        import mx.managers.PopUpManager;
        import mx.collections.ArrayCollection;

        private function onDelete(event:DataSourceSolutionEvent):void {
            includedFeeds.removeItemAt(includedFeeds.getItemIndex(event.descriptor));
        }

        private function updateImage():void {
            if (_solution == null) {
                Alert.show("Save the solution before adding an image.");
            } else {
                var window:UpdateSolutionImageWindow = new UpdateSolutionImageWindow();
                window.sourceID = _solution.solutionID;
                PopUpManager.addPopUp(window, this, true);
                PopUpUtil.centerPopUp(window);
            }
        }

        private function updateArchive():void {
            if (_solution == null) {
                Alert.show("Save the solution before adding an archive.");
            } else {
                var window:UpdateSolutionArchiveWindow = new UpdateSolutionArchiveWindow();
                window.sourceID = _solution.solutionID;
                PopUpManager.addPopUp(window, this, true);
                PopUpUtil.centerPopUp(window);
            }
        }

        [Bindable]
        private var includedFeeds:ArrayCollection = new ArrayCollection();

        private var _solution:Solution;

        [Bindable]
        private var solutionCategory:int;

        [Bindable]
        private var nameText:String;
        [Bindable]
        private var logoLink:String;
        [Bindable]
        private var descriptionText:String;
        [Bindable]
        private var footerText:String;
        [Bindable]
        private var includeData:Boolean;
        [Bindable]
        private var author:String;
        [Bindable]
        private var industry:String;
        [Bindable]
        private var tags:String;
        [Bindable]
        private var goalTrees:ArrayCollection;
        [Bindable]
        private var solutionTier:int;
        [Bindable]
        private var archiveName:String;
        [Bindable]
        private var solutionImage:Bitmap;
        [Bindable]
        private var screencastName:String;
        [Bindable]
        private var screencastDirectory:String;
        [Bindable]
        private var detailClass:String;

        private function onComplete(event:Event):void {
            var loaderContent:LoaderInfo = event.currentTarget as LoaderInfo;
            solutionImage = Bitmap(loaderContent.loader.content);
            loaderContent.loader.removeEventListener(Event.COMPLETE, onComplete);
        }

        public function set solution(solution:Solution):void {
            this._solution = solution;
            nameText = this._solution.name;
            descriptionText = this._solution.description;
            author = this._solution.author;
            industry = this._solution.industry;
            includeData = this._solution.copyData;
            solutionTier = this._solution.solutionTier - 1;
            logoLink = this._solution.logoLink;
            solutionCategory = this._solution.category - 1;
            archiveName = _solution.solutionArchiveName;
            screencastName = _solution.screencastName;
            screencastDirectory = _solution.screencastDirectory;
            footerText = _solution.footerText;
            detailClass = _solution.detailPageClass;
            if (solution.solutionID > 0) {
                solutionService.getDescriptorsForSolution.send(solution.solutionID);
            }
            if (solution.image != null) {
                var loader:Loader = new Loader();
                loader.contentLoaderInfo.addEventListener(Event.COMPLETE, onComplete);
                loader.loadBytes(solution.image);
            }
        }

        private function save():void {
            if (_solution == null) {
                _solution = new Solution();
            }
            _solution.name = nameInput.text;
            _solution.description = descriptionInput.htmlText;
            _solution.logoLink = logoLinkInput.text;
            //_solution.author = authorInput.text;
            //_solution.industry = industryInput.text;
            _solution.footerText = footerInput.htmlText;
            _solution.copyData = includeDataCheckbox.selected;
            _solution.solutionTier = accountTierBox.selectedIndex + 1;
            _solution.category = solutionCategoryBox.selectedIndex + 1;
            _solution.detailPageClass = detailClassComboBox.selectedItem as String;
            if (goalTreeComboBox.selectedIndex > 0) {
                _solution.goalTreeID = goalTreeComboBox.selectedItem.id;
            } else {
                _solution.goalTreeID = 0;
            }
            _solution.screencastDirectory = screencastDirectoryInput.text;
            _solution.screencastName = screencastNameInput.text;
            var feedIDs:ArrayCollection = new ArrayCollection();
            for each (var feedDescriptor:DataFeedDescriptor in includedFeeds) {
                feedIDs.addItem(feedDescriptor.id);
            }
            if (_solution.solutionID == 0) {
                solutionService.addSolution.send(_solution, feedIDs);
            } else {
                solutionService.updateSolution.send(_solution, feedIDs);
            }
        }

        private function cancel():void {
            PopUpManager.removePopUp(this);
        }

        private function gotDescriptors():void {
            this.includedFeeds = solutionService.getDescriptorsForSolution.lastResult as ArrayCollection;
        }

        private function saveCompleted():void {
            dispatchEvent(new SolutionAdminEvent());
            PopUpManager.removePopUp(this);
        }

        private function addFeed():void {
            var window:AddFeedToSolutionWindow = AddFeedToSolutionWindow(PopUpManager.createPopUp(this, AddFeedToSolutionWindow, true));
            window.addEventListener(FeedSelectionEvent.FEED_SELECTED, feedSelected);
            PopUpUtil.centerPopUp(window);
        }

        private function feedSelected(event:FeedSelectionEvent):void {
            this.includedFeeds.addItem(event.feedDescriptor);
        }

        private function gotGoalTrees():void {
            var goalTrees:ArrayCollection = goalService.getGoalTrees.lastResult as ArrayCollection;
            var treesWithNoneOption:ArrayCollection = new ArrayCollection(goalTrees.source);
            treesWithNoneOption.addItemAt({name: "[ No Selection ]"}, 0);
            this.goalTrees = treesWithNoneOption;
            if (_solution != null) {
                if (_solution.goalTreeID > 0) {
                    for each (var obj:Object in goalTrees) {
                        if (obj is GoalTreeDescriptor) {
                            var descriptor:GoalTreeDescriptor = obj as GoalTreeDescriptor;
                            if (descriptor.id == _solution.goalTreeID) {
                                goalTreeComboBox.selectedItem = descriptor;
                            }
                        }
                    }
                }
            }
        }
		]]>
	</mx:Script>
	<mx:RemoteObject destination="solutionService" id="solutionService">
		<mx:method name="getDescriptorsForSolution" result="gotDescriptors()"/>
		<mx:method name="addSolution" result="saveCompleted()"/>
		<mx:method name="updateSolution" result="saveCompleted()"/>
	</mx:RemoteObject>
    <mx:RemoteObject destination="goalService" id="goalService">
        <mx:method name="getGoalTrees" result="gotGoalTrees()"/>
    </mx:RemoteObject>
    <mx:HBox>
        <mx:Form>
            <mx:FormItem label="Name: ">
                <mx:TextInput id="nameInput" text="{nameText}"/>
            </mx:FormItem>
            <mx:FormItem label="Archive Name: " direction="horizontal">
                <mx:Label text="{archiveName}"/>
                <mx:Button label="Update Archive" click="updateArchive()"/>
            </mx:FormItem>
            <mx:FormItem label="Required Account Tier: ">
                <mx:ComboBox id="accountTierBox" selectedIndex="{solutionTier}">
                    <mx:dataProvider>
                        <mx:ArrayCollection>
                            <mx:Array>
                                <mx:String>Free</mx:String>
                                <mx:String>Individual</mx:String>
                                <mx:String>Group</mx:String>
                                <mx:String>Professional</mx:String>
                                <mx:String>Enterprise</mx:String>
                                <mx:String>Admin (Hidden)</mx:String>
                            </mx:Array>
                        </mx:ArrayCollection>
                    </mx:dataProvider>
                </mx:ComboBox>
            </mx:FormItem>
            <mx:FormItem label="Solution Category: ">
                <mx:ComboBox id="solutionCategoryBox" selectedIndex="{solutionCategory}">
                    <mx:dataProvider>
                        <mx:ArrayCollection>
                            <mx:Array>
                                <mx:String>SaaS</mx:String>
                                <mx:String>Client</mx:String>
                                <mx:String>Learning</mx:String>
                                <mx:String>Business</mx:String>
                                <mx:String>Hidden</mx:String>
                            </mx:Array>
                        </mx:ArrayCollection>
                    </mx:dataProvider>
                </mx:ComboBox>
            </mx:FormItem>
            <mx:FormItem label="Include Data Source Data: ">
                <mx:CheckBox id="includeDataCheckbox" selected="{includeData}"/>
            </mx:FormItem>
            <mx:FormItem label="Associate Goal Tree: ">
                <mx:ComboBox id="goalTreeComboBox" dataProvider="{goalTrees}" labelField="name"/>
            </mx:FormItem>
            <mx:FormItem label="Image: " direction="vertical">
                <mx:Button label="Update Image" click="updateImage()"/>
                <mx:Image source="{solutionImage}"/>
            </mx:FormItem>
            <mx:FormItem label="Image Link: ">
                <mx:TextInput text="{logoLink}" id="logoLinkInput"/>
            </mx:FormItem>
            <mx:FormItem label="Screencast Directory: ">
                <mx:TextInput id="screencastDirectoryInput" text="{screencastDirectory}"/>
            </mx:FormItem>
            <mx:FormItem label="Screencast Name: ">
                <mx:TextInput id="screencastNameInput" text="{screencastName}"/>
            </mx:FormItem>
            <mx:FormItem label="Data Sources: ">
                <mx:VBox>
                    <mx:Button label="Add Data Source..." click="addFeed()"/>
                    <mx:DataGrid dataProvider="{includedFeeds}">
                        <mx:columns>
                            <mx:DataGridColumn headerText="Data Source Name" dataField="name"/>
                            <mx:DataGridColumn headerText="" dataField="name" itemRenderer="com.easyinsight.solutions.SolutionFeedIcons"/>
                        </mx:columns>
                    </mx:DataGrid>
                </mx:VBox>
            </mx:FormItem>
            <mx:FormItem label="Solution Detail Class: ">
                <mx:ComboBox id="detailClassComboBox" selectedItem="{detailClass}">
                    <mx:dataProvider>
                        <mx:ArrayCollection>
                            <mx:Array>
                                <mx:String>com.easyinsight.solutions.RevisedSolutionDetail</mx:String>
                                <mx:String>com.easyinsight.solutions.GoogleAnalyticsSolutionDetail</mx:String>
                                <mx:String>com.easyinsight.solutions.BasecampSolutionDetail</mx:String>
                                <mx:String>com.easyinsight.solutions.HighriseSolutionDetail</mx:String>
                                <mx:String>com.easyinsight.solutions.FileUploadSolutionDetail</mx:String>
                                <mx:String>com.easyinsight.solutions.GoogleSpreadsheetSolutionDetail</mx:String>
                                <mx:String>com.easyinsight.solutions.LinkedInSolutionDetail</mx:String>
                                <mx:String>com.easyinsight.solutions.PivotalTrackerSolutionDetail</mx:String>
                                <mx:String>com.easyinsight.solutions.SendGridSolutionDetail</mx:String>
                                <mx:String>com.easyinsight.solutions.MySQLSolutionDetail</mx:String>
                                <mx:String>com.easyinsight.solutions.FreshbooksSolutionDetail</mx:String>
                                <mx:String>com.easyinsight.solutions.CrunchbaseSolutionDetail</mx:String>
                                <mx:String>com.easyinsight.solutions.ConstantContactSolutionDetail</mx:String>
                                <mx:String>com.easyinsight.solutions.QuickbaseSolutionDetail</mx:String>
                            </mx:Array>
                        </mx:ArrayCollection>
                    </mx:dataProvider>
                </mx:ComboBox>
            </mx:FormItem>
            <mx:FormItem label="" direction="horizontal">
                <mx:Button label="Save" click="save()"/>
                <mx:Button label="Cancel" click="cancel()"/>
            </mx:FormItem>
        </mx:Form>
        <mx:TabNavigator width="500" height="100%" creationPolicy="all">
            <mx:Box height="100%" width="100%" label="Description">
                <mx:RichTextEditor id="descriptionInput" htmlText="{descriptionText}" height="100%" width="100%"/>
            </mx:Box>
            <mx:Box label="Footer" width="100%" height="100%">
                <mx:RichTextEditor id="footerInput" htmlText="{footerText}" width="100%" height="100%"/>
            </mx:Box>
        </mx:TabNavigator>
    </mx:HBox>
</util:EITitleWindow>
