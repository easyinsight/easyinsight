<?xml version="1.0" ?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:account="com.easyinsight.account.*" width="100%" height="100%" creationComplete="onCreationComplete()"
        styleName="basePageVBox" implements="com.easyinsight.listing.IPerspective">
    <mx:states>
        <mx:State name="trialAccount">
            <mx:RemoveChild target="{invoicesButton}"/>
        </mx:State>
    </mx:states>
    <mx:Box width="100%" styleName="bannerBackground">
        <mx:Label text="Account Administration" styleName="bannerText"/>
    </mx:Box>
    <mx:HBox horizontalGap="20" width="100%">
        <mx:VBox horizontalAlign="center" width="33%">
            <mx:Label text="Account Stats" fontFamily="Tahoma" fontWeight="bold" fontSize="14"/>
            <account:AccountStatsForm accountInfo="{accountInfo}"/>
        </mx:VBox>
        <mx:VRule strokeColor="#333333"/>
        <mx:VBox horizontalAlign="center" width="33%">
            <mx:Label text="Account Management" fontFamily="Tahoma" fontWeight="bold" fontSize="14"/>
            <mx:Form width="100%" paddingBottom="0" paddingLeft="0" paddingRight="0" paddingTop="0">
                <account:AccountState accountInfo="{accountInfo}"/>
                <account:AccountTrialDate accountInfo="{accountInfo}"/>
            </mx:Form>
            <mx:Button label="Upgrade or Downgrade Account..." click="upgrade()" styleName="grayButton" fontSize="14" width="260" id="upgradeButton"/>
            <mx:Button label="View Invoices..." click="invoices()" styleName="grayButton" fontSize="14" width="260" id="invoicesButton"/>
            <mx:Button label="Edit Invoice Properties..." click="editInvoiceProps()" styleName="grayButton" fontSize="14" width="260" id="invoicePropsButton"/>
            <mx:Button label="Set Up Billing..." click="navigateToURL(new URLRequest('billing/billingSetupAction.jsp'), '_self');" styleName="grayButton" fontSize="14" width="260"/>
            <mx:Button label="Cancel Account..." click="cancelPaidAccount()" styleName="grayButton" fontSize="14" width="260"/>
        </mx:VBox>
        <mx:VRule strokeColor="#333333"/>
         <mx:VBox horizontalAlign="center" width="33%">
            <mx:Label text="Account Settings" fontFamily="Tahoma" fontWeight="bold" fontSize="14"/>
             <mx:Button label="Edit Account Settings..." click="editAccountSettings()" styleName="grayButton" fontSize="14" width="260"/>
             <mx:Button label="Edit Account Skin..." click="editAccountStyling()" styleName="grayButton" fontSize="14" width="260"/>
             <mx:Button label="SSO Configuration..." click="ssoConfig()" styleName="grayButton" fontSize="14" width="260" visible="{showSSO}"/>
             <mx:Button label="Edit Login Page..." click="loginPageConfig()" styleName="grayButton" fontSize="14" width="260" visible="{showLoginPageConfig}" />
        </mx:VBox>


    </mx:HBox>
    <mx:Script><![CDATA[
        import com.easyinsight.framework.User;
        import com.easyinsight.skin.ApplicationSkinWindow;
        import com.easyinsight.util.PopUpUtil;

        import mx.managers.PopUpManager;

        [Bindable]
        private var accountInfo:AccountInfo;

        private function gotAccountInfo():void {
            accountInfo = userService.getAccountInfo.lastResult as AccountInfo;
        }

        [Bindable]
        private var showSSO:Boolean;

        [Bindable]
        private var showLoginPageConfig:Boolean;

        [Bindable]
        private var showUpgrade:Boolean;

        private function ssoConfig():void {
            var window:SSOConfigWindow = new SSOConfigWindow();
            PopUpManager.addPopUp(window, this, true);
            PopUpUtil.centerPopUp(window);
        }

        protected function upgrade():void {
            navigateToURL(new URLRequest("/app/billing/accountType.jsp"), "_self");
        }

        private function onUpgrade(event:UpgradeEvent):void {
            dispatchEvent(new Event("refreshAccount"));
        }

        private function editAccountStyling():void {
            var applicationSkinWindow:ApplicationSkinWindow = new ApplicationSkinWindow();
            applicationSkinWindow.skinMode = ApplicationSkinWindow.ACCOUNT_SKIN;
            PopUpManager.addPopUp(applicationSkinWindow, this, true);
            PopUpUtil.centerPopUp(applicationSkinWindow);
        }

        private function editUserStyling():void {
            var applicationSkinWindow:ApplicationSkinWindow = new ApplicationSkinWindow();
            applicationSkinWindow.skinMode = ApplicationSkinWindow.USER_SKIN;
            PopUpManager.addPopUp(applicationSkinWindow, this, true);
            PopUpUtil.centerPopUp(applicationSkinWindow);
        }

        private function editInvoiceProps():void {
            var accountAreaWindow:AccountAreaWindow = new AccountAreaWindow();
            PopUpManager.addPopUp(accountAreaWindow, this, true);
            PopUpUtil.centerPopUp(accountAreaWindow);
        }

        private function onCreationComplete():void {
            showUpgrade = User.getInstance().getAccountType() != Account.ENTERPRISE;
            showSSO = User.getInstance().getAccountType() >= Account.ENTERPRISE;
            showLoginPageConfig = User.getInstance().subdomainEnabled;
            if (User.getInstance().accountState == Account.TRIAL) {
                currentState = "trialAccount";
            }
        }

        private function cancelPaidAccount():void {
            var window:CancelPaidAccountWindow = new CancelPaidAccountWindow();
            PopUpManager.addPopUp(window, this, true);
            PopUpUtil.centerPopUp(window);
        }

        private function editAccountSettings():void {
            var accountSettingsWindow:AccountSettingsWindow = new AccountSettingsWindow();
            PopUpManager.addPopUp(accountSettingsWindow, this, true);
            PopUpUtil.centerPopUp(accountSettingsWindow);
        }

        private function invoices():void {
            var window:AccountInvoicing = new AccountInvoicing();
            PopUpManager.addPopUp(window, this, true);
            PopUpUtil.centerPopUp(window);
        }

        private function loginPageConfig():void {
            var window:WhiteLabelConfigWindow = new WhiteLabelConfigWindow();
            PopUpManager.addPopUp(window, this, true);
            PopUpUtil.centerPopUp(window);
        }

        public function gotFocus():void {
            userService.getAccountInfo.send();
        }

        public function cleanup():void {
        }
        ]]></mx:Script>
    <mx:RemoteObject destination="accountAdmin" id="userService">
        <mx:method name="getAccountInfo" result="gotAccountInfo()"/>
    </mx:RemoteObject>
</mx:VBox>
