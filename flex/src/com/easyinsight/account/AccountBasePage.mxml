<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%" implements="com.easyinsight.listing.IPerspective"
	xmlns:listing="com.easyinsight.listing.*" xmlns:account="com.easyinsight.account.*"  backgroundColor="#818285" creationComplete="setupListeners()" paddingTop="0" top="0"
        verticalGap="0" horizontalAlign="center">
	<mx:Script>
		<![CDATA[
        import com.easyinsight.framework.LoginEvent;
        import com.easyinsight.framework.User;

        import mx.managers.BrowserManager;
        import mx.utils.URLUtil;

        [Bindable]
        [Embed(source="../../../../assets/background2.JPG")]
        private var background2:Class;

        [Bindable]
        private var _destinationURL:String;

        private var _requiredTier:int;

        private var _targetName:String;

        private var _connectionName:String;


        [Bindable(event="destinationURLChanged")]
        public function get destinationURL():String {
            return _destinationURL;
        }

        public function set destinationURL(value:String):void {
            if (_destinationURL == value) return;
            _destinationURL = value;
            dispatchEvent(new Event("destinationURLChanged"));
        }

        [Bindable(event="requiredTierChanged")]
        public function get requiredTier():int {
            return _requiredTier;
        }

        public function set requiredTier(value:int):void {
            if (_requiredTier == value) return;
            _requiredTier = value;
            dispatchEvent(new Event("requiredTierChanged"));
        }

        [Bindable(event="connectionNameChanged")]
        public function get connectionName():String {
            return _connectionName;
        }

        public function set connectionName(value:String):void {
            if (_connectionName == value) return;
            _connectionName = value;
            dispatchEvent(new Event("connectionNameChanged"));
        }

        private function onLogin(event:LoginEvent):void {
            gotFocus();
        }

        private function onLogout(event:LoginEvent):void {
            gotFocus();
        }

        private function setupListeners():void {
            addEventListener(RefreshAccountEvent.REFRESH_ACCOUNT, refreshAccount);
            User.getEventNotifier().addEventListener(LoginEvent.LOGIN, onLogin);
            User.getEventNotifier().addEventListener(LoginEvent.LOGOUT, onLogout);
        }

        private function refreshAccount(event:RefreshAccountEvent):void {
            gotFocus();
        }

        public function gotFocus():void {
            var fragmentObject:Object = new Object();
            fragmentObject.page = "account";
            BrowserManager.getInstance().setTitle("Easy Insight - Account");
            var fragmentString:String = URLUtil.objectToString(fragmentObject);
            BrowserManager.getInstance().setFragment(fragmentString);
            var user:User = User.getInstance();
            if (user != null) {
                stackIndex = 2;
                accountSummary.gotFocus();
            } else {
                stackIndex = 1;                
                accountWizard.gotFocus();
            }
        }

        [Bindable]
        private var stackIndex:int = 0;

        public function lostFocus():void {
        }

        public function getDefaultAnalyzeState():Boolean {
            return false;
        }

        public function isKeywordSearchInstant():Boolean {
            return false;
        }

        private function accountCreated(event:AccountWizardResultEvent):void {
            //currentState = "loggedIn";
            /*User.initializeUser(event.user.userID, event.account.accountID, event.user.userName, event.user.email,
             event.account.accountType, event.account.accountType.getSpaceAllowed(), event.user.permissions);
             User.getEventNotifier().dispatchEvent(new LoginEvent());*/
        }

        public function cleanup():void {
        }
		]]>
	</mx:Script>	
    <mx:Canvas width="100%" height="100%" backgroundColor="#000000">
        <mx:VBox width="100%" height="100%" verticalGap="0">
            <mx:Canvas height="50%" width="100%" backgroundColor="#888888"/>
            <mx:Canvas height="50%" width="100%" backgroundColor="#000000"/>
        </mx:VBox>
        <mx:VBox width="100%" height="100%" id="primaryCanvas" paddingTop="30" paddingLeft="10" paddingRight="10"
             paddingBottom="10" horizontalAlign="center">
            <mx:ViewStack width="1000" paddingLeft="20" resizeToContent="true"
                 paddingRight="20" paddingTop="5" paddingBottom="20" id="coreContent" backgroundColor="#FFFFFF" creationPolicy="all"
                    selectedIndex="{stackIndex}">
                <mx:Box/>
                <account:AccountCreationWizard id="accountWizard" accountCreated="accountCreated(event)" destinationURL="{destinationURL}"
                        requiredTier="{requiredTier}" connectionName="{connectionName}"/>
                <account:AccountSummary id="accountSummary"/>
             </mx:ViewStack>
        </mx:VBox>
    </mx:Canvas>
</mx:VBox>
