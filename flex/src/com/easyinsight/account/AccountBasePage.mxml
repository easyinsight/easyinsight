<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%" implements="com.easyinsight.listing.IPerspective"
	xmlns:listing="com.easyinsight.listing.*" xmlns:account="com.easyinsight.account.*"  backgroundColor="#818285" creationComplete="setupListeners()" paddingTop="0" top="0"
        verticalGap="0" horizontalAlign="center">
	<mx:states>
		<mx:State name="loggedIn">
			<mx:RemoveChild target="{accountWizard}"/>
		</mx:State>
	</mx:states>	
	<mx:Script>
		<![CDATA[
        import com.easyinsight.framework.LoginEvent;
        import com.easyinsight.framework.User;

        import mx.managers.BrowserManager;
        import mx.utils.URLUtil;

        [Bindable]
        public var account:Account;

        [Bindable]
        [Embed(source="../../../../assets/background2.JPG")]
        private var background2:Class;

        [Bindable]
        private var _destinationURL:String;


        public function set destinationURL(value:String):void {
            _destinationURL = value;
        }

        private function onLogin(event:LoginEvent):void {
            gotFocus();
        }

        private function setupListeners():void {
            addEventListener(RefreshAccountEvent.REFRESH_ACCOUNT, refreshAccount);
            User.getEventNotifier().addEventListener(LoginEvent.LOGIN, onLogin);
        }

        private function refreshAccount(event:RefreshAccountEvent):void {
            this.account = null;
            coreContent.removeAllChildren();
            retrieveAccountInfo();
        }

        public function gotFocus():void {
            var fragmentObject:Object = new Object();
            fragmentObject.page = "account";
            BrowserManager.getInstance().setTitle("Easy Insight - Account");
            var fragmentString:String = URLUtil.objectToString(fragmentObject);
            BrowserManager.getInstance().setFragment(fragmentString);
            var user:User = User.getInstance();
            if (user != null) {
                if (currentState != "loggedIn") {
                    currentState = "loggedIn";
                    if (account == null) {
                        retrieveAccountInfo();
                    }
                }
            } else {
                currentState = "";
            }
        }

        private function retrieveAccountInfo():void {
            userService.retrieveAccount.send();
        }

        private function gotAccountInfo():void {
            var x:Account = userService.retrieveAccount.lastResult as Account;
            if (x != null) {
                this.account = x;
                var accountSummary:AccountSummary = new AccountSummary();
                accountSummary.account = account;
                coreContent.addChild(accountSummary);
            }
        }

        public function lostFocus():void {
        }

        public function getDefaultAnalyzeState():Boolean {
            return false;
        }

        public function isKeywordSearchInstant():Boolean {
            return false;
        }

        private function accountCreated(event:AccountWizardResultEvent):void {
            //currentState = "loggedIn";
            /*User.initializeUser(event.user.userID, event.account.accountID, event.user.userName, event.user.email,
             event.account.accountType, event.account.accountType.getSpaceAllowed(), event.user.permissions);
             User.getEventNotifier().dispatchEvent(new LoginEvent());*/
        }
		]]>
	</mx:Script>
	<mx:RemoteObject destination="login" id="userService">
		<mx:method name="retrieveAccount" result="gotAccountInfo()"/>
	</mx:RemoteObject>
	<mx:VBox width="1000" height="100%" backgroundImage="{background2}" backgroundSize="100%" paddingLeft="20"
         paddingRight="20" paddingTop="20" paddingBottom="20" id="coreContent">
		<account:AccountCreationWizard id="accountWizard" accountCreated="accountCreated(event)" destinationURL="{_destinationURL}"/>		
	</mx:VBox>
</mx:VBox>
