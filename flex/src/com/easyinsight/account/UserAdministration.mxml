<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:account="com.easyinsight.account.*" width="100%"
           height="100%" creationComplete="gotFocus()" styleName="basePageVBox">
    <mx:Script>
		<![CDATA[
        import com.easyinsight.framework.User;
        import com.easyinsight.preferences.Persona;
        import com.easyinsight.util.PopUpUtil;
        import com.easyinsight.util.ProgressAlert;

        import mx.controls.Alert;
        import mx.events.CloseEvent;

        import mx.managers.PopUpManager;
        import mx.collections.ArrayCollection;

        [Bindable]
        private var userButtonFactory:EditUserButtonFactory;

        [Bindable]
        private var users:ArrayCollection;

        [Bindable]
        private var enableAdd:Boolean;

        [Bindable]
        private var usersAvailableString:String;

        [Bindable]
        public var accountInfo:AccountInfo;

        [Bindable]
        private var usersUsedString:String;

        [Bindable]
        private var pricingModel:int;

        private var usersAvailable:int;
        private var usersUsed:int;

        public function gotFocus():void {
            addEventListener(RefreshAccountEvent.REFRESH_ACCOUNT, refreshAccount);
            addEventListener(DeleteUserEvent.DELETE_USER, deleteUser);
            addEventListener("userChange", userChange);
            newPricingModel = User.getInstance().pricingModel > 0;
            userButtonFactory = new EditUserButtonFactory(this);
            enableAdd = accountInfo.accountStats.currentUsers < accountInfo.accountStats.availableUsers;
            usersUsedString = String(accountInfo.accountStats.currentUsers);
            usersAvailableString = String(accountInfo.accountStats.availableUsers);
            usersUsed = accountInfo.accountStats.currentUsers;
            usersAvailable = accountInfo.accountStats.availableUsers;
            basicUsersShown = User.getInstance().getAccountType() >= Account.PLUS && newPricingModel;
            preferencesService.getPersonas.send();
            userIndex = 1;
            userService.getUsers.send();
        }

        private function userChange(event:Event):void {
            changesIndex = 1;
        }

        private function deleteUser(event:DeleteUserEvent):void {
            var obj:DisplayObject = this;
            Alert.show("Are you sure you want to delete " + event.userName + "?", "Alert", Alert.OK | Alert.CANCEL, this,
                    function(closeEvent:CloseEvent):void {
                        if (closeEvent.detail == Alert.OK) {
                            ProgressAlert.alert(obj, "Deleting user...", null, userService.deleteUser);
                            userService.deleteUser.send(event.userID);
                        }
                    }, null, Alert.CANCEL);
        }

        private function refreshAccount(event:RefreshAccountEvent):void {
            if (event != null) event.stopPropagation();
            usersAvailableString = String(accountInfo.accountStats.availableUsers);
            usersAvailable = accountInfo.accountStats.availableUsers;
            userService.getUsers.send();
        }

        private function gotUsers():void {
            users = userService.getUsers.lastResult as ArrayCollection;
            usersUsed = users.length;
            usersUsedString = String(users.length);
            enableAdd = users.length < accountInfo.accountStats.availableUsers;
            showMoreDesigners = newPricingModel && !enableAdd;
        }

        private function addUser():void {
            var newUserDialog:NewUserDialog = NewUserDialog(PopUpManager.createPopUp(this, NewUserDialog, true));
            newUserDialog.addEventListener(RefreshAccountEvent.REFRESH_ACCOUNT, addedUser, false, 0, true);
            PopUpUtil.centerPopUp(newUserDialog);
        }

        private function addBasicUser():void {
            var newUserDialog:NamedUserDialog = NamedUserDialog(PopUpManager.createPopUp(this, NamedUserDialog, true));
            newUserDialog.addEventListener(RefreshAccountEvent.REFRESH_ACCOUNT, addedUser, false, 0, true);
            PopUpUtil.centerPopUp(newUserDialog);
        }

        private function addedUser(event:RefreshAccountEvent):void {
            refreshAccount(event);
        }

        private function deletedUser():void {
            refreshAccount(null);
        }

        [Bindable]
        private var userIndex:int;

        [Bindable]
        private var personas:ArrayCollection;

        private function gotPersonas():void {
            var personas:ArrayCollection = preferencesService.getPersonas.lastResult as ArrayCollection;
            personas.addItemAt(Persona.EMPTY_PERSONA, 0);
            this.personas = personas;
        }

        private function addMoreUsers():void {
            navigateToURL(new URLRequest("/app/billing/accountType.jsp"), "_self");
        }

        [Bindable]
        private var newPricingModel:Boolean;

        [Bindable]
        private var basicUsersShown:Boolean;

        private function updatedUsers():void {
            changesIndex = 0;
        }

        private function saveChanges():void {
            userService.updateUsers.send(users);
        }

        [Bindable]
        private var changesIndex:int;

        [Bindable]
        private var showMoreDesigners:Boolean;
        ]]>
    </mx:Script>
    <mx:RemoteObject destination="accountAdmin" id="userService">
        <mx:method name="getUsers" result="gotUsers()"/>
        <mx:method name="deleteUser" result="deletedUser()"/>
        <mx:method name="updateUsers" result="updatedUsers()"/>
    </mx:RemoteObject>
    <mx:RemoteObject destination="preferencesService" id="preferencesService">
        <mx:method name="getPersonas" result="gotPersonas()"/>
    </mx:RemoteObject>
    <account:PersonaComboBoxFactory id="personaFactory" personas="{personas}"/>
    <mx:ViewStack selectedIndex="{changesIndex}" resizeToContent="true">
        <mx:Box/>
        <mx:HBox width="100%" horizontalAlign="center">
            <mx:HBox verticalAlign="middle" backgroundColor="#DDDDDD" cornerRadius="5" borderStyle="solid" borderColor="#DDDDDD" borderThickness="1"
                    paddingLeft="10" paddingTop="5" paddingBottom="5" paddingRight="10">
                <mx:Label text="You have unsaved changes:"/>
                <mx:Button label="Save Changes" click="saveChanges()"/>
            </mx:HBox>
        </mx:HBox>
    </mx:ViewStack>
    <mx:VBox horizontalAlign="center" verticalAlign="middle" width="700">
        <mx:HBox>
            <mx:Label text="Designers Used and Available:"/>
            <mx:Label text="{usersUsedString}" fontFamily="Lucida Grande" fontWeight="normal"/>
            <mx:Label text=" / "/>
            <mx:Label text="{usersAvailableString}" fontFamily="Lucida Grande" fontWeight="normal"/>
            <mx:Button styleName="grayButton" label="Add More Designers..." click="addMoreUsers()" visible="{showMoreDesigners}"/>
        </mx:HBox>
        <mx:HBox horizontalAlign="right" width="100%">
            <mx:Button label="Add Designer..." click="addUser()" enabled="{enableAdd}" fontSize="14" styleName="grayButton"/>
            <mx:Button label="Add Viewer..." click="addBasicUser()" fontSize="14" styleName="grayButton" visible="{basicUsersShown}"/>
        </mx:HBox>
    </mx:VBox>

    <mx:DataGrid dataProvider="{users}" rowHeight="28" height="100%">
        <mx:columns>
            <mx:DataGridColumn dataField="userName" headerText="User Name"
                               headerRenderer="com.easyinsight.groups.CustomGroupHeader" width="200"/>
            <mx:DataGridColumn dataField="firstName" headerText="First Name"
                               headerRenderer="com.easyinsight.groups.CustomGroupHeader" width="200"/>
            <mx:DataGridColumn dataField="name" headerText="Last Name"
                               headerRenderer="com.easyinsight.groups.CustomGroupHeader" width="200"/>
            <mx:DataGridColumn dataField="userName" width="100" headerText=""
                               itemRenderer="{userButtonFactory}" sortable="false"/>
        </mx:columns>
    </mx:DataGrid>
</mx:VBox>
