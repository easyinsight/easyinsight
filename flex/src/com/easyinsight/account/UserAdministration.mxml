<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:account="com.easyinsight.account.*" width="100%"
           height="100%" creationComplete="gotFocus()">
    <mx:Script>
		<![CDATA[
        import com.easyinsight.framework.User;
        import com.easyinsight.preferences.Persona;
        import com.easyinsight.util.PopUpUtil;
        import com.easyinsight.util.ProgressAlert;

        import mx.managers.PopUpManager;
        import mx.collections.ArrayCollection;

        [Bindable]
        private var userButtonFactory:EditUserButtonFactory;

        [Bindable]
        private var users:ArrayCollection;

        [Bindable]
        private var enableAdd:Boolean;

        [Bindable]
        private var usersAvailableString:String;

        [Bindable]
        public var accountInfo:AccountInfo;

        [Bindable]
        private var usersUsedString:String;

        private var usersAvailable:int;
        private var usersUsed:int;

        [Bindable]
        [Embed(source="../../../../assets/prototype/ReverseGray.jpg")]
        private var backgroundImage:Class;

        public function gotFocus():void {
            addEventListener(RefreshAccountEvent.REFRESH_ACCOUNT, refreshAccount);
            addEventListener(DeleteUserEvent.DELETE_USER, deleteUser);
            addEventListener("userChange", userChange);
            userButtonFactory = new EditUserButtonFactory(this);
            enableAdd = accountInfo.accountStats.currentUsers < accountInfo.accountStats.availableUsers;
            usersUsedString = String(accountInfo.accountStats.currentUsers);
            usersAvailableString = String(accountInfo.accountStats.availableUsers);
            usersUsed = accountInfo.accountStats.currentUsers;
            usersAvailable = accountInfo.accountStats.availableUsers;
            if (User.getInstance().getAccountType() >= Account.PLUS) {
                preferencesService.getPersonas.send();
                userIndex = 1;
            }
            userService.getUsers.send();
        }

        private function userChange(event:Event):void {
            changesIndex = 1;
        }

        private function deleteUser(event:DeleteUserEvent):void {
            ProgressAlert.alert(this, "Deleting user...", null, userService.deleteUser);
            userService.deleteUser.send(event.userID);
        }

        private function refreshAccount(event:RefreshAccountEvent):void {
            if (event != null) event.stopPropagation();
            usersAvailableString = String(accountInfo.accountStats.availableUsers);
            usersAvailable = accountInfo.accountStats.availableUsers;
            userService.getUsers.send();
        }

        private function gotUsers():void {
            users = userService.getUsers.lastResult as ArrayCollection;
            usersUsed = users.length;
            usersUsedString = String(users.length);
            enableAdd = users.length < accountInfo.accountStats.availableUsers;
        }

        private function addUser():void {
            var newUserDialog:NewUserDialog = NewUserDialog(PopUpManager.createPopUp(this, NewUserDialog, true));
            newUserDialog.addEventListener(RefreshAccountEvent.REFRESH_ACCOUNT, refreshAccount);
            PopUpUtil.centerPopUp(newUserDialog);
        }

        private function deletedUser():void {
            refreshAccount(null);
        }

        [Bindable]
        private var userIndex:int;

        [Bindable]
        private var personas:ArrayCollection;

        private function gotPersonas():void {
            var personas:ArrayCollection = preferencesService.getPersonas.lastResult as ArrayCollection;
            personas.addItemAt(Persona.EMPTY_PERSONA, 0);
            this.personas = personas;
        }

        private function updatedUsers():void {
            changesIndex = 0;
        }

        private function saveChanges():void {
            userService.updateUsers.send(users);
        }

        [Bindable]
        private var changesIndex:int;
        ]]>
    </mx:Script>
    <mx:RemoteObject destination="accountAdmin" id="userService">
        <mx:method name="getUsers" result="gotUsers()"/>
        <mx:method name="deleteUser" result="deletedUser()"/>
        <mx:method name="updateUsers" result="updatedUsers()"/>
    </mx:RemoteObject>
    <mx:RemoteObject destination="preferencesService" id="preferencesService">
        <mx:method name="getPersonas" result="gotPersonas()"/>
    </mx:RemoteObject>
    <account:PersonaComboBoxFactory id="personaFactory" personas="{personas}"/>
    <mx:VBox width="100%" height="100%" horizontalAlign="center">
        <mx:Box width="100%" horizontalAlign="center" backgroundImage="{backgroundImage}" backgroundSize="100%"
                paddingTop="5"
                paddingBottom="5">
            <mx:Label text="User Administration" fontSize="20" fontFamily="Tahoma" fontWeight="bold" color="#FFFFFF"/>
        </mx:Box>
        <mx:ViewStack selectedIndex="{changesIndex}" resizeToContent="true">
            <mx:Box/>
            <mx:HBox width="100%" horizontalAlign="center">
                <mx:HBox verticalAlign="middle" backgroundColor="#DDDDDD" cornerRadius="5" borderStyle="solid" borderColor="#DDDDDD" borderThickness="1"
                        paddingLeft="10" paddingTop="5" paddingBottom="5" paddingRight="10">
                    <mx:Label text="You have unsaved changes:"/>
                    <mx:Button label="Save Changes" click="saveChanges()"/>
                </mx:HBox>
            </mx:HBox>
        </mx:ViewStack>
        <mx:VBox>
            <mx:Form paddingTop="5" paddingLeft="5">
                <mx:FormItem label="Account Users Used: " direction="horizontal">
                    <mx:Label text="{usersUsedString}" fontFamily="Lucida Grande" fontWeight="normal"/>
                    <mx:Label text=" / "/>
                    <mx:Label text="{usersAvailableString}" fontFamily="Lucida Grande" fontWeight="normal"/>
                </mx:FormItem>
            </mx:Form>
            <mx:HBox width="100%">
                <mx:Button label="Add User..." click="addUser()" enabled="{enableAdd}"/>
            </mx:HBox>
            <mx:VBox id="accountSettingsBox" verticalGap="0" borderThickness="1" borderColor="#D42525"
                     borderStyle="solid" dropShadowEnabled="true">
                <mx:Box width="100%" height="5" backgroundColor="#D42525" left="0" right="0"/>
                <mx:Box width="100%" backgroundColor="#DEDEDE" horizontalAlign="center">
                    <mx:Label text="Users" fontFamily="Tahoma" fontWeight="bold" fontSize="14"/>
                </mx:Box>
                <mx:ViewStack resizeToContent="true" width="100%" selectedIndex="{userIndex}">
                    <mx:Box width="100%">
                        <mx:DataGrid dataProvider="{users}" width="100%">
                            <mx:columns>
                                <mx:DataGridColumn dataField="userName" headerText="User Name"
                                                   headerRenderer="com.easyinsight.groups.CustomGroupHeader"/>
                                <mx:DataGridColumn dataField="firstName" headerText="First Name"
                                                   headerRenderer="com.easyinsight.groups.CustomGroupHeader"/>
                                <mx:DataGridColumn dataField="name" headerText="Last Name"
                                                   headerRenderer="com.easyinsight.groups.CustomGroupHeader"/>
                                <mx:DataGridColumn dataField="userName" width="100" headerText=""
                                                   itemRenderer="{userButtonFactory}" sortable="false"/>
                            </mx:columns>
                        </mx:DataGrid>
                    </mx:Box>
                    <mx:Box width="100%">
                        <mx:DataGrid dataProvider="{users}" width="100%">
                            <mx:columns>
                                <mx:DataGridColumn dataField="userName" headerText="User Name"
                                                   headerRenderer="com.easyinsight.groups.CustomGroupHeader"/>
                                <mx:DataGridColumn dataField="firstName" headerText="First Name"
                                                   headerRenderer="com.easyinsight.groups.CustomGroupHeader"/>
                                <mx:DataGridColumn dataField="name" headerText="Last Name"
                                                   headerRenderer="com.easyinsight.groups.CustomGroupHeader"/>
                                <mx:DataGridColumn dataField="userName" width="150" headerText=""
                                                   itemRenderer="{personaFactory}"/>
                                <mx:DataGridColumn dataField="userName" width="100" headerText=""
                                                   itemRenderer="{userButtonFactory}" sortable="false"/>
                            </mx:columns>
                        </mx:DataGrid>
                    </mx:Box>
                </mx:ViewStack>
            </mx:VBox>
        </mx:VBox>
    </mx:VBox>
</mx:Canvas>
