<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:customupload="com.easyinsight.customupload.*" width="100%"
           height="100%" xmlns:account="com.easyinsight.account.*">
    <mx:Script>
		<![CDATA[
import com.easyinsight.framework.User;
import mx.core.Container;
        import mx.collections.ArrayCollection;
        import mx.events.ItemClickEvent;
        import com.easyinsight.account.license.LicenseAdministration;
        import mx.managers.PopUpManager;
        private var _account:Account;
        [Bindable]
        private var accountTypeLabel:String;
        [Bindable]
        private var accountName:String;
        [Bindable]
        private var dataSources:ArrayCollection;
        [Bindable]
        private var showToggle:Boolean = false;
        [Bindable]
        private var toggleOptions:ArrayCollection;

        public function set account(account:Account):void {
            this._account = account;
            if (account == null) {
                accountTypeLabel = "";
            } else {
                switch (account.accountType.getAccountType()) {
                    case AccountType.FREE:
                        accountTypeLabel = "Free";
                        break;
                    case AccountType.INDIVIDUAL:
                        accountTypeLabel = "Individual";
                        break;
                    case AccountType.COMMERCIAL:
                        accountTypeLabel = "Commercial";
                        break;
                }
                this.accountName = User.getInstance().userName;
            }
        }

        override protected function commitProperties():void {
            super.commitProperties();
            coreBox.removeAllChildren();
            if (_account.accountType.getAccountType() == AccountType.FREE) {
                // user profile information, option to upgrade, option to cancel
                toggleOptions = new ArrayCollection([ new AccountOption("Account Settings", new FreeAccountSettings()) ]);
            } else if (_account.accountType.getAccountType() == AccountType.INDIVIDUAL) {
                // user profile information, option to ugprade, option to cancel, billing link, general account settings?
                toggleOptions = new ArrayCollection([ new AccountOption("Account Settings", new IndividualAccountSettings()) ]);
            } else {
                if (User.getInstance().accountAdmin) {
                    // user profile
                    // space allocation, user licensing?, ssl configuration, ip range configuration
                    // core user administration...add user, remove user, change user privileges
                    toggleOptions = new ArrayCollection([ new AccountOption("My Profile", new ProfessionalMyProfile()),
                        new AccountOption("Account Administration", new AccountAdministration()),
                        new AccountOption("User Administration", new UserAdministration())]);
                    showToggle = true;
                } else {
                    toggleOptions = new ArrayCollection([ new AccountOption("My Profile", new ProfessionalMyProfile())]);
                }
            }
            coreBox.addChild(toggleOptions.getItemAt(0).container);
        }

        private function licenseAdmin():void {
            var licenseAdmin:LicenseAdministration = LicenseAdministration(PopUpManager.createPopUp(this, LicenseAdministration, true));
            PopUpManager.centerPopUp(licenseAdmin);
        }

        private function choseButton(event:ItemClickEvent):void {
            var accountOption:AccountOption = event.item as AccountOption;
            if (coreBox.getChildren().length > 0) {
                coreBox.removeAllChildren();
            }
            coreBox.addChild(accountOption.container);            
        }
		]]>
    </mx:Script>
    <mx:VBox width="100%" height="100%">
        <mx:HBox width="100%" horizontalAlign="center">
            <mx:ToggleButtonBar itemClick="choseButton(event)" dataProvider="{toggleOptions}" visible="{showToggle}"/>
        </mx:HBox>
        <mx:HBox id="coreBox" width="100%" height="100%">
            
        </mx:HBox>
    </mx:VBox>
</mx:Canvas>
