<?xml version="1.0" encoding="utf-8"?>
<mx:Box xmlns:mx="http://www.adobe.com/2006/mxml" width="100%"
        height="100%" creationComplete="setupListeners()">
    <mx:Script>
		<![CDATA[
        import com.easyinsight.framework.LoginEvent;
        import com.easyinsight.framework.User;
        import com.easyinsight.groups.GroupsSummary;
        import com.easyinsight.listing.IPerspective;
        import com.easyinsight.preferences.PersonaManagement;

        import mx.collections.ArrayCollection;
        import mx.core.Container;
        import mx.events.ItemClickEvent;

        private var accountInfo:AccountInfo;
        [Bindable]
        private var accountName:String;
        [Bindable]
        private var showToggle:Boolean = false;
        [Bindable]
        private var toggleOptions:ArrayCollection;

        private function setupListeners():void {
            User.getEventNotifier().addEventListener(LoginEvent.LOGOUT, onLogout);
        }

        private function onLogout(event:LoginEvent):void {
            accountInfo = null;
            lastAccountType = 0;
        }

        private var lastAccountType:int;

        override protected function createChildren():void {
            super.createChildren();
            if (User.getInstance() != null && User.getInstance().accountAdmin) {
                // user profile
                // space allocation, user licensing?, ssl configuration, ip range configuration
                // core user administration...add user, remove user, change user privileges
                toggleOptions = new ArrayCollection([ new AccountOption("Account Administration", new AccountAdminPage()),
                    new AccountOption("User Administration", new UserAdministration()),
                    new AccountOption("Group Administration", new GroupsSummary()),
                    new AccountOption("My Profile", new ProfessionalMyProfile()),
                    new AccountOption("Persona", new PersonaManagement())]);
                showToggle = true;
            } else {
                toggleOptions = new ArrayCollection([ new AccountOption("My Profile", new ProfessionalMyProfile())]);
                showToggle = false;
            }
            for each (var accountOption:AccountOption in toggleOptions) {
                var container:Container = accountOption.container;
                coreBox.addChild(container);
            }
            startIndex = 0;
        }

        [Bindable]
        private var startIndex:int = -1;

        [Bindable]
        private var index:int;

        private function choseButton(event:ItemClickEvent):void {
            var accountOption:AccountOption = event.item as AccountOption;
            this.index = toggleOptions.getItemIndex(accountOption);
            IPerspective(coreBox.getChildAt(index)).gotFocus();
        }

        public function gotFocus():void {
            IPerspective(coreBox.getChildAt(index)).gotFocus();
        }
        ]]>
    </mx:Script>

    <mx:VBox width="100%" height="100%" paddingTop="15">
        <mx:HBox width="100%" horizontalAlign="center">
            <mx:ToggleButtonBar itemClick="choseButton(event)" dataProvider="{toggleOptions}" visible="{showToggle}"
                    selectedIndex="{startIndex}" buttonStyleName="grayButton"/>
        </mx:HBox>
        <mx:ViewStack id="coreBox" width="100%" height="100%" selectedIndex="{index}">

        </mx:ViewStack>
    </mx:VBox>
</mx:Box>
