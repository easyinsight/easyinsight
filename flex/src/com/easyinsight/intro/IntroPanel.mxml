<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:account="com.easyinsight.account.*"
         xmlns:scorecard="com.easyinsight.scorecard.*" width="100%" height="100%"
         implements="com.easyinsight.listing.IPerspective"
         horizontalAlign="center" left="0" right="0" verticalGap="0">
    <mx:Metadata>
        [Event(name="navigation", type="com.easyinsight.framework.NavigationEvent")]
    </mx:Metadata>
    <mx:states>
        <mx:State name="loggedIn">
            <mx:RemoveChild target="{tourBox}"/>
            <mx:AddChild relativeTo="{coreBox}">
                <scorecard:LoggedInHome id="loggedInHome"/>
            </mx:AddChild>
        </mx:State>
    </mx:states>
    <mx:Script>
		<![CDATA[
        import com.easyinsight.framework.LoginEvent;
        import com.easyinsight.framework.User;
        import com.easyinsight.help.ScreencastWindow;

        import mx.controls.Alert;
        import mx.managers.CursorManager;
        import mx.managers.PopUpManager;
        import mx.utils.URLUtil;
        import mx.managers.BrowserManager;

        import com.easyinsight.framework.NavigationEvent;
        import com.easyinsight.listing.AnalyzeSource;
        import com.easyinsight.help.TutorialWindow;

        [Bindable]
        [Embed(source="../../../../assets/media_play.png")]
        private var pointerIcon:Class;

        public function search(keyword:String):void {

        }

        public function analyze():AnalyzeSource {
            return null;
        }

        public function gotFocus():void {
            var fragmentObject:Object = new Object();
            fragmentObject.page = "home";
            BrowserManager.getInstance().setTitle("Easy Insight - Home");
            var fragmentString:String = URLUtil.objectToString(fragmentObject);
            BrowserManager.getInstance().setFragment(fragmentString);
            User.getEventNotifier().addEventListener(LoginEvent.LOGIN, onLogin);
            User.getEventNotifier().addEventListener(LoginEvent.LOGOUT, onLogout);
            if (currentState == "loggedIn") {
                if (loggedInHome != null) {
                    loggedInHome.gotFocus();
                }
            }
            if (User.getInstance() == null) {
                currentState = "";
            } else {
                currentState = "loggedIn";
            }
        }

        private function onLogin(event:LoginEvent):void {
            currentState = "loggedIn";
        }

        private function onLogout(event:LoginEvent):void {
            currentState = "";
        }

        public function getDefaultAnalyzeState():Boolean {
            return false;
        }

        public function isKeywordSearchInstant():Boolean {
            return false;
        }

        private function toMarketplace():void {
            dispatchEvent(new NavigationEvent("Marketplace"));
        }

        private function toUploads():void {
            dispatchEvent(new NavigationEvent("My Data"));
        }

        private function startTutorials():void {
            var window:TutorialWindow = new TutorialWindow();
            PopUpManager.addPopUp(window, this, false);
            window.x = 20;
            window.y = 80;
        }

        private var _tour:Boolean;

        public function get tour():Boolean {
            return _tour;
        }

        [Bindable]
        public function set tour(value:Boolean):void {
            _tour = value;
        }

        public function cleanup():void {
        }

                ]]>
	</mx:Script>


    <mx:VBox width="100%" height="100%" horizontalAlign="center" backgroundColor="#818285" id="coreBox">
        <account:AccountCreated tour="{tour}" id="tourBox"/>
    </mx:VBox>
</mx:VBox>