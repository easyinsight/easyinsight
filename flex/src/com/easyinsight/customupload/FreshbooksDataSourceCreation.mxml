<?xml version="1.0" ?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%" implements="com.easyinsight.customupload.IServerDataSourceCreation">
    <mx:Metadata>
		[Event(name="userConfigComplete", type="com.easyinsight.customupload.UploadConfigEvent")]
		[Event(name="userConfigCancel", type="com.easyinsight.customupload.UploadConfigEvent")]
	</mx:Metadata>
    <mx:Script><![CDATA[
        import com.easyinsight.administration.feed.FeedDefinitionData;
        import com.easyinsight.datasources.FreshbooksDataSource;
        import com.easyinsight.util.ProgressAlert;

        import mx.controls.Alert;
        import mx.controls.Button;
        import mx.validators.Validator;

        [Bindable]
        private var url:String;

        private var dataSource:FreshbooksDataSource;

        private var installButton:Button;

        public function get dataSourceDefinition():FeedDefinitionData {
            var obj:FreshbooksDataSource = new FreshbooksDataSource();
            obj.url = urlInput.text;
            var date:Date = startDateChooser.selectedDate;
            obj.startDate = date;
            return obj;
        }

        public function setupButton(button:Button):Function {
            installButton = button;
            button.label = "Authorize Easy Insight Access";
            button.addEventListener(MouseEvent.CLICK, install);
            return install;
        }

        public function set dataSourceDefinition(feedDefinition:FeedDefinitionData):void {
            var ds:FreshbooksDataSource = feedDefinition as FreshbooksDataSource;
            this.dataSource = ds;
        }

        public function updateDataSource(feedDefinition:FeedDefinitionData):void {
            var ds:FreshbooksDataSource = feedDefinition as FreshbooksDataSource;
            ds.url = urlInput.text;
            //ds.liveDataSource = !cacheCheckBox.selected;
            if (initialImportCheckbox.selected) {
                var date:Date = startDateChooser.selectedDate;
                ds.startDate = date;
            } else {
                ds.startDate = null;
            }
        }

        private function install(event:MouseEvent = null):void {
            var results:Array = Validator.validateAll([nameValidator]);
            if (results.length > 0) {
                urlInput.setFocus();
                urlInput.dispatchEvent(new MouseEvent(MouseEvent.MOUSE_OVER));
            } else {
                updateDataSource(dataSource);
                ProgressAlert.alert(this, "Retrieving access information...", null, tokenService.getOAuthURL);
                tokenService.getOAuthURL.send(49, true, urlInput.text, dataSource, dataSource.visible ? 2 : 1);
            }
        }

        private function gotURL():void {

            var response:OAuthResponse = tokenService.getOAuthURL.lastResult as OAuthResponse;
            if (response.successful) {
                stackIndex = 1;
                var requestToken:String = response.requestToken;
                navigateToURL(new URLRequest(requestToken), "_self");
            } else {
                if (response.error == OAuthResponse.BAD_HOST) {
                    Alert.show("We had a problem with the account name you specified. Please double check the value you entered. For example, if you access FreshBooks by easyinsight.freshbooks.com, your account name would be easyinsight.");
                } else {
                    Alert.show("FreshBooks rejected the specified verifier token. Please try authorizing again.");
                }
            }
        }

        [Bindable]
        private var stackIndex:int = 0;

        public function validate():Boolean {
            urlInput.errorString = null;
            installButton.errorString = null;
            if (urlInput.text.length == 0) {
                urlInput.errorString = "You need to specify the location of your FreshBooks account.";
                urlInput.setFocus();
                urlInput.dispatchEvent(new MouseEvent(MouseEvent.MOUSE_OVER));
                return false;
            }

            if (stackIndex == 0) {
                installButton.errorString = "You need to authorize Easy Insight to access your FreshBooks data.";
                installButton.setFocus();
                installButton.dispatchEvent(new MouseEvent(MouseEvent.MOUSE_OVER));
                return false;
            }
            return true;
        }]]></mx:Script>
    <mx:RemoteObject destination="tokenService" id="tokenService">
        <mx:method name="getOAuthURL" result="gotURL()"/>
    </mx:RemoteObject>
    <mx:Form>
        <mx:FormItem label="FreshBooks Account Name:">
            <mx:TextInput id="urlInput" fontWeight="normal" fontFamily="Lucida Grande" text="{url}" width="300"/>
        </mx:FormItem>
    </mx:Form>
    <mx:Text text="For example, if you access FreshBooks by https://easyinsight.freshbooks.com, your account name would be easyinsight."/>
    <mx:Form>
        <mx:FormItem label="Should your initial import only include data from a certain start date?">
            <mx:CheckBox id="initialImportCheckbox"/>
        </mx:FormItem>
        <mx:FormItem label="Start Date" enabled="{initialImportCheckbox.selected}">
            <mx:DateField id="startDateChooser"/>
        </mx:FormItem>
    </mx:Form>
    <mx:Text width="700" text="If you have a considerable amount of historical data, you may find it quicker to create your Easy Insight connection to FreshBooks with a subset of that data. You can always change this date to pull back older data."/>
    <!--<mx:CheckBox label="Cache FreshBooks data" id="cacheCheckBox" selected="true"/>-->
    <mx:HRule width="100%"/>
    <mx:Text width="700" text="Clicking Authorize will navigate your browser to your FreshBooks account. Upon granting access, you will be redirected back to Easy Insight to finish the connection process."
            selectable="false" />
    <mx:StringValidator minLength="1" source="{urlInput}" property="text" id="nameValidator"/>
</mx:VBox>