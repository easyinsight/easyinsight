<?xml version="1.0" ?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%" implements="com.easyinsight.customupload.IServerDataSourceCreation">
    <mx:Metadata>
		[Event(name="userConfigComplete", type="com.easyinsight.customupload.UploadConfigEvent")]
		[Event(name="userConfigCancel", type="com.easyinsight.customupload.UploadConfigEvent")]
	</mx:Metadata>
    <mx:Script><![CDATA[
        import com.easyinsight.administration.feed.FeedDefinitionData;
        import com.easyinsight.datasources.FreshbooksDataSource;
        import com.easyinsight.framework.Credentials;
        import com.easyinsight.framework.CredentialsCache;
        import com.easyinsight.help.ScreencastWindow;
        import com.easyinsight.util.PopUpUtil;

        import mx.managers.PopUpManager;

        [Bindable]
        private var url:String;
        [Bindable]
        private var usernameInputText:String;

        public function get dataSourceDefinition():FeedDefinitionData {
            var obj:FreshbooksDataSource = new FreshbooksDataSource();
            obj.url = urlInput.text;
            return obj;
        }

        public function set dataSourceDefinition(feedDefinition:FeedDefinitionData):void {
            var ds:FreshbooksDataSource = feedDefinition as FreshbooksDataSource;
            CredentialsCache.getCache().nukeCredentials(ds.dataFeedID);
            url = ds.url;
            usernameInputText = ds.username;
        }

        public function get savesCredentials():Boolean {
            return false;
        }

        public function updateDataSource(feedDefinition:FeedDefinitionData):void {
            var ds:FreshbooksDataSource = feedDefinition as FreshbooksDataSource;
            ds.url = urlInput.text;
            ds.pin = verifierInput.text;
        }

        public function get credentials():Credentials {
            return new Credentials();
        }

        public function set credentials(c:Credentials):void {
            usernameInputText = c.userName;
        }

        private function install():void {
            tokenService.getOAuthURL.send(49, 0, urlInput.text);
        }

        private function gotURL():void {
            stackIndex = 1;
            var url:String = tokenService.getOAuthURL.lastResult as String;
            navigateToURL(new URLRequest(url));
        }

        [Bindable]
        private var stackIndex:int = 0;

        public function validate():Boolean {
            return true;
        }]]></mx:Script>
    <mx:RemoteObject destination="tokenService" id="tokenService">
        <mx:method name="getOAuthURL" result="gotURL()"/>
    </mx:RemoteObject>
    <mx:HBox>
        <mx:Label text="Freshbooks Path:"/>
        <mx:TextInput id="urlInput" fontWeight="normal" fontFamily="Lucida Grande" text="{url}"/>
    </mx:HBox>
    <mx:Button label="Authorize Easy Insight Access" click="install()"/>
    <mx:ViewStack resizeToContent="true" selectedIndex="{stackIndex}">
        <mx:Box/>
        <mx:Box>
            <mx:Label text="Verifier:"/>
        <mx:TextInput id="verifierInput" fontWeight="normal" fontFamily="Lucida Grande"/>
        </mx:Box>
    </mx:ViewStack>
</mx:VBox>