<?xml version="1.0" encoding="utf-8"?>
<util:EITitleWindow xmlns:util="com.easyinsight.util.*" xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%"
	creationComplete="doCreationComplete(event)" title="Data Source Creation">
	<mx:Script>
    <![CDATA[
        import com.easyinsight.customupload.wizard.FlatFileUploadContext;
        import com.easyinsight.customupload.wizard.SpreadsheetSetupSource;
        import com.easyinsight.genredata.AnalyzeEvent;

        import mx.controls.Alert;
        import mx.managers.PopUpManager;
        import com.easyinsight.framework.User;
        import mx.validators.Validator;
        // Reference to the file on disk (selected by user)
        [Bindable]
        public var file:FileReference = new FileReference();

        [Bindable]
        [Embed(source="../../../../assets/excelexample.PNG")]
        private var excelImage:Class;

        private var uploadID:Number;

        // Called when the "Browse" button is clicked
        public function doBrowse( event:Event ):void
        {
            // Prompt the user to select a file from disk
            file.browse();
        }

        private function next():void {

                nextButton.enabled = false;
                finishingSection.visible = true;
                var context:FlatFileUploadContext = new FlatFileUploadContext();
                context.uploadID = uploadID;
                uploadService.analyzeUpload.send(context);
            
        }

        private function created():void {
            var uploadResponse:UploadResponse = uploadService.analyzeUpload.lastResult as UploadResponse;
            if (uploadResponse.successful) {
                var context:FlatFileUploadContext = new FlatFileUploadContext();
                context.uploadID = uploadID;
                dispatchEvent(new AnalyzeEvent(new SpreadsheetSetupSource(context, uploadResponse.infos)));
                PopUpManager.removePopUp(this);
            } else {
                Alert.show(uploadResponse.failureMessage);
            }
        }

        // Called when the upload operation has completed
        // Specifically manages response data
        public function doComplete( event:DataEvent ):void
        {
            var xml:XML = new XML(event.data);
            var uploadIDString:String = xml.uploadID.toString();
            this.uploadID = parseInt(uploadIDString);
            successMessage.visible = true;
            //formatBox.enabled = true;
            nextButton.enabled = true;
        }

        // Called when the application has completed startup
        public function doCreationComplete( event:Event ):void
        {
            // Listen for when the user has selected a file
            // Listen for when the file upload is complete
            file.addEventListener( Event.SELECT, doSelect );
            file.addEventListener( DataEvent.UPLOAD_COMPLETE_DATA, doComplete );
            file.addEventListener( IOErrorEvent.IO_ERROR, onIOError);
        }

        private function onIOError(event:IOErrorEvent):void {
            Alert.show(event.text);
        }

        // Called when the user selects a file from disk
        public function doSelect( event:Event ):void
        {
            txtPhoto.text = file.name;
            uploadButton.enabled = true;
        }

        // Called when the "Submit" button is clicked
        // Initiates file upload operation
        public function doSubmit( event:Event ):void
        {
            // Specify the endpoint for the upload operation
            // Create an object to hold additional data fields
            var request:URLRequest = new URLRequest( "/app/UploadExample" );
            var vars:URLVariables = new URLVariables();

            // Set the data fields as appropriate
            vars.userName = new String(User.getInstance().userName);
            vars.password = new String(User.getInstance().password);

            // Assign the data fields to the request
            request.data = vars;

            progressBar.visible = true;

            // Start the file upload process
            file.upload( request );
        }

        private function cancel():void {
            PopUpManager.removePopUp(this);
        }
    ]]>
	</mx:Script>
	<mx:RemoteObject id="uploadService" destination="userUpload">
		<mx:method name="analyzeUpload" result="created()"/>
	</mx:RemoteObject>
	<mx:HBox width="100%" height="100%" id="coreVBox" styleName="TitleWindowContents">
        <mx:Form id="coreForm" paddingRight="0">
            <mx:FormItem label="Select a file to upload:" direction="horizontal" fontFamily="Tahoma" fontWeight="bold">
                <mx:TextInput id="txtPhoto" editable="false"/>
                <mx:Button label="Browse..." click="doBrowse( event )" />
            </mx:FormItem>
            <mx:FormItem label="" direction="horizontal">
                <mx:Button label="Upload" click="doSubmit( event )" id="uploadButton" enabled="false"/>
            </mx:FormItem>
            <mx:FormItem label="" direction="vertical">
                <mx:HBox horizontalAlign="center">
                    <mx:ProgressBar id="progressBar" visible="false" source="{file}"/>
                </mx:HBox>
                <mx:Label text="Upload successful!" visible="false" id="successMessage" fontFamily="Tahoma" fontWeight="bold"/>
            </mx:FormItem>
            <mx:FormItem label="" direction="horizontal">
                <mx:Button label="Finish" click="next()" enabled="false" id="nextButton"/>
                <mx:Button label="Cancel" click="cancel()"/>
            </mx:FormItem>
            <mx:FormItem label="" direction="vertical" visible="false" id="finishingSection">
                <mx:HBox horizontalAlign="center">
                    <mx:ProgressBar indeterminate="true" label="Processing the data you uploaded..."/>
                </mx:HBox>
            </mx:FormItem>
        </mx:Form>
	    <mx:VBox>
            <mx:TextArea text="You can upload Excel (1997-2007) spreadsheets or comma or tab separated text files here. The file should have a header row, with data in the subsequent cells, as shown below:" borderThickness="0"
                    width="260" height="90" backgroundAlpha="0" editable="false"/>
            <mx:Image source="{excelImage}"/>
            <mx:TextArea width="260" height="50" text="You may experience unexpected results if the data does not match that pattern." borderThickness="0" backgroundAlpha="0" editable="false"/>
	    </mx:VBox>
	</mx:HBox>
</util:EITitleWindow>
