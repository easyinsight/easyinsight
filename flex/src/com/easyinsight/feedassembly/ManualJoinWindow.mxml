<?xml version="1.0" ?>
<util:EITitleWindow xmlns:util="com.easyinsight.util.*" xmlns:mx="http://www.adobe.com/2006/mxml" creationComplete="getDefinitions()"
        paddingLeft="5" paddingBottom="5" paddingRight="5" paddingTop="5">
    <mx:Script><![CDATA[
        import com.easyinsight.analysis.AnalysisItem;
        import com.easyinsight.analysis.AnalysisItemTypes;

        import mx.collections.Sort;
        import mx.collections.SortField;
        import mx.managers.PopUpManager;
        import mx.collections.ArrayCollection;
        import com.easyinsight.administration.feed.FeedDefinitionData;

        public var sourceFeedID:int;
        public var targetFeedID:int;

        private var sourceDefinition:FeedDefinitionData;
        private var targetDefinition:FeedDefinitionData;

        [Bindable]
        private var sourceFeedName:String;
        [Bindable]
        private var targetFeedName:String;
        [Bindable]
        private var sourceFields:ArrayCollection;
        [Bindable]
        private var targetFields:ArrayCollection;

        private function getDefinitions():void {
            feedService.getMultipleFeeds.send(sourceFeedID, targetFeedID);
        }

        private function gotFeeds():void {
            var feeds:ArrayCollection = feedService.getMultipleFeeds.lastResult as ArrayCollection;
            sourceDefinition = feeds.getItemAt(0) as FeedDefinitionData;
            targetDefinition = feeds.getItemAt(1) as FeedDefinitionData;
            sourceFeedName = sourceDefinition.feedName;
            targetFeedName = targetDefinition.feedName;
            var sort:Sort = new Sort();
            sort.fields = [ new SortField("display", false) ];
            var groupingSourceFields:ArrayCollection = new ArrayCollection();
            for each (var field:AnalysisItem in sourceDefinition.fields) {
                if (field.hasType(AnalysisItemTypes.DIMENSION) && !field.hasType(AnalysisItemTypes.DATE)) {
                    groupingSourceFields.addItem(field);
                }
            }
            sourceFields = groupingSourceFields;
            sourceFields.sort = sort;
            sourceFields.refresh();
            var groupingTargetFields:ArrayCollection = new ArrayCollection();
            for each (var targetField:AnalysisItem in targetDefinition.fields) {
                if (targetField.hasType(AnalysisItemTypes.DIMENSION) && !targetField.hasType(AnalysisItemTypes.DATE)) {
                    groupingTargetFields.addItem(targetField);
                }
            }
            targetFields = groupingTargetFields;
            targetFields.sort = sort;
            targetFields.refresh();
        }

        private function create():void {
            var connects:ArrayCollection = new ArrayCollection();
            var connect:ConnectionWithInfo = new ConnectionWithInfo();
            connect.sourceFeedID = sourceDefinition.dataFeedID;
            connect.targetFeedID = targetDefinition.dataFeedID;
            connect.sourceJoin = sourceBox.selectedItem.key;
            connect.targetJoin = targetBox.selectedItem.key;
            connects.addItem(connect);
            dispatchEvent(new JoinSelectionEvent(connects));
            PopUpManager.removePopUp(this);
        }

        private function cancel():void {
            PopUpManager.removePopUp(this);
        }
]]></mx:Script>
    <mx:RemoteObject destination="feeds" id="feedService">
        <mx:method name="getMultipleFeeds" result="gotFeeds()"/>
    </mx:RemoteObject>
    <mx:VBox>
        <mx:HBox>
            <mx:VBox>
                <mx:Label text="{sourceFeedName}"/>
                <util:SmartComboBox id="sourceBox" dataProvider="{sourceFields}" labelField="display"/>
            </mx:VBox>
            <mx:VBox>
                <mx:Label text="{targetFeedName}"/>                
                <util:SmartComboBox id="targetBox" dataProvider="{targetFields}" labelField="display"/>
            </mx:VBox>
        </mx:HBox>
        <mx:HBox width="100%" horizontalAlign="center">
            <mx:Button label="Create" click="create()"/>
            <mx:Button label="Cancel" click="cancel()"/>
        </mx:HBox>
    </mx:VBox>
</util:EITitleWindow>