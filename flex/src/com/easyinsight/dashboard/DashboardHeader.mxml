<?xml version="1.0"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:util="com.easyinsight.util.*"
         xmlns:datasources="com.easyinsight.datasources.*" borderStyle="solid"
         borderThickness="1" borderColor="#DDDDDD"
         backgroundColor="#FFFFFF">
    <mx:Script><![CDATA[
        import com.easyinsight.analysis.IRetrievable;
        import com.easyinsight.datasources.DataSourceInfo;
        import com.easyinsight.genredata.ExchangeItem;

        import mx.controls.TextArea;
        import mx.core.UIComponent;
        import mx.states.RemoveChild;
        import mx.states.State;

        [Bindable]
        [Embed(source="../../../../assets/document_out.png")]
        private var closeIcon:Class;

        [Bindable]
        [Embed(source="../../../../assets/table.png")]
        private var exportIcon:Class;

        [Bindable]
        [Embed(source="../../../../assets/plasma_tv.png")]
        private var fullScreenIcon:Class;
        [Bindable]
        [Embed(source="../../../../assets/edit.png")]
        private var reportEditorIcon:Class;
        [Bindable]
        [Embed(source="../../../../assets/funnel.png")]
        private var filterIcon:Class;
        [Bindable]
        [Embed(source="../../../../assets/bookmark_blue.png")]
        private var bookmarkIcon:Class;
        [Bindable]
        [Embed(source="../../../../assets/refresh.png")]
        private var refreshIcon:Class;

        [Bindable]
        [Embed(source="../../../../assets/banner4.jpg")]
        public var backImage:Class;

        [Bindable]
        [Embed(source="../../../../assets/arrow_left_blue.png")]
        protected var previousReportArrow:Class;

        [Bindable]
        [Embed(source="../../../../assets/arrow_right_blue.png")]
        protected var nextReportArrow:Class;

        [Bindable]
        private var _dashboardView:DashboardView;

        public function set dashboardView(value:DashboardView):void {
            _dashboardView = value;
        }

        private var _dashboard:Dashboard;

        public function set dashboard(value:Dashboard):void {
            _dashboard = value;
            if (_dashboard != null) {
                description = _dashboard.description;
                dashboardName = _dashboard.name;
            }
        }

        [Bindable]
        private var description:String;

        [Bindable]
        private var dashboardName:String;

        private var stateIndex:int;
        private var lastState:State;

        public function generateState(description:String, exchangeItem:ExchangeItem, dashboardView:DashboardView):void {
            _dashboardView = dashboardView;
            var ops:Array = [];
            var textAreas:Array = [];
            var remainingSections:Array = [];
            if (description == null || description.length == 0) {
                var removeDescription:RemoveChild = new RemoveChild();
                removeDescription.target = descriptionBox;
                ops.push(removeDescription);
                var removeRule1:RemoveChild = new RemoveChild();
                removeRule1.target = rule1;
                ops.push(removeRule1);
            } else {
                textAreas.push(descriptionArea);
                remainingSections.push(descriptionBox);
            }
            if (exchangeItem == null) {
                var removeExchange:RemoveChild = new RemoveChild();
                removeExchange.target = exchangeBox;
                ops.push(removeExchange);
            } else {
                textAreas.push(exchangeArea);
                remainingSections.push(exchangeBox);
            }

            if (exchangeItem != null) {
                var removeData:RemoveChild = new RemoveChild();
                removeData.target = dataSourceDisplay;
                ops.push(removeData);
            } else {
                textAreas.push(dataSourceDisplay.sourceLabel);
                remainingSections.push(dataSourceDisplay);
            }
            if (ops.length > 0) {
                var len:int = Math.max(2, textAreas.length);
                for each (var area:TextArea in textAreas) {
                    area.width = 780 / len;
                }
                for each (var comp:UIComponent in remainingSections) {
                    comp.width = 830 / len;
                }
                var state:State = new State();
                var name:String = "report" + stateIndex++;
                state.name = name;
                state.overrides = ops;
                var states:Array = [];
                states.push(state);
                if (lastState != null) {
                    states.push(lastState);
                }
                this.states = states;
                lastState = state;
                currentState = name;
            } else {
                currentState = "";
            }
        }

        private var _dataSource:DataSourceInfo;

        private var _viewFactory:IRetrievable;


        [Bindable(event="dataSourceChanged")]
        public function get dataSource():DataSourceInfo {
            return _dataSource;
        }

        public function set dataSource(value:DataSourceInfo):void {
            if (_dataSource == value) return;
            _dataSource = value;
            dispatchEvent(new Event("dataSourceChanged"));
        }

        [Bindable(event="viewFactoryChanged")]
        public function get viewFactory():IRetrievable {
            return _viewFactory;
        }

        public function set viewFactory(value:IRetrievable):void {
            if (_viewFactory == value) return;
            _viewFactory = value;
            dispatchEvent(new Event("viewFactoryChanged"));
        }
        ]]></mx:Script>
    <mx:VBox width="1000" id="highBox" paddingLeft="10" paddingRight="10">
            <mx:HBox paddingTop="10" id="leftButtonBar" paddingBottom="10" width="100%">
                <mx:Button click="_dashboardView.close()" icon="{closeIcon}" labelPlacement="right"
                           id="backButton"
                           toolTip="Close the report view" label="Close Dashboard"/>
                <mx:Button click="_dashboardView.refreshData()" icon="{refreshIcon}" labelPlacement="right"
                           id="refreshButton" toolTip="Refresh this dashboard" label="Refresh"/>
                <mx:Button icon="{exportIcon}" click="_dashboardView.exportDashboard(exportButton)"
                       labelPlacement="right"
                       id="exportButton" toolTip="Export the report..." label="Export"/>
                <mx:Button click="_dashboardView.toggleFilters()" icon="{filterIcon}" labelPlacement="right"
                           id="filterButton" label="Toggle Filters"/>
                <mx:Spacer width="100%"/>
                <mx:Label text="{dashboardName}" maxWidth="350"
                          fontSize="14"/>
                <mx:Spacer width="100%"/>
            </mx:HBox>
            <mx:HBox width="100%" verticalAlign="middle">
                <mx:Button icon="{previousReportArrow}" labelPlacement="bottom" toolTip="{_dashboardView.previousReportLabel}"
                    click="_dashboardView.toPreviousReport()" id="previousReportButton" visible="{_dashboardView.previousReportAvailable}"/>
                <mx:VBox id="descriptionBox">
                    <util:AutoSizeTextArea text="{description}" width="250" id="descriptionArea"
                            focusEnabled="false" editable="false" selectable="false"/>
                </mx:VBox>
                <mx:VRule height="30" id="rule1"/>
                <mx:VBox verticalAlign="middle" horizontalAlign="center" id="exchangeBox">
                    <util:AutoSizeTextArea
                            text="Want to save this dashboard to your account? You can alter the dashboard after saving."
                            editable="false" selectable="false" width="250" backgroundAlpha="0"
                            focusEnabled="false" id="exchangeArea"/>
                    <mx:Button label="Save to my Account" fontSize="12" styleName="grayButton"
                               click="_dashboardView.saveReport(event)"/>
                </mx:VBox>
                <datasources:DataSourceDisplay dataSource="{dataSource}" dataView="{viewFactory}"
                                           id="dataSourceDisplay"/>
                <mx:Button icon="{nextReportArrow}" labelPlacement="bottom" toolTip="{_dashboardView.nextReportLabel}"
                    click="_dashboardView.toNextReport()" id="nextReportButton" visible="{_dashboardView.nextReportAvailable}"/>
            </mx:HBox>
        </mx:VBox>
    <mx:Box width="100%" backgroundImage="{backImage}" backgroundSize="100%" height="18"/>
</mx:VBox>
