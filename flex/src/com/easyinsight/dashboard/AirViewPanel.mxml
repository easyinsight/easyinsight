<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%"
        creationComplete="setupTimer()" implements="com.easyinsight.util.IAsyncScreen">
	<mx:Script>
		<![CDATA[
        import com.easyinsight.analysis.AirViewFactory;
        import com.easyinsight.analysis.CredentialRequirement;
        import com.easyinsight.analysis.CredentialsEvent;
        import com.easyinsight.analysis.EmbeddedControllerLookup;
        import com.easyinsight.analysis.EmbeddedViewFactory;
        import com.easyinsight.analysis.IEmbeddedReportController;
        import com.easyinsight.analysis.EmbeddedDataServiceEvent;

        import com.easyinsight.analysis.RuntimeCredentialsWindow;
        import com.easyinsight.framework.DataServiceLoadingEvent;

        import com.easyinsight.util.PopUpUtil;

        import mx.core.Container;
        import mx.managers.PopUpManager;

        private function setupTimer():void {
            timer = new Timer(300000);
            timer.addEventListener(TimerEvent.TIMER, onTimer);
            timer.start();
        }

        private function onTimer(event:TimerEvent):void {
            dataViewFactory.retrieveData();
        }

        private var _analysisID:int;
        private var _reportType:int;
        private var _dataSourceID:int;


        public function set dataSourceID(value:int):void {
            _dataSourceID = value;
        }

        private var dataViewFactory:AirViewFactory;

        private var timer:Timer;

        public function set reportType(val:int):void {
            _reportType = val;
        }

        public function set analysisID(analysisID:int):void {
            this._analysisID = analysisID;
        }


        public function get analysisID():int {
            return _analysisID;
        }

        private function onCredentials(event:CredentialsEvent):void {
            dataViewFactory.retrieveData();
        }

        private function onDataReturn(event:EmbeddedDataServiceEvent):void {
            if (event.credentialRequirements != null) {
                for each (var credential:CredentialRequirement in event.credentialRequirements) {
                    var window:RuntimeCredentialsWindow = new RuntimeCredentialsWindow();
                    window.requirement = credential;
                    window.addEventListener(CredentialsEvent.CREDENTIALS_SAVED, onCredentials);
                    PopUpManager.addPopUp(window, this, true);
                    PopUpUtil.centerPopUp(window);
                }
            }
        }

        override protected function createChildren():void {
            super.createChildren();
            if (dataViewFactory == null) {
                var controllerClass:Class = EmbeddedControllerLookup.controllerForType(_reportType);
                var controller:IEmbeddedReportController = new controllerClass();
                var dataViewFactory:EmbeddedViewFactory = controller.createEmbeddedView();
                var airViewFactory:AirViewFactory = new AirViewFactory();
                airViewFactory.dataSourceID = _dataSourceID;
                airViewFactory.reportType = _reportType;
                airViewFactory.reportID = _analysisID;
                airViewFactory.addEventListener(EmbeddedDataServiceEvent.DATA_RETURNED, onDataReturn);
                airViewFactory.addEventListener(DataServiceLoadingEvent.LOADING_STARTED, dataLoadingEvent);
                airViewFactory.addEventListener(DataServiceLoadingEvent.LOADING_STOPPED, dataLoadingEvent);
                this.dataViewFactory = airViewFactory;
            }
            addChild(airViewFactory);
            airViewFactory.retrieveData();
        }

        private function dataLoadingEvent(event:DataServiceLoadingEvent):void {
            dispatchEvent(event);
        }

        public function refreshData():void {
            dataViewFactory.retrieveData();
        }

        public function getContainer():Container {
            return this;
        }

        public function canRefresh():Boolean {
            return true;
        }

        public function canViewInBrowser():Boolean {
            return true;
        }

        public function getBrowserURL():String {
            return "https://www.easy-insight.com/app/#reportID=" + _analysisID;
        }
                ]]>
	</mx:Script>
</mx:VBox>
