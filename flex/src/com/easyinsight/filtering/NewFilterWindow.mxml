<?xml version="1.0"?>
<util:EISlimWindow xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:util="com.easyinsight.util.*">
    <util:states>
        <mx:State name="advancedReport">
            <mx:RemoveChild target="{advancedOptionsButton}"/>
            <mx:AddChild relativeTo="{optionsBox}">
                <mx:HBox creationComplete="PopUpUtil.centerPopUp(this)">
                    <mx:RadioButton label="Create an Or Filter" groupName="typeGroup" value="orFilter"/>
                    <mx:RadioButton label="Create a Field Choice Filter" groupName="typeGroup" value="fieldChoiceFilter"/>
                </mx:HBox>
            </mx:AddChild>
        </mx:State>
        <mx:State name="advancedReportWithMulti">
            <mx:RemoveChild target="{advancedOptionsButton}"/>
            <mx:AddChild relativeTo="{optionsBox}">
                <mx:HBox creationComplete="PopUpUtil.centerPopUp(this)">
                    <mx:RadioButton label="Create an Or Filter" groupName="typeGroup" value="orFilter"/>
                    <mx:RadioButton label="Create a Field Choice Filter" groupName="typeGroup" value="fieldChoiceFilter"/>
                    <mx:RadioButton label="Create a Multi Field Choice Filter" groupName="typeGroup" value="multiFieldChoiceFilter"/>
                </mx:HBox>
            </mx:AddChild>
        </mx:State>
        <mx:State name="advancedField">
            <mx:RemoveChild target="{advancedOptionsButton}"/>
            <mx:AddChild relativeTo="{optionsBox}">
                <mx:HBox creationComplete="PopUpUtil.centerPopUp(this)">
                    <mx:RadioButton label="Create an Or Filter" groupName="typeGroup" value="orFilter"/>
                    <mx:RadioButton label="Create a Named Reference Filter" groupName="typeGroup" value="namedRef"/>
                </mx:HBox>
            </mx:AddChild>
        </mx:State>
        <mx:State name="advancedDashboard">
            <mx:RemoveChild target="{advancedOptionsButton}"/>
            <mx:AddChild relativeTo="{optionsBox}">
                <mx:HBox creationComplete="PopUpUtil.centerPopUp(this)">
                    <mx:RadioButton label="Create an Or Filter" groupName="typeGroup" value="orFilter"/>
                    <mx:RadioButton label="Create a Trend Filter" groupName="typeGroup" value="trendFilter"/>
                </mx:HBox>
            </mx:AddChild>
        </mx:State>
    </util:states>
    <mx:Script><![CDATA[
        import com.easyinsight.analysis.AnalysisDefinition;
        import com.easyinsight.analysis.AnalysisItemWrapper;
        import com.easyinsight.util.PopUpUtil;

        import mx.collections.ArrayCollection;

        [Bindable]
        public var availableFields:ArrayCollection;

        [Bindable]
        public var advancedAvailable:Boolean = true;

        public static const REPORT_LEVEL:int = 0;
        public static const DASHBOARD_LEVEL:int = 1;
        public static const FIELD_LEVEL:int = 2;

        public var filterSource:int = REPORT_LEVEL;

        public var filterMetadata:FilterMetadata;

        public var reportType:int;

        private function newFieldFilter():void {
            var f:AnalysisItemWrapper = fieldBox.selectedItem as AnalysisItemWrapper;
            if (f != null) {
                dispatchEvent(new NewFilterEvent(NewFilterEvent.FIELD_FILTER, f.analysisItem));
                this.close();
            }
        }

        private function newOrFilter():void {
            dispatchEvent(new NewFilterEvent(NewFilterEvent.OR_FILTER));
            this.close();
        }

        private function newRefFilter():void {
            dispatchEvent(new NewFilterEvent(NewFilterEvent.NAMED_REF_FILTER));
            this.close();
        }

        private function newTrendFilter():void {
            dispatchEvent(new NewFilterEvent(NewFilterEvent.TREND_FILTER));
            this.close();
        }

        private function newFieldChoiceFilter():void {
            var f:AnalysisItemWrapper = aFieldBox.selectedItem as AnalysisItemWrapper;
            if (f != null) {
                dispatchEvent(new NewFilterEvent(NewFilterEvent.FIELD_CHOICE_FILTER, f.analysisItem));
                this.close();
            }
        }

        private function newMultipleFieldChoiceFilter():void {
            /*var f:AnalysisItemWrapper = aFieldBox.selectedItem as AnalysisItemWrapper;
             if (f != null) {*/
            dispatchEvent(new NewFilterEvent(NewFilterEvent.MULTI_FIELD_CHOICE_FILTER));
            this.close();
            //}
        }

        [Bindable]
        private var stackIndex:int = 0;

        private function updateStack():void {
            if (typeGroup.selectedValue == "fieldFilter") {
                stackIndex = 0;
            } else if (typeGroup.selectedValue == "multiFieldChoiceFilter") {
                stackIndex = 3;
            } else if (typeGroup.selectedValue == "namedRef") {
                stackIndex = 4;
            } else if (typeGroup.selectedValue == "trendFilter") {
                stackIndex = 5;
            } else if (typeGroup.selectedValue == "fieldChoiceFilter") {
                stackIndex = 2;
            } else {
                stackIndex = 1;
            }
        }

        override protected function createChildren():void {
            super.createChildren();

        }

        private function toAdvanced():void {
            if (filterSource == REPORT_LEVEL) {
                if (reportType == AnalysisDefinition.LIST || reportType == AnalysisDefinition.YTD || reportType == AnalysisDefinition.LINE ||
                        reportType == AnalysisDefinition.VERTICAL_LIST || reportType == AnalysisDefinition.COMPARE_YEARS) {
                    currentState = "advancedReportWithMulti";
                } else {
                    currentState = "advancedReport";
                }
            } else if (filterSource == FIELD_LEVEL) {
                currentState = "advancedField";
            } else if (filterSource == DASHBOARD_LEVEL) {
                currentState = "advancedDashboard";
            } else {
                currentState = "advancedReportWithMulti";
            }

        }
        ]]></mx:Script>
    <mx:VBox>
        <mx:RadioButtonGroup id="typeGroup" change="updateStack()" selectedValue="fieldFilter"/>
        <mx:HBox id="optionsBox">
            <mx:RadioButton label="Create a Filter on a Field" groupName="typeGroup" value="fieldFilter"/>
            <mx:LinkButton label="Show Advanced Options" click="toAdvanced()" textDecoration="underline" id="advancedOptionsButton" visible="{advancedAvailable}"/>
        </mx:HBox>
        <mx:ViewStack resizeToContent="true" selectedIndex="{stackIndex}" id="viewStack">
            <mx:VBox>
                <mx:Label text="Choose a field for the filter:"/>
                <util:TextInputWithArrow id="fieldBox" width="300" dataProvider="{availableFields}"/>
                <mx:HBox>
                    <util:SaveButton label="Create the Filter" click="newFieldFilter()"/>
                    <util:CancelButton label="Cancel" click="this.close()"/>
                </mx:HBox>
            </mx:VBox>
            <mx:HBox>
                <util:SaveButton label="Create a new Or Filter" click="newOrFilter()"/>
                <util:CancelButton label="Cancel" click="this.close()"/>
            </mx:HBox>
            <mx:VBox id="fieldChoiceFilterBox">
                <mx:Label text="Choose a field for the filter:"/>
                <util:TextInputWithArrow id="aFieldBox" width="300" dataProvider="{availableFields}"/>
                <mx:HBox>
                    <util:SaveButton label="Create a new Single Field Choice Filter" click="newFieldChoiceFilter()"/>
                    <util:CancelButton label="Cancel" click="this.close()"/>
                </mx:HBox>
            </mx:VBox>
            <mx:VBox id="multiFieldChoiceFilterbox">
                <mx:HBox>
                    <util:SaveButton label="Create a new Multiple Field Choice Filter" click="newMultipleFieldChoiceFilter()"/>
                    <util:CancelButton label="Cancel" click="this.close()"/>
                </mx:HBox>
            </mx:VBox>
            <mx:HBox id="namedReferenceFilterBox">
                <util:SaveButton label="Create a new Named Reference Filter" click="newRefFilter()"/>
                <util:CancelButton label="Cancel" click="this.close()"/>
            </mx:HBox>
            <mx:HBox id="trendFilterBox">
                <util:SaveButton label="Create a new Trend Filter" click="newTrendFilter()"/>
                <util:CancelButton label="Cancel" click="this.close()"/>
            </mx:HBox>
        </mx:ViewStack>
    </mx:VBox>
</util:EISlimWindow>
