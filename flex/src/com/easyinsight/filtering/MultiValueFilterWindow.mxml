<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml"  implements="com.easyinsight.filtering.IFilterDetailEditor">
	<mx:Script>
		<![CDATA[
        import com.easyinsight.framework.CredentialsCache;

        import mx.rpc.remoting.RemoteObject;
        import mx.rpc.events.ResultEvent;
        import mx.collections.ArrayCollection;

        import com.easyinsight.analysis.Value;
        import com.easyinsight.analysis.AnalysisDimensionResultMetadata;

        private var _filterValueDefinition:FilterValueDefinition;

        [Bindable]
        private var sourceValues:ArrayCollection;
        [Bindable]
        private var targetValues:ArrayCollection;

        private var _feedID:int;

        private var dataService:RemoteObject;

        public function set filterValueDefinition(filterValueDefinition:FilterValueDefinition):void {
            this._filterValueDefinition = filterValueDefinition;
        }

        public function set feedID(feedID:int):void {
            this._feedID = feedID;
        }

        override protected function commitProperties():void {
            super.commitProperties();
            dataService = new RemoteObject();
            dataService.destination = "data";
            dataService.getAnalysisItemMetadata.addEventListener(ResultEvent.RESULT, gotMetadata);
            dataService.getAnalysisItemMetadata.send(_feedID, _filterValueDefinition.field, CredentialsCache.getCache().createCredentials());
        }

        private function gotMetadata(event:ResultEvent):void {
            var analysisDimensionResultMetadata:AnalysisDimensionResultMetadata = dataService.getAnalysisItemMetadata.lastResult as
                                                                                  AnalysisDimensionResultMetadata;
            var strings:ArrayCollection = new ArrayCollection();
            for each (var value:Value in analysisDimensionResultMetadata.values) {
                var string:String = String(value.getValue());
                if (!strings.contains(string) && !_filterValueDefinition.filteredValues.contains(string)) {
                    strings.addItem(string);
                }
            }
            sourceValues = strings;
            targetValues = _filterValueDefinition.filteredValues;
        }


        public function makeUpdates():FilterDefinition {
            _filterValueDefinition.filteredValues = targetList.dataProvider as ArrayCollection;
            return _filterValueDefinition;
        }

        public function set filterDefinition(filterDefinition:FilterDefinition):void {
            _filterValueDefinition = filterDefinition as FilterValueDefinition;
        }

        private function onTypeChange():void {
            if (typeGroup.selectedValue == "single") {
                dispatchEvent(new FilterEditEvent(_filterValueDefinition, _filterValueDefinition, ComboBoxFilterWindow));
            }
        }
		]]>
	</mx:Script>
    <mx:HBox>
        <mx:RadioButtonGroup id="typeGroup" change="onTypeChange()"/>
        <mx:RadioButton group="{typeGroup}" label="Single Value" value="single"/>
        <mx:RadioButton group="{typeGroup}" label="Multi Value" selected="true" value="multi"/>
    </mx:HBox>
    <mx:Label text="Drag Items Between Available and Included to Filter"/>
    <mx:HBox>
        <mx:VBox>
            <mx:ApplicationControlBar width="200">
                <mx:Label text="Available Values"/>
            </mx:ApplicationControlBar>
            <mx:List dataProvider="{sourceValues}" dragMoveEnabled="true" dropEnabled="true" dragEnabled="true" width="200"/>
        </mx:VBox>
        <mx:VBox>
            <mx:ApplicationControlBar width="200">
                <mx:Label text="Included Values"/>
            </mx:ApplicationControlBar>
            <mx:List dataProvider="{targetValues}" dropEnabled="true" dragEnabled="true" dragMoveEnabled="true" id="targetList"
                width="200"/>
        </mx:VBox>
    </mx:HBox>
</mx:VBox>
