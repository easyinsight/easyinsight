<?xml version="1.0" encoding="utf-8"?>
<mx:Box xmlns:feed="com.easyinsight.administration.feed.*" xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%">
	<mx:states>
		<mx:State name="Private">
			<mx:AddChild relativeTo="{coreVBoxX}">
				<feed:PrivatePolicyBox id="privatePolicyBox" initialPolicy="{uploadPolicy}"/>
			</mx:AddChild>
		</mx:State>
		<mx:State name="NoMerchant">
			<mx:AddChild relativeTo="{coreVBoxX}">
				<feed:NoMerchantPolicyBox createdMerchant="createdMerchant(event)"/>
			</mx:AddChild>					
		</mx:State>
		<mx:State name="Commercial">
			<mx:AddChild relativeTo="{coreVBoxX}">
				<feed:CommercialPolicyBox id="commercialPolicyBox" initialPolicy="{uploadPolicy}"/>
			</mx:AddChild>
		</mx:State>
		<mx:State name="Group">
			<mx:AddChild relativeTo="{coreVBoxX}">
				<feed:GroupPolicyBox id="groupPolicyBox" initialPolicy="{uploadPolicy}"/>
			</mx:AddChild>
		</mx:State>
	</mx:states>
	<mx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import com.easyinsight.store.CreatedMerchantEvent;
			import com.easyinsight.store.MerchantAccountCreationWindow;
			import mx.managers.PopUpManager;
			import com.easyinsight.framework.User;
			import com.easyinsight.customupload.Price;
			import com.easyinsight.customupload.CommercialUploadPolicy;
            import com.easyinsight.customupload.PrivateUploadPolicy;
            import com.easyinsight.customupload.PublicUploadPolicy;
            import com.easyinsight.customupload.UploadPolicy;
            import mx.events.ItemClickEvent;
            
            [Bindable]
            private var uploadPolicy:UploadPolicy;
            
            public function set policy(policy:UploadPolicy):void {
            	this.uploadPolicy = policy;
            } 

            public function get policy():UploadPolicy {
                switch (policyGroup.selectedValue) {
                    case "publicPolicy":
                        uploadPolicy = new PublicUploadPolicy();
                        break;
                    case "privatePolicy":
                    	if (privatePolicyBox != null) {
                        	uploadPolicy = privatePolicyBox.createPolicy();
                     	}
                        break;
                    case "commercialPolicy":
                    	if (commercialPolicyBox != null) {                    	
                        	uploadPolicy = commercialPolicyBox.createPolicy();
                     	}                                
                        break;
                	case "groupPolicy":
                		if (groupPolicyBox != null) {
                			uploadPolicy = groupPolicyBox.createPolicy();
                		}
                		break;
                }
                return uploadPolicy;
            }
            
            override protected function commitProperties():void {
            	switch (uploadPolicy.getPolicyType()) {
            		case UploadPolicy.PUBLIC:
            			currentState = "";
            			break;
            		case UploadPolicy.PRIVATE:
            			currentState = "Private";
            			break;
        			case UploadPolicy.COMMERCIAL:
        				if (User.getInstance().getMerchants().length == 0) {
							currentState = "NoMerchant";								
						} else {
							currentState = "Commercial";
						}
						break;
					case UploadPolicy.GROUP:
						currentState = "Group";
						break;	
            	}	
            }

            private function policyChange(event:ItemClickEvent):void {
				if (event.currentTarget.selectedValue == "commercialPolicy") {
					if (User.getInstance().getMerchants().length == 0) {
						currentState = "NoMerchant";								
					} else {
						currentState = "Commercial";
					}
				} else if (event.currentTarget.selectedValue == "privatePolicy") {
					currentState = "Private";
				} else if (event.currentTarget.selectedValue == "groupPolicy") {
					currentState = "Group";
				} else {
					currentState = "";
				}
            }
            
            private function createdMerchant(event:CreatedMerchantEvent):void {
            	currentState = "Commercial";
            }
        ]]>
	</mx:Script>
	<mx:VBox width="100%" height="100%">
		<mx:HBox width="100%">
			<mx:RadioButtonGroup id="policyGroup" itemClick="policyChange(event)"/>
			<mx:RadioButton groupName="policyGroup" id="publicPolicy" value="publicPolicy"
				label="Public" selected="{uploadPolicy.getPolicyType() == UploadPolicy.PUBLIC}"
				color="#FFFFFF"/>
			<mx:RadioButton groupName="policyGroup" id="privatePolicy" value="privatePolicy"
				label="Private" selected="{uploadPolicy.getPolicyType() == UploadPolicy.PRIVATE}"
				color="#FFFFFF"/>	
			<mx:RadioButton groupName="policyGroup" id="groupPolicy" value="groupPolicy"
				label="Group" selected="{uploadPolicy.getPolicyType() == UploadPolicy.GROUP}"
				color="#FFFFFF"/>		
			<mx:RadioButton groupName="policyGroup" id="commercialPolicy" value="commercialPolicy"
				label="Commercial" selected="{uploadPolicy.getPolicyType() == UploadPolicy.COMMERCIAL}"
				color="#FFFFFF"/>
		</mx:HBox>
		<mx:VBox id="coreVBoxX" width="100%" height="100%">
			
		</mx:VBox>
	</mx:VBox>
</mx:Box>
