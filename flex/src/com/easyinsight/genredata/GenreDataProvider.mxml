<?xml version="1.0" encoding="utf-8"?>
<mx:Box xmlns:listing="com.easyinsight.listing.*" xmlns:mx="http://www.adobe.com/2006/mxml" width="100%"
                      height="100%"
                      xmlns:genredata="com.easyinsight.genredata.*"
                      implements="com.easyinsight.listing.IPerspective" creationComplete="setupListeners()" verticalGap="0">
    <mx:Script>
		<![CDATA[

        import com.easyinsight.solutions.Solution;

        import mx.binding.utils.BindingUtils;
        import mx.controls.Alert;
        import mx.utils.URLUtil;
        import mx.managers.BrowserManager;

        [Bindable]
        [Embed(source="../../../../assets/prototype/ReverseGray.jpg")]
        private var banner:Class;

        [Bindable]
        private var introText:String;

        private function setupListeners():void {
            //BindingUtils.bindProperty(stateBar, "selectedIndex", this, "viewMode");            
            BindingUtils.bindProperty(this, "solution", solutionDataController, "solution");
            BindingUtils.bindProperty(displayTypeBar, "selectedIndex", this, "displayMode");

        }

        private function toState(index:int):void {
            viewMode = index;
            listsBox.removeAllChildren();
            if (index == 0) {
                headerIndex = 0;
                exchangeController = publicDataController;
            } else if (index == 1) {
                headerIndex = 1;
                exchangeController = solutionDataController;
            }
            introText = exchangeController.text;
            updateDisplayMode2();
            updateURL();
            listsBox.addChild(exchangeController.selectedPage);
            exchangeController.refreshData();
        }

        private function updateURL():void {
            var fragmentObject:Object = new Object();
            fragmentObject.page = "exchange";
            fragmentObject.view = viewMode;
            fragmentObject.display = displayMode;
            fragmentObject.subTopicID = subTopicID;
            //exchangeController.decorateObject(fragmentObject);
            var fragmentString:String = URLUtil.objectToString(fragmentObject);
            fragmentString = stringReplaceAll(fragmentString, ";", "&");
            BrowserManager.getInstance().setFragment(fragmentString);
        }



        public static function stringReplaceAll(source:String, find:String, replacement:String):String
        {
            return source.split(find).join(replacement);
        }

        private function search():void {
            exchangeController.keyword = searchText.text;
        }

        private function updateDisplayMode2():void {
            displayMode = displayTypeBar.selectedIndex;
            if (displayTypeBar.selectedIndex == 1) {
                exchangeController.displayMode = "grid";
            } else if (displayTypeBar.selectedIndex == 0) {
                exchangeController.displayMode = "summary";
            } else if (displayTypeBar.selectedIndex == 2) {
                exchangeController.displayMode = "detail";
            }
            updateURL();
        }

        /*private function updateState():void {
         }*/


        [Bindable]
        [Embed(source="../../../../assets/background2.JPG")]
        private var background2:Class;


        public function gotFocus():void {
            BrowserManager.getInstance().setTitle("Easy Insight - Exchange");            
            if (viewMode == 1) {
                exchangeController = solutionDataController;
            } else {
                exchangeController = publicDataController;
            }
            introText = exchangeController.text;
            if (displayMode == 1) {
                exchangeController.displayMode = "grid";
            } else if (displayMode == 2) {
                exchangeController.displayMode = "detail";
            } else {
                exchangeController.displayMode = "summary";
            }
            if (subTopicID > 0) {
                exchangeController.subTopicID = subTopicID;
            }
            solutionDataController.initBehavior();            
            updateURL();
            listsBox.removeAllChildren();
            listsBox.addChild(exchangeController.selectedPage);
            exchangeController.refreshData();
        }

        private function onChangeView(event:ExchangeControllerEvent):void {
            listsBox.removeAllChildren();
            listsBox.addChild(event.exchangePage);
        }

        private var _viewMode:int = 0;

        private var _displayMode:int = 0;

        private var _subTopicID:int = 0;

        [Bindable(event="subTopicIDChanged")]
        public function get subTopicID():int {
            return _subTopicID;
        }

        public function set subTopicID(value:int):void {
            if (_subTopicID == value) return;
            _subTopicID = value;
            dispatchEvent(new Event("subTopicIDChanged"));
        }

        [Bindable(event="viewModeChanged")]
        public function get viewMode():int {
            return _viewMode;
        }

        public function set viewMode(value:int):void {
            if (_viewMode == value) return;
            _viewMode = value;
            dispatchEvent(new Event("viewModeChanged"));
        }

        [Bindable(event="displayModeChanged")]
        public function get displayMode():int {
            return _displayMode;
        }

        public function set displayMode(value:int):void {
            if (_displayMode == value) return;
            _displayMode = value;
            dispatchEvent(new Event("displayModeChanged"));
        }

        private var exchangeController:ExchangeController;


        [Bindable(event="solutionChanged")]
        public function get solution():Object {
            return _solution;
        }

        public function set solution(value:Object):void {
            if (_solution == value) return;
            _solution = value;
            if (value is Solution) {
                subTopicID = value.solutionID;
            } else {
                subTopicID = 0;
            }
            updateURL();
            dispatchEvent(new Event("solutionChanged"));
        }

        [Bindable]
        private var headerIndex:int = 0;

        private var _solution:Object;

        public function cleanup():void {
        }

                ]]>
	</mx:Script>

    <genredata:PublicDataController id="publicDataController" changeView="onChangeView(event)"/>
    <genredata:SolutionExchangeController id="solutionDataController" changeView="onChangeView(event)" solution="{solution}" updateURL="updateURL()"/>

    <mx:Style>
.gradientBackground1 {
    backgroundImage: ClassReference("com.easyinsight.util.GradientBackground");
    backgroundSize: "100%";
fillColors: #D42525, #FFFFFF;
fillAlphas: 1, 1;
}
</mx:Style>

    <mx:VBox width="100%" height="100%"  paddingLeft="0" paddingRight="0" paddingTop="0" paddingBottom="0"
                      verticalGap="0">

    <mx:HBox width="100%" horizontalAlign="center" height="100%" backgroundColor="#818285" paddingRight="0" paddingTop="0" paddingBottom="0">
    <mx:VBox id="centerBox" width="100%" height="100%" paddingBottom="10"
             paddingLeft="0" paddingRight="0" paddingTop="0" backgroundColor="#FFFFFF" verticalGap="0">

        <mx:HBox verticalAlign="middle" horizontalAlign="center"
                                         width="100%" backgroundImage="{banner}" backgroundSize="100%">
            <mx:Spacer width="100"/>
            <mx:ViewStack resizeToContent="true" selectedIndex="{headerIndex}">
                <mx:Box>
                    <mx:LinkButton label="Public Data" click="toState(0)" fontSize="18" fontFamily="Tahoma" fontWeight="bold" color="#FFFFFF"/>
                </mx:Box>
                <mx:Box>
                    <mx:LinkButton label="Public Data" click="toState(0)" fontSize="14" fontFamily="Tahoma" fontWeight="bold" color="#FFFFFF"/>
                </mx:Box>
            </mx:ViewStack>
            <mx:Spacer width="100"/>
            <mx:ViewStack resizeToContent="true" selectedIndex="{headerIndex}">
                <mx:Box>
                    <mx:LinkButton label="Connection Reports" click="toState(1)" fontSize="14" fontFamily="Tahoma" fontWeight="bold" color="#FFFFFF"/>
                </mx:Box>
                <mx:Box>
                    <mx:LinkButton label="Connection Reports" click="toState(1)" fontSize="18" fontFamily="Tahoma" fontWeight="bold" color="#FFFFFF"/>
                </mx:Box>
            </mx:ViewStack>
            <mx:Spacer width="100"/>
        </mx:HBox>        
        
        <mx:HBox width="100%" verticalAlign="middle" paddingTop="5" paddingBottom="5" paddingLeft="20" paddingRight="20">
            <mx:TextArea color="0x323232" borderStyle="none" editable="false" selectable="false" backgroundAlpha="0" width="400" 
                    text="{introText}"/>
            <mx:Spacer width="100%"/>
                <mx:ToggleButtonBar itemClick="updateDisplayMode2()" id="displayTypeBar">
                    <mx:dataProvider>
                        <mx:Array>
                            <mx:String>Summary</mx:String>
                            <mx:String>Grid</mx:String>
                            <!--<mx:String>Detail</mx:String>-->                                
                        </mx:Array>
                    </mx:dataProvider>
                </mx:ToggleButtonBar>
            <mx:Spacer width="100%"/>
            <mx:VBox>
                <mx:HBox horizontalAlign="right">
                    <mx:TextInput id="searchText"/>
                    <mx:Button toolTip="Search" icon="@Embed(source='../../../../assets/view.png')" id="searchButton"
                            click="search()"/>
                </mx:HBox>
                <mx:Label fontSize="10" text="Enter data source or report name or tags"/>
            </mx:VBox>
        </mx:HBox>
        <mx:Spacer height="20" id="topSpacer"/>
        <mx:HBox width="100%" height="100%" id="listsBox" paddingTop="5" paddingBottom="5" paddingLeft="20" paddingRight="20"/>            
    </mx:VBox>
    </mx:HBox>
    </mx:VBox>
</mx:Box>
