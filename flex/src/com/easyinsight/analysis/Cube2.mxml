<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="400" height="300" creationComplete="blah()">
	<mx:Script>
		<![CDATA[
			import mx.olap.OLAPDimension;
			import mx.olap.OLAPResult;
			import mx.controls.Alert;
			import mx.olap.OLAPQuery;
			import mx.olap.OLAPSet;
			import mx.olap.IOLAPQueryAxis;
			import mx.rpc.AsyncResponder;
			import mx.rpc.AsyncToken;
			import mx.olap.IOLAPQuery;
			import mx.olap.IOLAPCube;
			import mx.events.CubeEvent;
			import mx.collections.ArrayCollection;
			
			[Bindable]
			public var myData:ArrayCollection;
			
			private function blah():void {
				myCube.refresh();
			}
			
			private function programmaticCreation():IOLAPCube {
				var cube:OLAPCube = new OLAPCube();
				cube.dataProvider = myData;
				var customerDimension:OLAPDimension = new OLAPDimension();
				customerDimension.name = "column";
				return null;					
			}
			
			// Create the OLAP query.
        private function getQuery(cube:IOLAPCube):IOLAPQuery {
            // Create an instance of OLAPQuery to represent the query. 
            var query:OLAPQuery = new OLAPQuery;
            
            // Get the row axis from the query instance.
            var rowQueryAxis:IOLAPQueryAxis = 
                query.getAxis(OLAPQuery.ROW_AXIS);
            // Create an OLAPSet instance to configure the axis.
            var productSet:OLAPSet = new OLAPSet;
            // Add the Product to the row to aggregate data 
            // by the Product dimension.
            productSet.addElements(
                cube.findDimension("row").findAttribute("Product").children);
            // Add the OLAPSet instance to the axis.
            rowQueryAxis.addSet(productSet);
            
            // Get the column axis from the query instance, and configure it
            // to aggregate the columns by the Quarter dimension. 
            var colQueryAxis:IOLAPQueryAxis = 
                query.getAxis(OLAPQuery.COLUMN_AXIS);         
            var quarterSet:OLAPSet= new OLAPSet;
            quarterSet.addElements(
                cube.findDimension("column").findAttribute("Customer").children);
            colQueryAxis.addSet(quarterSet);
            
            return query;       
        }

        // Event handler to execute the OLAP query 
        // after the cube completes initialization.
        private function runQuery(event:CubeEvent):void {
            // Get cube.
            var cube:IOLAPCube = IOLAPCube(event.currentTarget);
            // Create a query instance.
            var query:IOLAPQuery = getQuery(cube);
            // Execute the query.
            var token:AsyncToken = cube.execute(query);
            // Setup handlers for the query results.
            token.addResponder(new AsyncResponder(showResult, showFault));
        }

        // Handle a query fault.
        private function showFault(result:Object, token:Object):void {
            Alert.show("Error in query.");
        }

        // Handle a successful query by passing the query results to 
        // the OLAPDataGrid control..
        private function showResult(result:Object, token:Object):void {
            if (!result) {
                Alert.show("No results from query.");
                return;
            }
            myOLAPDG.dataProvider= result as OLAPResult;            
        }        
		]]>
	</mx:Script>
	
	<mx:OLAPCube id="myCube" dataProvider="{myData}" complete="runQuery(event)">
		<mx:OLAPDimension name="column">
            <mx:OLAPAttribute name="Customer" dataField="Customer"/>
            <mx:OLAPHierarchy name="Customer" hasAll="true">
                <mx:OLAPLevel attributeName="Customer"/>
            </mx:OLAPHierarchy>
        </mx:OLAPDimension>
        
        <mx:OLAPDimension name="row">
            <mx:OLAPAttribute name="Product" dataField="Product"/>
            <mx:OLAPHierarchy name="Product" hasAll="true">
                <mx:OLAPLevel attributeName="Product"/>
            </mx:OLAPHierarchy>
        </mx:OLAPDimension>
        
        <mx:OLAPMeasure name="Revenue" 
            dataField="Revenue" 
            aggregator="SUM"/>
	</mx:OLAPCube>
	
	<mx:Panel title="OLAPCube Control Example"
        height="75%" width="75%" layout="horizontal"
        paddingTop="10" paddingBottom="10" paddingLeft="10" paddingRight="10">

        <mx:OLAPDataGrid id="myOLAPDG" width="100%" height="100%"/>
    </mx:Panel>
</mx:Canvas>
