<?xml version="1.0" ?>
<analysis:AnalysisItemDetailEditor xmlns:mx="http://www.adobe.com/2006/mxml"
                                   xmlns:analysis="com.easyinsight.analysis.*" xmlns:util="com.easyinsight.util.*"
                                   xmlns:range="com.easyinsight.analysis.range.*"
                                   creationComplete="setupListeners()">
    <mx:Script><![CDATA[
        import com.easyinsight.analysis.*;

        import mx.collections.ArrayCollection;

        [Bindable]
        private var ranges:ArrayCollection = new ArrayCollection();

        [Bindable]
        private var aggregationString:String;

        override public function set analysisItem(val:AnalysisItem):void {
            super.analysisItem = val;
            if (val is AnalysisRangeDimension) {
                var range:AnalysisRangeDimension = val as AnalysisRangeDimension;
                ranges = range.explicitOptions;

                var measureString:String;
                switch (range.aggregationType) {
                    case AggregationTypes.SUM:
                        measureString = "Sum";
                        break;
                    case AggregationTypes.AVERAGE:
                        measureString = "Average";
                        break;
                    case AggregationTypes.MIN:
                        measureString = "Min";
                        break;
                    case AggregationTypes.MAX:
                        measureString = "Max";
                        break;
                    case AggregationTypes.COUNT:
                        measureString = "Count";
                        break;
                }
                aggregationString = measureString;
            }
        }

        override public function save(analysisItem:AnalysisItem):void {
            var analysisRange:AnalysisRangeDimension = analysisItem as AnalysisRangeDimension;
            rangeBox.save();
            analysisRange.explicitOptions = ranges;
            var complexAggregationType:int;
            switch (complexWrappedAggregations.selectedLabel) {
                case "Sum":
                    complexAggregationType = AggregationTypes.SUM;
                    break;
                case "Average":
                    complexAggregationType = AggregationTypes.AVERAGE;
                    break;
                case "Max":
                    complexAggregationType = AggregationTypes.MAX;
                    break;
                case "Min":
                    complexAggregationType = AggregationTypes.MIN;
                    break;
                case "Count":
                    complexAggregationType = AggregationTypes.COUNT;
                    break;
            }
            analysisRange.aggregationType = complexAggregationType;
        }

        private function setupListeners():void {
            addEventListener(RangeEvent.DELETE_RANGE, onRangeDelete);
        }

        private function onRangeDelete(event:RangeEvent):void {
            ranges.removeItemAt(ranges.getItemIndex(event.rangeOption));
        }

        private function addRange():void {
            var rangeOption:RangeOption = new RangeOption();
            ranges.addItem(rangeOption);
        }

        override public function createAnalysisItem(aggregation:String):AnalysisItem {
            return new AnalysisRangeDimension();
        }]]></mx:Script>
    <mx:FormItem label="Range Aggregation: ">
        <mx:ComboBox dataProvider="{measureObjects}" id="complexWrappedAggregations"
                     selectedItem="{aggregationString}"/>
    </mx:FormItem>
    <!--<mx:FormItem label="How do you want to produce the range values?">
        <mx:RadioButtonGroup/>
        <mx:RadioButton label="Let Me Set Explicit Ranges"/>
        <mx:RadioButton label="Calculate the Ranges For Me"/>
    </mx:FormItem>-->
    <mx:FormItem label="">
        <mx:VBox>
            <mx:Button label="Add Range" click="addRange()"/>
            <range:RangeBox id="rangeBox" dataProvider="{ranges}" deleteRange="onRangeDelete(event)"/>
        </mx:VBox>
    </mx:FormItem>
</analysis:AnalysisItemDetailEditor>