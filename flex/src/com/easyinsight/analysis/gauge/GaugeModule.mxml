<?xml version="1.0" ?>
<mx:Module xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:black="ilog.gauges.controls.black.*" width="100%"
           height="100%" implements="com.easyinsight.analysis.IReportRenderer">
    <mx:states>
        <mx:State name="Circular">
            <mx:AddChild relativeTo="{box}">
                <black:BlackCircularGauge width="100%" height="100%" value="{value}" minimum="0" maximum="{maxValue}" startAngle="210"
                    endAngle="330" orientation="clockwise" trackMinimum="0" trackMaximum="{maxValue}" fontFamily="Tahoma"/>
            </mx:AddChild>
        </mx:State>
        <mx:State name="Horizontal">
            <mx:AddChild relativeTo="{box}">
                <black:BlackSemiCircularGauge width="100%" height="100%" value="{value}" minimum="0" maximum="{maxValue}"
                                            trackMinimum="0" trackMaximum="{maxValue}" orientation="clockwise" fontFamily="Tahoma"/>
            </mx:AddChild>
        </mx:State>
    </mx:states>
    <mx:Script><![CDATA[
        import com.easyinsight.analysis.AnalysisDefinition;
        import com.easyinsight.analysis.CustomChangeEvent;
        import com.easyinsight.filtering.FilterRawData;

        import mx.collections.ArrayCollection;

        [Bindable]
        private var value:Number = 0;

        [Bindable]
        private var maxValue:int = 100;

        public function renderReport(dataSet:ArrayCollection, analysisDefinition:AnalysisDefinition, clientProcessorMap:Object):void {
            var gaugeDefinition:GaugeDefinition = analysisDefinition as GaugeDefinition;
            if (dataSet.length > 0) {
                var row:Object = dataSet.getItemAt(0);
                maxValue = gaugeDefinition.maxValue;
                value = Math.min(maxValue, Number(row[gaugeDefinition.measure.qualifiedName()]));
                if (gaugeDefinition.gaugeType == GaugeDefinition.CIRCULAR_GAUGE) {
                    currentState = "Circular";
                } else if (gaugeDefinition.gaugeType == GaugeDefinition.HORIZONTAL_GAUGE) {
                    currentState = "Horizontal";
                }
                /*gauge.value = value;
                gauge.maximum = maxValue;*/
                //currentState = "hasData";
            } else {
                currentState = "";
                value = 0;
            }
        }

        public function createFilterRawData():FilterRawData {
            return null;
        }

        public function updateExportMetadata():void {
        }

        public function onCustomChangeEvent(event:CustomChangeEvent):void {
            if (event is GaugeTypeEvent) {
                var gaugeEvent:GaugeTypeEvent = event as GaugeTypeEvent;
                
            }
        }]]></mx:Script>
    <mx:Box id="box" width="100%" height="100%"/>
    <!--<black:BlackCircularGauge width="100%" height="100%"
        value="20"
        orientation="clockwise"
        startAngle="210"
        endAngle="330"
        minimum="0"
        maximum="100"
        majorTickInterval="10"
        minorTickInterval="1" />-->    
</mx:Module>