<?xml version="1.0" ?>
<mx:Module xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:ilog="ilog.maps.*"
           width="100%" height="100%"
           xmlns:analysis="com.easyinsight.analysis.*" xmlns:map="com.easyinsight.map.*"
           implements="com.easyinsight.analysis.IReportRenderer">
    <mx:states>
        <mx:State name="World">
            <mx:RemoveChild target="{unitedStatesMap}"/>
            <mx:AddChild relativeTo="{coreCanvas}" creationPolicy="all">
                <ilog:WorldCountriesMap width="100%" height="100%" id="worldMap"/>
            </mx:AddChild>
        </mx:State>
        <mx:State name="Europe">
            <mx:RemoveChild target="{unitedStatesMap}"/>
            <mx:AddChild relativeTo="{coreCanvas}" creationPolicy="all">
                <ilog:ContinentalEuropeMap width="100%" height="100%" id="europeMap"/>
            </mx:AddChild>
        </mx:State>
        <mx:State name="AsiaPac">
            <mx:RemoveChild target="{unitedStatesMap}"/>
            <mx:AddChild relativeTo="{coreCanvas}" creationPolicy="all">
                <ilog:AsiaPacificMap width="100%" height="100%" id="asiaMap"/>
            </mx:AddChild>
        </mx:State>
        <mx:State name="Americas">
            <mx:RemoveChild target="{unitedStatesMap}"/>
            <mx:AddChild relativeTo="{coreCanvas}" creationPolicy="all">
                <ilog:AmericasMap width="100%" height="100%" id="americasMap"/>
            </mx:AddChild>
        </mx:State>
        <mx:State name="MiddleEast">
            <mx:RemoveChild target="{unitedStatesMap}"/>
            <mx:AddChild relativeTo="{coreCanvas}" creationPolicy="all">
                <ilog:EuropeMiddleEastAfricaMap width="100%" height="100%" id="middleEastMap"/>
            </mx:AddChild>
        </mx:State>
    </mx:states>
    <mx:Script>
		<![CDATA[
        import com.easyinsight.analysis.CustomChangeEvent;
        import com.easyinsight.analysis.ReportRendererEvent;
import com.easyinsight.filtering.FilterRawData;

        import ilog.maps.MapBase;

        import com.easyinsight.analysis.conditions.ConditionRenderer;

        import ilog.maps.MapFeature;

        import com.easyinsight.map.util.MapLocationLookup;

        import com.easyinsight.analysis.AnalysisDefinition;

        import mx.collections.ArrayCollection;

        [Bindable]
        private var graphData:ArrayCollection = new ArrayCollection();

        private var masterDataSet:ArrayCollection = new ArrayCollection();

        private var map:MapBase;

        private var mapType:int = MapDefinition.USA;

        private var hasDropAreas:Boolean = true;

        private function createRenderer(rows:ArrayCollection, mapDefinition:MapDefinition):ConditionRenderer {
            var renderer:ConditionRenderer = mapDefinition.measure.createClientRenderer();
            for (var i:int = 0; i < rows.length; i++) {
                var row:Object = rows.getItemAt(i);
                var values:Array = row.values as Array;
                var dimensionValue:String;
                var measureValue:Object;
                dimensionValue = row[mapDefinition.geography.qualifiedName()];
                measureValue = row[mapDefinition.measure.qualifiedName()];
                var location:String = MapLocationLookup.instance().getLocation(dimensionValue, String(mapType));
                if (location != null) {
                    renderer.addValue(measureValue);
                }
            }
            return renderer;
        }

        private function customChange(customChangeEvent:CustomChangeEvent, analysisDefinition:AnalysisDefinition):void {
            var mapTypeEvent:MapTypeEvent = customChangeEvent as MapTypeEvent;
            var mapDefinition:MapDefinition = analysisDefinition as MapDefinition;
            mapDefinition.mapType = mapTypeEvent.mapType;
            dispatchEvent(new ReportRendererEvent(ReportRendererEvent.FORCE_RENDER));
        }

        public function renderReport(dataSet:ArrayCollection, analysisDefinition:AnalysisDefinition, clientProcessorMap:Object):void {
            var mapDefinition:MapDefinition = analysisDefinition as MapDefinition;
            if (mapDefinition.mapType == MapDefinition.USA) {
                currentState = "";
                mapType = MapDefinition.USA;
                map = unitedStatesMap;
            } else if (mapDefinition.mapType == MapDefinition.WORLD) {
                currentState = "World";
                mapType = MapDefinition.WORLD;
                if (worldMap != null) {
                    map = worldMap;
                }
            } else if (mapDefinition.mapType == MapDefinition.EUROPE) {
                currentState = "Europe";
                mapType = MapDefinition.EUROPE;
                if (europeMap != null) {
                    map = europeMap;
                }
            } else if (mapDefinition.mapType == MapDefinition.ASIA) {
                currentState = "AsiaPac";
                mapType = MapDefinition.ASIA;
                if (asiaMap != null) {
                    map = asiaMap;
                }
            } else if (mapDefinition.mapType == MapDefinition.AMERICAS) {
                currentState = "Americas";
                mapType = MapDefinition.AMERICAS;
                if (americasMap != null) {
                    map = americasMap;
                }
            } else if (mapDefinition.mapType == MapDefinition.MIDDLE_EAST) {
                currentState = "MiddleEast";
                mapType = MapDefinition.MIDDLE_EAST;
                if (middleEastMap != null) {
                    map = middleEastMap;
                }
            }
            graphData = new ArrayCollection();
            var renderer:ConditionRenderer = createRenderer(dataSet, mapDefinition);
            for (var i:int = 0; i < dataSet.length; i++) {
                var row:Object = dataSet.getItemAt(i);
                var dimensionValue:String = row[mapDefinition.geography.qualifiedName()];
                var measureValue:Object = row[mapDefinition.measure.qualifiedName()];

                var location:String = MapLocationLookup.instance().getLocation(dimensionValue, String(mapType));
                if (location != null) {
                    var mapFeature:MapFeature = map.getFeature(location);
                    if (mapFeature != null) {
                        var color:uint = renderer.getColor(measureValue);
                        mapFeature.setStyle(MapBase.FILL, color);
                    }
                }
            }
        }

        public function createFilterRawData():FilterRawData {
            return null;
        }

        public function updateExportMetadata():void {
        }
		]]>
    </mx:Script>
    <mx:VBox id="chartVBox" width="100%" height="100%"><!--
        <mx:HBox width="100%" visible="{showDropAreas}" id="dropAreas">
            <mx:Grid>
                <mx:GridRow width="100%" height="100%">
                    <mx:GridItem width="100%" height="100%">
                        <mx:ComboBox id="mapTypeSelector" rowCount="6" change="changeMapType()">
                            <mx:Object label="United States" data="1"/>
                            <mx:Object label="World" data="2"/>
                            <mx:Object label="Europe" data="3"/>
                            <mx:Object label="Asia/Pacific" data="4"/>
                            <mx:Object label="Americas" data="5"/>
                            <mx:Object label="Europe, Middle East, Africa" data="6"/>
                        </mx:ComboBox>
                    </mx:GridItem>
                    <mx:GridItem width="100%" height="100%">
                        <analysis:ListDropAreaGrouping id="dimensionDropArea" borderStyle="solid" borderThickness="1"
                                                       dropAreaType="com.easyinsight.analysis.DimensionDropArea"/>
                    </mx:GridItem>
                    <mx:GridItem width="100%" height="100%">
                        <map:MapDropAreaGrouping id="measureDropArea" borderStyle="solid" borderThickness="1"
                                                 dropAreaType="com.easyinsight.analysis.MeasureDropArea"/>
                    </mx:GridItem>
                </mx:GridRow>
            </mx:Grid>
        </mx:HBox>-->

        <mx:Canvas id="coreCanvas" width="100%" height="100%">
            <ilog:USStatesMap width="100%" height="100%" id="unitedStatesMap" allowNavigation="true"
                              allowMultipleSelection="true"/>
        </mx:Canvas>
    </mx:VBox>
</mx:Module>