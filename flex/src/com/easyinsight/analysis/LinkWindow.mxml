<?xml version="1.0" ?>
<util:EITitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:util="com.easyinsight.util.*"
                    creationComplete="feedService.getDescriptorsForDataSource.send(_dataSourceID)" width="700" height="400">
    <mx:Script><![CDATA[
        import com.easyinsight.quicksearch.EIDescriptor;

        import mx.collections.ArrayCollection;

        import mx.collections.Sort;
        import mx.collections.SortField;
        import mx.managers.PopUpManager;

        import mx.validators.Validator;

        private function gotDescriptors():void {
            var descriptors:ArrayCollection = feedService.getDescriptorsForDataSource.lastResult as ArrayCollection;
            var reports:Array = [];
            for each (var desc:EIDescriptor in descriptors) {
                if (desc.getType() == EIDescriptor.DASHBOARD || desc.getType() == EIDescriptor.REPORT) {
                    reports.push(desc);
                }
            }
            var reportList:ArrayCollection = new ArrayCollection(reports);
            var sort:Sort = new Sort();
            sort.fields = [ new SortField("name", true) ];
            reportList.sort = sort;
            reportList.refresh();
            this.reports = reportList;
        }

        private var _link:Link;

        private var _sourceItem:AnalysisItem;

        [Bindable]
        private var typeValue:String = "URL";

        [Bindable]
        private var urlText:String;

        [Bindable]
        private var reports:ArrayCollection;

        private var linkID:int;

        [Bindable]
        private var linkLabel:String;

        [Bindable]
        private var defaultLink:Boolean;

        [Bindable]
        private var qualifiedName:String;

        [Bindable]
        private var miniWindow:Boolean = true;

        [Bindable]
        private var stackIndex:int = 0;

        [Bindable]
        private var urlSampleText:String;

        public function set sourceItem(value:AnalysisItem):void {
            _sourceItem = value;
            if (_sourceItem == null) {

            } else {
                urlSampleText = "URL links will connect the report to external URLs. You can use fields to dynamically construct URLs by surrounding the field name with brackets. For example, http://www.google.com?q=[" + _sourceItem.key.createString() + "]";
            }
        }

        public function set link(value:Link):void {
            _link = value;
            if (value != null) {
                typeValue = _link.type;
                linkLabel = _link.label;
                linkID = _link.linkID;
                defaultLink = _link.defaultLink;
                if (typeValue == "URL") {
                    stackIndex = 0;
                    var urlLink:URLLink = _link as URLLink;
                    urlText = urlLink.url;
                } else if (typeValue == "Drillthrough") {
                    stackIndex = 1;
                    var drillthrough:DrillThrough = _link as DrillThrough;
                    if (drillthrough.reportID > 0) {
                        qualifiedName = EIDescriptor.REPORT + "-" + drillthrough.reportID;
                    } else if (drillthrough.dashboardID > 0) {
                        qualifiedName = EIDescriptor.DASHBOARD + "-" + drillthrough.dashboardID;
                    }
                    script = drillthrough.marmotScript;
                    miniWindow = drillthrough.miniWindow;
                }
            }
        }

        private var _dataSourceID:int;


        public function set dataSourceID(value:int):void {
            _dataSourceID = value;
        }

        private function save():void {
            var linkResults:Array = Validator.validateAll([ linkNameValidator ]);
            if (linkResults.length != 0) {
                labelInput.setFocus();
                labelInput.dispatchEvent(new MouseEvent(MouseEvent.MOUSE_OVER));
            } else {
                var firstLink:Link = _link;
                var valid:Boolean = true;
                if (typeGroup.selectedValue == "URL") {
                    var results:Array = Validator.validateAll([ urlValidator ]);
                    if (results.length == 0) {
                        var urlLink:URLLink = new URLLink();
                        urlLink.defaultLink = defaultLinkURLCheckbox.selected;
                        urlLink.url = urlInput.text;
                        _link = urlLink;
                    } else {
                        valid = false;
                        urlInput.setFocus();
                        urlInput.dispatchEvent(new MouseEvent(MouseEvent.MOUSE_OVER));
                    }
                } else {
                    var drillThrough:DrillThrough = new DrillThrough();
                    drillThrough.defaultLink = defaultLinkCheckbox.selected;
                    var desc:EIDescriptor = reportChooser.selectedItem as EIDescriptor;
                    if (desc.getType() == EIDescriptor.REPORT) {
                        drillThrough.reportID = desc.id;
                    } else if (desc.getType() == EIDescriptor.DASHBOARD) {
                        drillThrough.dashboardID = desc.id;
                    }
                    drillThrough.miniWindow = miniWindowCheckbox.selected;
                    drillThrough.marmotScript = scriptArea.text;
                    _link = drillThrough;
                }
                if (valid) {
                    _link.linkID = linkID;
                    _link.label = labelInput.text;

                    if (firstLink == null) {
                        dispatchEvent(new LinkMetadataEvent(LinkMetadataEvent.LINK_DEFINED, _link));
                    } else {
                        dispatchEvent(new LinkMetadataEvent(LinkMetadataEvent.LINK_EDITED, _link, firstLink));
                    }
                    PopUpManager.removePopUp(this);
                }
            }
        }

        [Bindable]
        private var script:String;
        ]]></mx:Script>
    <mx:RemoteObject destination="feeds" id="feedService">
        <mx:method name="getDescriptorsForDataSource" result="gotDescriptors()"/>
    </mx:RemoteObject>
    <mx:VBox backgroundColor="#FFFFFF" width="100%" height="100%">
        <mx:RadioButtonGroup id="typeGroup" selectedValue="{typeValue}"/>
        <mx:VBox width="100%" backgroundColor="#000000" paddingBottom="5" paddingLeft="5" paddingRight="5"
                 paddingTop="5" height="50%">
            <mx:HBox width="100%" horizontalAlign="center">
                <mx:RadioButton group="{typeGroup}" label="URL" value="URL" click="stackIndex = 0" color="#FFFFFF" fontSize="16"
                         textRollOverColor="#FFFFFF"/>
                <mx:RadioButton group="{typeGroup}" label="Drillthrough" value="Drillthrough" click="stackIndex = 1"
                                color="#FFFFFF" fontSize="16" textRollOverColor="#FFFFFF"/>
            </mx:HBox>
            <mx:ViewStack selectedIndex="{stackIndex}" width="100%">
                <mx:Box width="100%" horizontalAlign="center">
                    <mx:TextArea width="460" editable="false" color="#FFFFFF" selectable="false"
                                           backgroundAlpha="0" fontSize="14" borderStyle="none"
                                           text="{urlSampleText}" height="80"/>
                </mx:Box>
                <mx:Box width="100%" horizontalAlign="center">
                    <mx:TextArea width="460" editable="false" color="#FFFFFF" selectable="false"
                                           backgroundAlpha="0" fontSize="14" borderStyle="none"
                                           text="Drillthroughs enable you to connect reports. Any filters in the target report will automatically populate based on this report."
                            height="60"/>
                </mx:Box>
            </mx:ViewStack>
        </mx:VBox>
        <mx:VBox width="100%" height="50%" paddingBottom="5" paddingLeft="40" paddingRight="5" paddingTop="5" verticalAlign="middle">
            <mx:HBox width="100%">
                <mx:Label text="Label: " width="150" fontFamily="Tahoma" fontWeight="bold"/>
                <mx:TextInput id="labelInput" text="{linkLabel}" width="450"/>
            </mx:HBox>
            <mx:ViewStack id="viewStack" resizeToContent="true" creationPolicy="all"
                          selectedIndex="{stackIndex}">
                <mx:VBox width="100%">
                    <mx:HBox width="100%">
                        <mx:Label text="URL: " width="150" fontFamily="Tahoma" fontWeight="bold"/>
                        <mx:TextInput id="urlInput" text="{urlText}" width="450"/>
                    </mx:HBox>
                    <mx:HBox>
                        <mx:Label text="Default Link:" width="150" fontFamily="Tahoma" fontWeight="bold"/>
                        <mx:CheckBox label="" id="defaultLinkURLCheckbox" selected="{defaultLink}"/>
                    </mx:HBox>
                </mx:VBox>
                <mx:VBox>
                    <mx:HBox>
                        <mx:Label text="Target Report:" width="150" fontFamily="Tahoma" fontWeight="bold"/>
                        <util:SmartComboBox id="reportChooser" dataProvider="{reports}" labelField="name" selectedProperty="qualifiedName"
                                selectedValue="{qualifiedName}" rowCount="12"/>
                    </mx:HBox>
                    <mx:HBox>
                        <mx:Label text="Use Popup Window:" width="150" fontFamily="Tahoma" fontWeight="bold"/>
                        <mx:CheckBox label="" id="miniWindowCheckbox" selected="{miniWindow}"/>
                    </mx:HBox>
                    <mx:HBox>
                        <mx:Label text="Default Link:" width="150" fontFamily="Tahoma" fontWeight="bold"/>
                        <mx:CheckBox label="" id="defaultLinkCheckbox" selected="{defaultLink}"/>
                    </mx:HBox>
                    <mx:HBox>
                        <mx:Label text="Scripting:" width="150" fontFamily="Tahoma" fontWeight="bold"/>
                        <mx:TextArea text="{script}" width="450" height="70" editable="true" id="scriptArea" borderStyle="inset" borderThickness="1"/>
                    </mx:HBox>
                </mx:VBox>
            </mx:ViewStack>
            <mx:HBox width="100%" horizontalAlign="center">
                <util:SaveButton label="Save" click="save()"/>
                <util:CancelButton label="Cancel" click="PopUpManager.removePopUp(this)"/>
            </mx:HBox>
        </mx:VBox>
    </mx:VBox>
    <mx:StringValidator id="linkNameValidator" property="text" source="{labelInput}" minLength="3" maxLength="200"/>
    <mx:StringValidator id="urlValidator" property="text" source="{urlInput}" minLength="3" maxLength="200"/>
</util:EITitleWindow>