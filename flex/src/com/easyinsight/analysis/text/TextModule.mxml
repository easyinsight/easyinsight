<?xml version="1.0"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:util="com.easyinsight.util.*"
           implements="com.easyinsight.analysis.IReportRenderer">
    <mx:Script><![CDATA[
        import com.easyinsight.analysis.AnalysisDefinition;
        import com.easyinsight.analysis.AnalysisItem;
        import com.easyinsight.analysis.CustomChangeEvent;
        import com.easyinsight.analysis.Value;
        import com.easyinsight.analysis.list.SizeOverrideEvent;

        import mx.collections.ArrayCollection;
        import mx.events.FlexEvent;

        [Bindable]
        private var text:String;

        private var textReport:TextReport;

        private function blah():void {
            if (this.width == 0) {
                addEventListener(FlexEvent.UPDATE_COMPLETE, onUpdate);
            } else {
                markdownTextArea.maxWidth = this.width;
                markdownTextArea.width = this.width;
                reportText.maxWidth = this.width;
                reportText.width = this.width;
            }
        }

        private function onUpdate(event:FlexEvent):void {
            removeEventListener(FlexEvent.UPDATE_COMPLETE, onUpdate);
            reportText.maxWidth = this.width;
            reportText.width = this.width;
            markdownTextArea.width = this.width;
        }

        public function renderReport(dataSet:ArrayCollection, analysisDefinition:AnalysisDefinition, clientProcessorMap:Object, additionalProperties:Object):void {

            blah();
            textReport = analysisDefinition as TextReport;
            this.markdownText = textReport.text;
            if (textReport.useCustomFontFamily) {
                setStyle("fontFamily", textReport.getFont());
                fontFamily = textReport.getFont();
            }
            //Alert.show("font size = " + textReport.fontSize);
            fontSize = textReport.fontSize;
            fontColor = textReport.fontColor;

            if (additionalProperties["preferredSize"]) {
                reportText.addEventListener(FlexEvent.UPDATE_COMPLETE, onUpdateComplete);
            }
            var text:String = additionalProperties["text"];
            if (text != null) {
                this.text = text;
            }
        }

        private function onUpdateComplete(event:Event):void {
            event.currentTarget.removeEventListener(FlexEvent.UPDATE_COMPLETE, onUpdateComplete);
            callLater(computeSize);
        }

        private function computeSize():void {
            dispatchEvent(new SizeOverrideEvent(-1, reportText.height));
        }

        [Bindable]
        private var fontSize:int;

        [Bindable]
        private var fontColor:uint;

        [Bindable]
        private var fontFamily:String;

        [Bindable]
        private var markdownText:String;

        public function updateExportMetadata(report:AnalysisDefinition = null):void {
        }

        public function onCustomChangeEvent(event:CustomChangeEvent):void {
        }

        private function apply():void {
            dispatchEvent(new TextChangeEvent(markdownTextArea.text));
        }

        public function preserveValues():Boolean {
            return true;
        }

        [Bindable]
        private var explain:String = "Define the text of the report below using Mediawiki formatting. Wrap up any Easy Insight fields or scripting with { }, such as {[Deal Size]}."
        ]]></mx:Script>
    <mx:VBox>
        <mx:Text text="{explain}"/>
        <mx:TextArea editable="true" htmlText="{markdownText}" id="markdownTextArea" fontSize="{fontSize}" color="{fontColor}" fontFamily="{fontFamily}" height="200"
                borderStyle="solid" borderThickness="1" borderColor="#CCCCCC"/>
        <mx:HBox verticalAlign="middle">
            <mx:Text text="When ready, click Apply to actually run the report."/>
            <mx:Button id="applyButton" label="Apply" click="apply()" styleName="flatSaveButton"/>
        </mx:HBox>
        <mx:Text htmlText="{text}" id="reportText" fontSize="{fontSize}" color="{fontColor}" fontFamily="{fontFamily}"/>
    </mx:VBox>

</mx:Canvas>
