<?xml version="1.0" ?>
<analysis:AnalysisItemDetailEditor xmlns:mx="http://www.adobe.com/2006/mxml"
                                   xmlns:analysis="com.easyinsight.analysis.*" xmlns:util="com.easyinsight.util.*">
    <mx:Script><![CDATA[
        import mx.collections.ArrayCollection;

        [Bindable]
        private var useKeyDimensionSelected:Boolean;

        [Bindable]
        private var keyDimension:String;

        [Bindable]
        private var sortDimension:String;

        [Bindable]
        private var group:Boolean = true;

        [Bindable]
        private var summary:Boolean = false;

        override public function createAnalysisItem(aggregation:String):AnalysisItem {
            return new AnalysisDimension();
        }

        override protected function commitProperties():void {
            super.commitProperties();
            var fieldArray:Array = [];
            var noComp:Object = { display: "[ No Comparison ]"};
            fieldArray.push(noComp);
            for each (var m:AnalysisItem in measureFields) {
                fieldArray.push(m);
            }
            for each (var g:AnalysisItem in dimensionFields) {
                fieldArray.push(g);
            }
            sortComboBox.dataProvider = new ArrayCollection(fieldArray);
            if (dim != null) {
                sortComboBox.selectedValue = dim.sortItem != null ? dim.sortItem.display : null;
            }
        }
        
        private var dim:AnalysisDimension;

        override public function set analysisItem(val:AnalysisItem):void {
            super.analysisItem = val;
            if (val is AnalysisDimension) {
                this.dim = val as AnalysisDimension;
                var analysisDimension:AnalysisDimension = val as AnalysisDimension;
                useKeyDimensionSelected = analysisDimension.keyDimension != null;
                keyDimension = analysisDimension.keyDimension != null ? analysisDimension.keyDimension.display : null;
                group = analysisDimension.group;
                primaryKey = analysisDimension.keyColumn;
                invalidateProperties();
            }
        }

        override public function save(analysisItem:AnalysisItem, aggregation:String = null):void {
            super.save(analysisItem);
            var analysisDimension:AnalysisDimension = analysisItem as AnalysisDimension;
            analysisDimension.group = groupCheckbox.selected;
            if (useKeyDimension.selected) {
                analysisDimension.keyDimension = dimensionKeyComboBox.selectedItem as AnalysisDimension;
            }
            var sortItem:AnalysisItem = sortComboBox.selectedItem as AnalysisItem;
            if (sortItem != null) {
                analysisDimension.sortItem = sortItem;
            } else {
                analysisDimension.sortItem = null;
            }
            analysisDimension.keyColumn = primaryKeyCheckbox.selected;
        }
        
        [Bindable]
        private var primaryKey:Boolean;
        ]]></mx:Script>
    <mx:FormItem label="Group: ">
        <mx:CheckBox id="groupCheckbox" selected="{group}"/>
    </mx:FormItem>
    <mx:FormItem label="Primary Key: ">
        <mx:CheckBox id="primaryKeyCheckbox" selected="{primaryKey}"/>
    </mx:FormItem>
    <mx:FormItem label="Sort By: ">
        <util:SmartComboBox id="sortComboBox" labelField="display"
                            selectedValue="{sortDimension}" selectedProperty="display"/>
    </mx:FormItem>
    <mx:CheckBox label="Use Another Grouping as Key: " id="useKeyDimension"
                 selected="{useKeyDimensionSelected}"
                 click="useKeyDimensionSelected = useKeyDimension.selected"/>
    <mx:FormItem label="Grouping: " visible="{useKeyDimensionSelected}">
        <util:SmartComboBox dataProvider="{dimensionFields}" id="dimensionKeyComboBox" labelField="display"
                selectedValue="{keyDimension}" selectedProperty="display"/>
    </mx:FormItem>
</analysis:AnalysisItemDetailEditor>