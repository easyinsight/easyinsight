<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml">
	<mx:Script>
		<![CDATA[
			import com.easyinsight.analysis.conditions.MeasureCondition;
			import mx.events.ItemClickEvent;
			import com.easyinsight.analysis.conditions.MeasureConditionRange;
			
			[Bindable]
			private var conditionsOn:Boolean = false;
			
			private var highValue:int;
			private var highEndColor:uint;
			private var midValue:int;
			private var midEndColor:uint;
			private var lowValue:int;
			private var lowEndColor:uint;
			[Bindable]		
			private var modeGroupType:int = 2;
			
			private function modeChange(event:ItemClickEvent):void {
				
			}
			
			override protected function commitProperties():void {
				super.commitProperties();
				if (conditionsOn) {
					highValueInput.text = String(highValue);
					highEnd.selectedColor = highEndColor;
					midValueInput.text = String(midValue);
					mid.selectedColor = midEndColor;
					lowValueInput.text = String(lowValue);
					lowEnd.selectedColor = lowEndColor;
					//modeGroup.selectedValue = String(modeGroupType);
				}
			}
			
			public function set measureConditionRange(range:MeasureConditionRange):void {
				if (range != null) {
					conditionsOn = true;
					var highCondition:MeasureCondition = range.highCondition;				
					var lowCondition:MeasureCondition = range.lowCondition;
					this.highValue = highCondition.highValue;
					this.highEndColor = highCondition.highColor;
					this.midValue = highCondition.lowValue;
					this.midEndColor = highCondition.lowColor;
					this.lowValue = lowCondition.lowValue;
					this.lowEndColor = lowCondition.lowColor;
					this.modeGroupType = range.valueRangeType;
				}
			}
			
			public function createMeasureConditionRange():MeasureConditionRange {
				if (!conditionsOn) {
					return null;
				}
				var measureConditionRange:MeasureConditionRange;
				var highMeasureCondition:MeasureCondition;			
				if (highEnabledBox.selected && midEnabledBox.selected && lowEnabledBox.selected) {
					measureConditionRange = new MeasureConditionRange();
					measureConditionRange.valueRangeType = Number(modeGroup.selectedValue);
					highMeasureCondition = new MeasureCondition();
					highMeasureCondition.highColor = highEnd.selectedColor;
					highMeasureCondition.highValue = Number(highValueInput.text);
					highMeasureCondition.lowColor = mid.selectedColor;
					highMeasureCondition.lowValue = Number(midValueInput.text);
					var lowMeasureCondition:MeasureCondition = new MeasureCondition();
					lowMeasureCondition.highColor = mid.selectedColor;
					lowMeasureCondition.highValue = Number(midValueInput.text);
					lowMeasureCondition.lowColor = lowEnd.selectedColor;
					lowMeasureCondition.lowValue = Number(lowValueInput.text);
					measureConditionRange.highCondition = highMeasureCondition;
					measureConditionRange.lowCondition = lowMeasureCondition;
				} else if (highEnabledBox.selected && midEnabledBox.selected) {
					measureConditionRange = new MeasureConditionRange();
					measureConditionRange.valueRangeType = Number(modeGroup.selectedValue);
					highMeasureCondition = new MeasureCondition();
					highMeasureCondition.highColor = highEnd.selectedColor;
					highMeasureCondition.highValue = Number(highValueInput.text);
					highMeasureCondition.lowColor = mid.selectedColor;
					highMeasureCondition.lowValue = Number(midValueInput.text);
					measureConditionRange.highCondition = highMeasureCondition;
				} else if (highEnabledBox.selected && lowEnabledBox.selected) {
					measureConditionRange = new MeasureConditionRange();
					measureConditionRange.valueRangeType = Number(modeGroup.selectedValue);
					highMeasureCondition = new MeasureCondition();
					highMeasureCondition.highColor = highEnd.selectedColor;
					highMeasureCondition.highValue = Number(highValueInput.text);
					highMeasureCondition.lowColor = lowEnd.selectedColor;
					highMeasureCondition.lowValue = Number(lowValueInput.text);
					measureConditionRange.highCondition = highMeasureCondition;
				} else if (midEnabledBox.selected && lowEnabledBox.selected) {
					measureConditionRange = new MeasureConditionRange();
					measureConditionRange.valueRangeType = Number(modeGroup.selectedValue);
					highMeasureCondition = new MeasureCondition();
					highMeasureCondition.highColor = mid.selectedColor;
					highMeasureCondition.highValue = Number(midValueInput.text);
					highMeasureCondition.lowColor = lowEnd.selectedColor;
					highMeasureCondition.lowValue = Number(lowValueInput.text);
					measureConditionRange.highCondition = highMeasureCondition;
				}
				return measureConditionRange;
			}
			
			private function conditionCheck():void {
				conditionsOn = conditionsEnabled.selected;
			}
		]]>
	</mx:Script>
	<mx:CheckBox id="conditionsEnabled" selected="{conditionsOn}" click="conditionCheck()" label="Conditional Highlighting Enabled:"/>
	<mx:HBox enabled="{conditionsOn}">		
		<mx:RadioButtonGroup id="modeGroup" itemClick="modeChange(event)" selectedValue="{modeGroupType}"/>
		<mx:RadioButton group="{modeGroup}" id="percentage" value="2" label="Percentage"/>
		<mx:RadioButton group="{modeGroup}" id="absolute" value="1" label="Absolute"/>
		<mx:RadioButton group="{modeGroup}" id="logarithmic" value="3" label="Logarithmic"/>
		<mx:RadioButton group="{modeGroup}" id="normality" value="4" label="Normality"/>
	</mx:HBox>
	<mx:Form enabled="{conditionsOn}">
		<mx:FormItem label="High Value" direction="horizontal">
			<mx:CheckBox id="highEnabledBox" selected="true"/>
			<mx:TextInput id="highValueInput" text="100" enabled="{highEnabledBox.selected}"/>										
			<mx:ColorPicker id="highEnd" selectedColor="0x33cc33" enabled="{highEnabledBox.selected}"/>
		</mx:FormItem>
		<mx:FormItem label="Mid Value" direction="horizontal">
			<mx:CheckBox id="midEnabledBox" selected="true"/>
			<mx:TextInput id="midValueInput" text="50" enabled="{midEnabledBox.selected}"/>		
			<mx:ColorPicker id="mid" selectedColor="0x000000" enabled="{midEnabledBox.selected}"/>
		</mx:FormItem>
		<mx:FormItem label="Low Value" direction="horizontal">
			<mx:CheckBox id="lowEnabledBox" selected="true"/>
			<mx:TextInput id="lowValueInput" text="0" enabled="{lowEnabledBox.selected}"/>
			<mx:ColorPicker id="lowEnd" selectedColor="0xff0000" enabled="{lowEnabledBox.selected}"/>
		</mx:FormItem>
	</mx:Form>
</mx:VBox>
