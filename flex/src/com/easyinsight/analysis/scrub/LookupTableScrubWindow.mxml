<?xml version="1.0" encoding="utf-8"?>
<ScrubEditWindow xmlns="com.easyinsight.analysis.scrub.*" xmlns:mx="http://www.adobe.com/2006/mxml" width="700" height="500">
	<mx:Script>
		<![CDATA[
			import com.easyinsight.analysis.Value;
			import com.easyinsight.analysis.AnalysisDimensionResultMetadata;
			import com.easyinsight.analysis.AnalysisItemTypes;
			import com.easyinsight.analysis.AnalysisItem;
            import com.easyinsight.framework.CredentialsCache;

            import mx.collections.ArrayCollection;
            import mx.controls.Alert;
import mx.managers.PopUpManager;

            private static const NO_ENTRY:String = " [ Select a Field ] ";

			private var lookupTableScrub:LookupTableScrub;
			
			[Bindable]
			private var fields:ArrayCollection;
			
			[Bindable]
			private var pairs:ArrayCollection;
			
			[Bindable]
			private var sourceItem:AnalysisItem;
			
			[Bindable]
			private var sourceIndex:int;
			
			[Bindable]
			private var targetItem:AnalysisItem;
			
			[Bindable]
			private var targetIndex:int;

            [Bindable]
            private var sourceSelected:Boolean;
			
			private function cancel():void {
				PopUpManager.removePopUp(this);
			}
			
			override public function updateState():void {
				lookupTableScrub = scrub as LookupTableScrub;
				pairs = lookupTableScrub.lookupTablePairs;
				for each (var obj:Object in fields) {
                    if (obj is AnalysisItem) {
                        var analysisItem:AnalysisItem = obj as AnalysisItem;
                        if (analysisItem.key.createString() == lookupTableScrub.sourceKey.createString()) {
                            sourceItem = analysisItem;
                            sourceIndex = fields.getItemIndex(sourceItem);
                        } else if (analysisItem.key.createString() == lookupTableScrub.targetKey.createString()) {
                            targetItem = analysisItem;
                            targetIndex = fields.getItemIndex(targetItem);
                        }
                    }
				}				
			}
			
			private function save():void {
                if (!(sourceFieldBox.selectedItem is AnalysisItem) || !(targetFieldBox.selectedItem)) {
                    Alert.show("You must select source and target fields.");
                } else {
                    var analysisItem:AnalysisItem = sourceFieldBox.selectedItem as AnalysisItem;
                    var lookupScrub:LookupTableScrub;
                    var newScrub:Boolean;
                    if (scrub == null) {
                        newScrub = true;
                        lookupScrub = new LookupTableScrub();
                    } else {
                        newScrub = false;
                        lookupScrub = scrub as LookupTableScrub;
                    }
                    lookupScrub.lookupTablePairs = pairs;
                    lookupScrub.sourceKey = analysisItem.key;
                    var targetItem:AnalysisItem = targetFieldBox.selectedItem as AnalysisItem;
                    lookupScrub.targetKey = targetItem.key;
                    if (newScrub)
                        dispatchEvent(new DataScrubEvent(DataScrubEvent.ADDED_SCRUB, lookupScrub));
                    else
                        dispatchEvent(new DataScrubEvent(DataScrubEvent.UPDATED_SCRUB, lookupScrub));
                    PopUpManager.removePopUp(this);
                }
			}
			
			override public function set availableFields(availableFields:ArrayCollection):void {
				var ourFields:ArrayCollection = new ArrayCollection();
				for each (var analysisItem:AnalysisItem in availableFields) {
					if (analysisItem.getType() == AnalysisItemTypes.DIMENSION) {
						ourFields.addItem(analysisItem);
					}
				}
                ourFields.addItemAt(NO_ENTRY, 0);
				this.fields = ourFields;
			}
			
			private function onSourceFieldSelect():void {
			 	if (sourceFieldBox.selectedItem is AnalysisItem) {
			 		var analysisItem:AnalysisItem = sourceFieldBox.selectedItem as AnalysisItem;
			 		dataService.getAnalysisItemMetadata.send(feedID, analysisItem, CredentialsCache.getCache().createCredentials());
                    sourceSelected = true;
                    if (!(targetFieldBox.selectedItem is AnalysisItem)) {
                        targetFieldBox.selectedItem = analysisItem;
                    }
			 	} else {
                     sourceSelected = false;
                     this.pairs = new ArrayCollection();
                 }
			}
			
			private function gotMetadata():void {
				var metadata:AnalysisDimensionResultMetadata = dataService.getAnalysisItemMetadata.lastResult as AnalysisDimensionResultMetadata;
		 		var pairs:ArrayCollection = new ArrayCollection();
                var i:int = 3;
		 		for each (var value:Value in metadata.values) {
		 			var pair:LookupTablePair = new LookupTablePair();
		 			pair.sourceValue = String(value.getValue());
                    pair.setTabIndex(i++);
		 			pairs.addItem(pair);
		 		}
                //saveButton.tabIndex = i++;
                //cancelButton.tabIndex = i;
		 		this.pairs = pairs;
			}
		]]>
	</mx:Script>	
	<mx:RemoteObject destination="data" id="dataService">
		<mx:method name="getAnalysisItemMetadata" result="gotMetadata()"/>
	</mx:RemoteObject>
	<mx:VBox width="100%" height="100%" styleName="TitleWindowContents" paddingLeft="10" paddingRight="10" paddingTop="10" paddingBottom="10">
		<mx:HBox width="100%" horizontalAlign="center">
			<mx:ComboBox dataProvider="{fields}" id="sourceFieldBox" labelField="display" close="onSourceFieldSelect()"
				selectedIndex="{sourceIndex}"/>
			<mx:Spacer width="80"/>
			<mx:ComboBox dataProvider="{fields}" id="targetFieldBox" labelField="display"
				selectedIndex="{targetIndex}" enabled="{sourceSelected}"/>
		</mx:HBox>
		<mx:DataGrid dataProvider="{pairs}" width="100%" height="100%">
			<mx:columns>
				<mx:DataGridColumn headerText="Source Value" dataField="sourceValue" rendererIsEditor="false" editable="false"/>
				<mx:DataGridColumn headerText="Target Value" dataField="replaceValue" 
					itemRenderer="com.easyinsight.analysis.scrub.LookupTableEditor" rendererIsEditor="true"
					editorDataField="data"/>
			</mx:columns>
		</mx:DataGrid>
		<mx:HBox width="100%" horizontalAlign="center">
			<mx:Button label="Save" click="save()" id="saveButton"/>
			<mx:Button label="Cancel" click="cancel()" id="cancelButton"/>
		</mx:HBox>
	</mx:VBox>
</ScrubEditWindow>
