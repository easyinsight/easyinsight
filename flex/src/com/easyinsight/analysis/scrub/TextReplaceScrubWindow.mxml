<?xml version="1.0" encoding="utf-8"?>
<ScrubEditWindow xmlns="com.easyinsight.analysis.scrub.*" xmlns:mx="http://www.adobe.com/2006/mxml"
                 xmlns:util="com.easyinsight.util.*" title="Replace Text">
    <mx:Script>
		<![CDATA[
        import com.easyinsight.analysis.AnalysisItem;
        import com.easyinsight.analysis.AnalysisItemWrapper;

        import mx.collections.ArrayCollection;
        import mx.managers.PopUpManager;

        [Bindable]
        private var sourceText:String;
        [Bindable]
        private var replaceText:String;
        [Bindable]
        private var caseSensitive:Boolean;
        [Bindable]
        private var regularExpression:Boolean;

        [Bindable]
        private var _fields:ArrayCollection;

        override public function set availableFields(availableFields:ArrayCollection):void {
            fields = availableFields;
        }

        public function set fields(value:ArrayCollection):void {
            var fields:ArrayCollection = new ArrayCollection();
            for each (var wrapper:AnalysisItemWrapper in value) {
                fields.addItem(wrapper.analysisItem);
            }
            _fields = fields;
        }

        private var textReplaceScrub:TextReplaceScrub;

        [Bindable]
        private var analysisItem:AnalysisItem;

        override public function set scrub(scrub:DataScrub):void {
            var textScrub:TextReplaceScrub = scrub as TextReplaceScrub;
            this.textReplaceScrub = textScrub;
            analysisItem = textScrub.analysisItem;
            sourceText = textScrub.sourceText;
            replaceText = textScrub.replaceText;
            caseSensitive = textScrub.caseSensitive;
            regularExpression = textScrub.regex;
        }

        private function save():void {
            var newScrub:Boolean = false;
            if (textReplaceScrub == null) {
                textReplaceScrub = new TextReplaceScrub();
                newScrub = true;
            }
            textReplaceScrub.sourceText = textToFind.text;
            textReplaceScrub.replaceText = replaceWith.text;
            textReplaceScrub.caseSensitive = caseSensitiveCheck.selected;
            textReplaceScrub.regex = regularExpressionCheck.selected;
            textReplaceScrub.analysisItem = _fields.getItemAt(fieldBox.selectedIndex) as AnalysisItem;
            if (newScrub)
                dispatchEvent(new DataScrubEvent(DataScrubEvent.ADDED_SCRUB, textReplaceScrub));
            else
                dispatchEvent(new DataScrubEvent(DataScrubEvent.UPDATED_SCRUB, textReplaceScrub));
            PopUpManager.removePopUp(this);
        }

        private function cancel():void {
            PopUpManager.removePopUp(this);
        }
		]]>
    </mx:Script>
    <mx:Form>
        <mx:FormItem label="Field: " direction="horizontal">
            <util:AnalysisItemComboBox dataProvider="{_fields}" selectedValue="{analysisItem}" labelField="display"
                    id="fieldBox"/>
        </mx:FormItem>
        <mx:FormItem label="Text To Find: " direction="horizontal">
            <mx:TextInput id="textToFind" text="{sourceText}"/>
        </mx:FormItem>
        <mx:FormItem label="Replace With: " direction="horizontal">
            <mx:TextInput id="replaceWith" text="{replaceText}"/>
        </mx:FormItem>
        <mx:FormItem label="Case Sensitive: ">
            <mx:CheckBox id="caseSensitiveCheck" selected="{caseSensitive}"/>
        </mx:FormItem>
        <mx:FormItem label="Regular Expression: ">
            <mx:CheckBox id="regularExpressionCheck" selected="{regularExpression}"/>
        </mx:FormItem>
        <mx:FormItem label="" direction="horizontal">
            <mx:Button label="Save" click="save()"/>
            <mx:Button label="Cancel" click="cancel()"/>
        </mx:FormItem>
    </mx:Form>
</ScrubEditWindow>
