<?xml version="1.0" ?>
<mx:HBox xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:feed="com.easyinsight.administration.feed.*"
        implements="com.easyinsight.analysis.IAnalysisItemEditor" width="100%" height="100%">
    <mx:Script><![CDATA[
        import mx.collections.ArrayCollection;
        import mx.collections.Sort;
        import mx.collections.SortField;
        import mx.events.DragEvent;
        import mx.events.ListEvent;
        import mx.managers.DragManager;

        [Bindable]
        private var _hierarchy:AnalysisHierarchyItem;

        [Bindable]
        private var availableDimensions:ArrayCollection;

        public function set hierarchy(value:AnalysisHierarchyItem):void {
            _hierarchy = value;
        }

        public function save(dataSourceID:int):void {
            var list:List = hierarchyAdmin.list;
            _hierarchy.hierarchyLevels = ArrayCollection(list.dataProvider);
            _hierarchy.hierarchyLevel = _hierarchy.hierarchyLevels.getItemAt(0) as HierarchyLevel;
            NamedKey(_hierarchy.key).name = hierarchyAdmin.getName();
            dispatchEvent(new AnalysisItemSaveEvent(_hierarchy));
        }

        public function set analysisItem(analysisItem:AnalysisItem):void {
            _hierarchy = analysisItem as AnalysisHierarchyItem;
        }

        override protected function commitProperties():void {
            super.commitProperties();
            if (_hierarchy == null) {
                _hierarchy = new AnalysisHierarchyItem();
                _hierarchy.concrete = false;
                _hierarchy.key = new NamedKey();
            }
        }

        public function set analysisItems(analysisItems:ArrayCollection):void {
            availableDimensions = new ArrayCollection();
            for each (var analysisItemWrapper:AnalysisItemWrapper in analysisItems) {
                if (analysisItemWrapper.analysisItem.hasType(AnalysisItemTypes.DIMENSION) && !analysisItemWrapper.analysisItem.hasType(AnalysisItemTypes.HIERARCHY)) {
                    availableDimensions.addItem(analysisItemWrapper.analysisItem);
                }
            }
            var sort:Sort = new Sort();
            sort.fields = [ new SortField("display", false) ];
            availableDimensions.sort = sort;
            availableDimensions.refresh();
        }

        private function onDragComplete(event:DragEvent):void {
            if (event.action != DragManager.NONE) {
                var hierarchyAdminBox:HierarchyAdminBox = workspace.getChildAt(0) as HierarchyAdminBox;
                var list:List = hierarchyAdminBox.list;
                var data:ArrayCollection = ArrayCollection(list.dataProvider);
                var newItem:AnalysisItem = event.dragSource.dataForFormat("items")[0];
                for (var i:int = 0; i < data.length; i++) {
                    var item:Object = data.getItemAt(i);
                    if (item is AnalysisItem) {
                        var analysisItem:AnalysisItem = item as AnalysisItem;
                        if (analysisItem.display == newItem.display) {
                            var hierarchyLevel:HierarchyLevel = new HierarchyLevel();
                            hierarchyLevel.analysisItem = newItem;
                            data.removeItemAt(i);
                            data.addItemAt(hierarchyLevel, i);
                        }
                    }
                }
            }
        }

        public function set dataSourceID(dataSourceID:int):void {
        }

        private function onDoubleClick(event:ListEvent):void {
            var field:AnalysisItem = event.currentTarget.selectedItem as AnalysisItem;
            var hierarchyLevel:HierarchyLevel = new HierarchyLevel();
            hierarchyLevel.analysisItem = field;
            var data:ArrayCollection = ArrayCollection(hierarchyAdmin.list.dataProvider);
            data.addItem(hierarchyLevel);
        }

        public function validate():Boolean {
            return hierarchyAdmin.validate();
        }

        public function higlight():void {
        }

        public function normal():void {
        }
        ]]></mx:Script>

    <mx:VBox horizontalAlign="center" width="220" height="300">
        <mx:Label text="Available Fields" fontFamily="Tahoma" fontSize="14" fontWeight="bold"/>
        <mx:List dataProvider="{availableDimensions}" labelField="display" dragEnabled="true" dragMoveEnabled="false" dragComplete="onDragComplete(event)" width="100%"
                height="100%" itemDoubleClick="onDoubleClick(event)"/>
    </mx:VBox>
    <mx:VBox width="100%" height="300" borderStyle="solid" borderThickness="1" cornerRadius="8">
        <mx:Text text="Drag groupings from the left onto the list below to create and edit your&#13;hierarchy. Hierarchies go from the highest level at the top to the lowest&#13;level at the bottom. Press the delete key with a level selected to remove&#13;it from the hierarchy."
                 fontFamily="Lucida Grande" fontSize="14" fontWeight="normal"/>
        <mx:Box width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" id="workspace">
            <feed:HierarchyAdminBox id="hierarchyAdmin" analysisHierarchyItem="{_hierarchy}"/>
        </mx:Box>
    </mx:VBox>


</mx:HBox>