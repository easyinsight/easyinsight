<?xml version="1.0"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml"
           implements="com.easyinsight.analysis.IReportRenderer">
    <mx:Script><![CDATA[
        import com.easyinsight.analysis.AnalysisDefinition;

        import com.easyinsight.analysis.AnalysisItem;
        import com.easyinsight.analysis.CustomChangeEvent;
        import com.easyinsight.analysis.list.SizeOverrideEvent;
        import com.easyinsight.filtering.FilterRawData;

        import mx.collections.ArrayCollection;
        import mx.containers.Form;
        import mx.containers.FormItem;
        import mx.containers.HBox;
        import mx.containers.VBox;
        import mx.controls.Alert;
        import mx.core.UIComponent;
        import mx.events.FlexEvent;


        public function renderReport(dataSet:ArrayCollection, analysisDefinition:AnalysisDefinition, clientProcessorMap:Object, additionalProperties:Object):void {

            var formReport:FormReport = analysisDefinition as FormReport;
            //setStyle("backgroundAlpha", formReport.backgroundAlpha);
            removeAllChildren();
            if (dataSet.length == 0) {

            } else if (dataSet.length == 1) {
                addChild(createForm(dataSet.getItemAt(0), formReport));
            } else {
                var pages:FormPages = new FormPages();
                pages.values = dataSet;
                pages.formReport = formReport;
                if (additionalProperties["preferredSize"]) {
                    pages.addEventListener(FlexEvent.CREATION_COMPLETE, onUpdateComplete);
                }
                addChild(pages);
            }
        }

        private function onUpdateComplete(event:FlexEvent):void {
            //Alert.show("size = " + event.currentTarget.height);
            event.currentTarget.removeEventListener(FlexEvent.CREATION_COMPLETE, onUpdateComplete);
            dispatchEvent(new SizeOverrideEvent(-1, event.currentTarget.height));
        }

        private function createForm(row:Object, formReport:FormReport):UIComponent {
            var hbox:HBox = new HBox();
            //hbox.percentHeight = 100;
            hbox.percentWidth = 100;
            var fieldsPerColumn:int = formReport.columns.length / formReport.columnCount;
            var remainder:int = formReport.columns.length % formReport.columnCount;
            var l:int = 0;
            for (var i:int = 0; i < formReport.columnCount; i++) {
                var form:Form = new Form();

                for (var j:int = 0; j < (fieldsPerColumn + (i == 0 ? remainder : 0)); j++) {
                    var item:AnalysisItem = formReport.columns.getItemAt(l++) as AnalysisItem;
                    var formItem:FormItem = new FormItem();
                    formItem.styleName = "boldStyle";
                    formItem.setStyle("fontWeight", "bold");
                    formItem.setStyle("fontSize", formReport.labelFontSize);

                    formItem.label = item.unqualifiedDisplay + ":";

                    var renderer:FormCellRenderer = new FormCellRenderer();
                    renderer.analysisItem = item;
                    renderer.report = formReport;
                    renderer.data = row;
                    formItem.addChild(renderer);

                    form.addChild(formItem);
                }
                hbox.addChild(form);
            }
            return hbox;
        }

        public function updateExportMetadata(report:AnalysisDefinition = null):void {
        }

        public function onCustomChangeEvent(event:CustomChangeEvent):void {
        }

        public function preserveValues():Boolean {
            return true;
        }]]></mx:Script>
</mx:Canvas>
