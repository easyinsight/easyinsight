<?xml version="1.0"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml">
    <mx:Script><![CDATA[
        import com.easyinsight.analysis.AnalysisItem;

        import mx.collections.ArrayCollection;
        import mx.containers.Form;
        import mx.containers.FormItem;
        import mx.core.UIComponent;

        [Bindable]
        private var prevPageEnabled:Boolean = false;

        [Bindable]
        private var nextPageEnabled:Boolean = true;

        [Bindable]
        private var pageLabel:String;

        private var currentPage:int;

        private var forms:ArrayCollection;

        private function previousPage():void {
            currentPage--;
            if (currentPage == 0) {
                prevPageEnabled = false;
            }
            nextPageEnabled = true;
            box.removeAllChildren();
            var form:Form = forms.getItemAt(currentPage) as Form;
            box.addChild(form);
        }

        private function nextPage():void {
            currentPage++;
            if (currentPage == _values.length - 1) {
                nextPageEnabled = false;
            }
            prevPageEnabled = true;
            box.removeAllChildren();


            var form:UIComponent;
            if (currentPage >= forms.length - 1) {
                form = createForm(_values.getItemAt(currentPage), _formReport);
                forms.addItem(form);
            } else {
                form = forms.getItemAt(currentPage) as UIComponent;
            }
            box.addChild(form);
        }

        private var _formReport:FormReport;

        public function set formReport(value:FormReport):void {
            _formReport = value;
        }

        private var _values:ArrayCollection;

        public function set values(value:ArrayCollection):void {
            _values = value;
        }

        protected override function commitProperties():void {
            super.commitProperties();
            pageLabel = _values.length + " pages";
            forms = new ArrayCollection();
            forms.addItem(createForm(_values.getItemAt(0), _formReport));
            box.addChild(forms.getItemAt(0) as UIComponent);
        }

        private function createForm(row:Object, formReport:FormReport):UIComponent {
            var hbox:HBox = new HBox();
            hbox.percentHeight = 100;
            hbox.percentWidth = 100;
            var fieldsPerColumn:int = formReport.columns.length / formReport.columnCount;
            var remainder:int = formReport.columns.length % formReport.columnCount;
            var l:int = 0;
            for (var i:int = 0; i < formReport.columnCount; i++) {
                if (formReport.direction == "Left") {

                    var form:Form = new Form();

                    for (var j:int = 0; j < (fieldsPerColumn + (i == 0 ? remainder : 0)); j++) {
                        var item:AnalysisItem = formReport.columns.getItemAt(l++) as AnalysisItem;
                        var formItem:FormItem = new FormItem();
                        formItem.setStyle("fontWeight", "normal");
                        formItem.setStyle("fontSize", formReport.labelFontSize);
                        formItem.setStyle("fontFamily", formReport.labelFont);

                        formItem.label = item.display + ":";

                        var renderer:FormCellRenderer = new FormCellRenderer();
                        renderer.analysisItem = item;
                        renderer.report = formReport;
                        renderer.data = row;
                        formItem.addChild(renderer);

                        form.addChild(formItem);
                    }
                    hbox.addChild(form);
                } else if (formReport.direction == "Bottom" || formReport.direction == "Top") {
                    var vbox:VBox = new VBox();
                    for (var k:int = 0; k < (fieldsPerColumn + (i == 0 ? remainder : 0)); k++) {
                        var xItem:AnalysisItem = formReport.columns.getItemAt(l++) as AnalysisItem;
                        var vRenderer:VerticalFormCellRenderer = new VerticalFormCellRenderer();
                        vRenderer.analysisItem = xItem;
                        vRenderer.report = formReport;
                        vRenderer.labelTop = formReport.direction == "Top";
                        vRenderer.data = row;
                        vbox.addChild(vRenderer);
                    }
                    hbox.addChild(vbox);
                }
            }
            return hbox;
        }
        ]]></mx:Script>
    <mx:Box id="box"/>
    <mx:HBox>
        <mx:Button label="Previous Page" click="previousPage()" enabled="{prevPageEnabled}"/>
        <mx:Label text="{pageLabel}"/>
        <mx:Button label="Next Page" click="nextPage()" enabled="{nextPageEnabled}"/>
    </mx:HBox>
</mx:VBox>
