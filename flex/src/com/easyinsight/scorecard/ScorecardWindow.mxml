<?xml version="1.0" ?>
<util:EITitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:util="com.easyinsight.util.*" paddingBottom="5"
        paddingLeft="5" paddingRight="5" paddingTop="5" creationComplete="setup()">
    <mx:Script><![CDATA[
        import com.easyinsight.util.ProgressAlert;

        import mx.managers.PopUpManager;
        import mx.validators.Validator;

        [Bindable]
        private var scorecardName:String;

        private var _scorecard:Scorecard;

        private var validators:Array;

        private function setup():void {
            stage.addEventListener(KeyboardEvent.KEY_UP, onKey);
            validators = [ nameValidator ];
            nameInput.setFocus();
        }

        private function onKey(event:KeyboardEvent):void {
            if (event.keyCode == Keyboard.ENTER) {
                save();
            }
        }

        protected override function commitProperties():void {
            super.commitProperties();
            if (_scorecard != null) {
                scorecardName = _scorecard.name;
                newScorecard = false;
            } else {
                newScorecard = true;
            }
        }

        public function set scorecard(value:Scorecard):void {
            _scorecard = value;
        }

        private var newScorecard:Boolean;
        private var _groupID:int;

        public function set groupID(value:int):void {
            _groupID = value;
        }

        private function save():void {
            var results:Array = Validator.validateAll(validators);
            if (results.length == 0) {
                if (_scorecard == null) {
                    _scorecard = new Scorecard();
                }
                _scorecard.name = nameInput.text;
                if (_groupID == 0) {
                    ProgressAlert.alert(this, "Saving the scorecard...", null, scorecardService.saveScorecardForUser);
                    scorecardService.saveScorecardForUser.send(_scorecard);
                } else {
                    ProgressAlert.alert(this, "Saving the scorecard...", null, scorecardService.saveScorecardForGroup);
                    scorecardService.saveScorecardForGroup.send(_scorecard, _groupID);
                }
            } else {
                nameInput.setFocus();
                nameInput.dispatchEvent(new MouseEvent(MouseEvent.MOUSE_OVER));
            }
        }

        private function clearListeners():void {
            stage.removeEventListener(KeyboardEvent.KEY_UP, onKey);
        }

        private function saved():void {
            if (_groupID == 0) {
                _scorecard.scorecardID = scorecardService.saveScorecardForUser.lastResult as int;
            } else {
                _scorecard.scorecardID = scorecardService.saveScorecardForGroup.lastResult as int;
            }
            var descriptor:ScorecardDescriptor = new ScorecardDescriptor();
            descriptor.id = _scorecard.scorecardID;
            descriptor.name = _scorecard.name;
            if (newScorecard) {
                dispatchEvent(new ScorecardEvent(ScorecardEvent.SCORECARD_ADDED, descriptor));
            } else {
                dispatchEvent(new ScorecardEvent(ScorecardEvent.SCORECARD_UPDATED, descriptor));
            }
            clearListeners();
            PopUpManager.removePopUp(this);
        }
        ]]></mx:Script>
    <mx:RemoteObject destination="scorecardService" id="scorecardService">
        <mx:method name="saveScorecardForUser" result="saved()"/>
        <mx:method name="saveScorecardForGroup" result="saved()"/>
    </mx:RemoteObject>
    <mx:StringValidator minLength="3" maxLength="25" id="nameValidator" property="text" source="{nameInput}"/>
    <mx:VBox>
        <mx:Form>
            <mx:FormItem label="Scorecard Name:">
                <mx:TextInput id="nameInput" text="{scorecardName}"/>
            </mx:FormItem>
        </mx:Form>
        <mx:HBox width="100%" horizontalAlign="center">
            <mx:Button label="Save" click="save()"/>
            <mx:Button label="Cancel" click="clearListeners(); PopUpManager.removePopUp(this)"/>
        </mx:HBox>
    </mx:VBox>
</util:EITitleWindow>