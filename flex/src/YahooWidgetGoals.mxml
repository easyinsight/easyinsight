<?xml version="1.0" ?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:dashboard="com.easyinsight.dashboard.*" width="500" height="200"
	creationComplete="onCreationComplete()" 
	paddingTop="0" top="0" borderThickness="3" left="0" paddingLeft="0" right="0" paddingRight="0" borderStyle="solid"
	bottom="0" paddingBottom="0" backgroundColor="#FFFFFF" backgroundImage="{backgroundPattern}" backgroundSize="100%">
	<mx:states>
		<mx:State name="MyGoals">
			<mx:RemoveChild target="{loginForm}"/>
			<mx:AddChild relativeTo="{coreBox}">
                <dashboard:EmbeddedViewGoals id="panel"/>
			</mx:AddChild>
		</mx:State>
	</mx:states>
	<mx:Script>
		<![CDATA[
			import mx.rpc.events.ResultEvent;
			import mx.messaging.config.ServerConfig;
			import mx.rpc.AsyncToken;
			import mx.rpc.AsyncResponder;
			import mx.rpc.events.FaultEvent;

			import com.easyinsight.framework.User;
			import com.easyinsight.framework.UserServiceResponse;

            [Bindable]
            [Embed(source="../assets/background2.JPG")]
            private var backgroundPattern:Class;

			private function onKeyUp(event:KeyboardEvent):void {
				if (event.keyCode == Keyboard.ENTER) {
					if (currentState == null || currentState == "") {
						login();
					}
				}
			}

			private function onCreationComplete():void {
				focusManager.setFocus(userName);
				addEventListener(KeyboardEvent.KEY_UP, onKeyUp);
			}

			private function handleAuthentication():void {
                var authResult:UserServiceResponse= authService.authenticate.lastResult as UserServiceResponse;
                var successful:Boolean = authResult.successful;
                if (successful) {
                    User.initializeUser(authResult.name, authResult.email,
                    	authResult.accountType, authResult.spaceAllowed, authResult.accountAdmin,
                            authResult.dataSourceCreator, authResult.insightCreator, authResult.userID);
                	User.getInstance().password = authResult.encryptedPassword;
                	User.getInstance().userName = authResult.userName;
                	ExternalInterface.call("widget.setValue", "userName", userName.text);
                	ExternalInterface.call("widget.setValue", "password", password.text);
                    currentState = "MyGoals";
                } else {
                    failureMessageLabel.text = authResult.failureMessage;
                }
            }

            private function login():void {
            	if (authService.channelSet == null) {
            		authService.channelSet = ServerConfig.getChannelSet(authService.destination);
            	}
            	var token:AsyncToken = authService.channelSet.login(userName.text, password.text);
            	token.addResponder(new AsyncResponder(
            		function (event:ResultEvent, token:Object = null):void {
            			switch (event.result) {
            				case "success":
            					authService.authenticate.send(userName.text, password.text);
            					break;
        					default:
        						trace(event.result);
            			}
            		},
            		function (event:FaultEvent, token:Object = null):void {
            			switch (event.fault.faultCode) {
            				case "Client.Authentication":
            				default:
            					var failureMessage:String = event.fault.faultString;
                    			failureMessageLabel.text = failureMessage;
            			}
            		}
        		));
            }

            private function insightChosen():void {

            }
		]]>
	</mx:Script>
	<mx:RemoteObject id="authService" destination="login">
		<mx:method name="authenticate" result="handleAuthentication()"/>
	</mx:RemoteObject>
	<mx:VBox id="coreBox" width="100%" height="100%" horizontalAlign="center">
		<mx:Form id="loginForm">
			<mx:FormItem label="User Name: ">
				<mx:TextInput id="userName"/>
			</mx:FormItem>
			<mx:FormItem label="Password: ">
				<mx:TextInput id="password" displayAsPassword="true"/>
			</mx:FormItem>
			<mx:FormItem label="">
				<mx:Label id="failureMessageLabel"/>
			</mx:FormItem>
			<mx:FormItem label="">
				<mx:Button label="Log In" click="login()"/>
			</mx:FormItem>
		</mx:Form>
	</mx:VBox>
</mx:Application>