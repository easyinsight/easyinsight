<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:account="com.easyinsight.account.*"
                xmlns:solutions="com.easyinsight.solutions.*" xmlns:guest="com.easyinsight.guest.*" layout="absolute"
                creationComplete="setup()"
                xmlns:system="com.easyinsight.administration.system.*">
    <mx:states>
        <mx:State name="loggedIn">
            <mx:RemoveChild target="{loginForm}"/>
            <mx:AddChild relativeTo="{coreBox}">
                <mx:TabNavigator width="100%" height="100%">
                    <mx:VBox width="100%" height="100%" label="System Health">
                        <system:HealthInfoDisplay/>
                        <mx:Button label="Thread Dump" click="dumpThreads()"/>
                        <mx:Button label="Create Data Source" click="externalSources()"/>
                        <mx:Button label="Update Zip Geocodes" click="updateZipCodes()"/>
                        <mx:Button label="Nuke Old Data" click="nukeOldData()"/>
                        <mx:Button label="Report Admin XML" click="reportAdminXML()"/>
                        <mx:Button label="Report Test" click="reportTest()"/>
                        <mx:Button label="Global Skin" click="globalSkin()"/>
                    </mx:VBox>
                    <mx:VBox width="100%" height="100%" label="Solutions">
                        <solutions:SolutionAdministration width="100%" height="100%"/>
                    </mx:VBox>
                    <mx:VBox width="100%" height="100%" label="Accounts">
                        <account:AccountAdministration width="100%" height="100%"/>
                    </mx:VBox>
                    <account:Newsletter label="Newsletter"/>
                    <guest:ScenarioAdministration width="100%" height="100%" label="Scenarios"/>
                </mx:TabNavigator>
            </mx:AddChild>
        </mx:State>
    </mx:states>
    <mx:Script>
		<![CDATA[
        import com.easyinsight.account.Account;
        import com.easyinsight.administration.ReportAdminXMLWindow;
        import com.easyinsight.administration.ReportTestWindow;
        import com.easyinsight.administration.UpdateZipsWindow;
        import com.easyinsight.customupload.UploadExternalSource;
        import com.easyinsight.framework.User;
        import com.easyinsight.framework.UserServiceResponse;
        import com.easyinsight.skin.GlobalSkinWindow;
        import com.easyinsight.util.PopUpUtil;
        import com.easyinsight.util.ProgressAlert;

        import mx.managers.PopUpManager;
        import mx.messaging.config.ServerConfig;
        import mx.rpc.AsyncResponder;
        import mx.rpc.AsyncToken;
        import mx.rpc.events.FaultEvent;
        import mx.rpc.events.ResultEvent;

        private function updateZipCodes():void {
            var window:UpdateZipsWindow = new UpdateZipsWindow();
            PopUpManager.addPopUp(window, this, true);
            PopUpUtil.centerPopUp(window);
        }

        private function reportAdminXML():void {
            var window:ReportAdminXMLWindow = new ReportAdminXMLWindow();
            PopUpManager.addPopUp(window, this, true);
            PopUpUtil.centerPopUp(window);
        }

        private function reportTest():void {
            var window:ReportTestWindow = new ReportTestWindow();
            PopUpManager.addPopUp(window, this, true);
            PopUpUtil.centerPopUp(window);
        }

        private function handleAuthentication():void {
            var authResult:UserServiceResponse = authAdminService.authenticateAdmin.lastResult as UserServiceResponse;
            var successful:Boolean = authResult.successful;
            if (successful) {
                User.initializeUser(authResult);
                User.getInstance().userName = authResult.userName;
                currentState = "loggedIn";
            } else {
                failureMessageLabel.text = authResult.failureMessage;
            }
        }

        private function externalSources():void {
            var window:UploadExternalSource = new UploadExternalSource();
            PopUpManager.addPopUp(window, this, true);
            PopUpUtil.centerPopUp(window);
        }

        private function login():void {
            if (authService.channelSet == null) {
                authService.channelSet = ServerConfig.getChannelSet(authService.destination);
            }
            var token:AsyncToken = authService.channelSet.login(userName.text, password.text);
            token.addResponder(new AsyncResponder(
                    function (event:ResultEvent, token:Object = null):void {
                        switch (event.result) {
                            case "success":
                                authAdminService.authenticateAdmin.send(userName.text, password.text);
                                break;
                            default:
                                trace(event.result);
                        }
                    },
                    function (event:FaultEvent, token:Object = null):void {
                        switch (event.fault.faultCode) {
                            case "Client.Authentication":
                            default:
                                var failureMessage:String = event.fault.faultString;
                                failureMessageLabel.text = failureMessage;
                        }
                    }
                    ));
        }

        private function setup():void {
            authService.isSessionLoggedIn.send();
            //var user:User = User.getInstance();
            //if (user == null) {
            //	currentState = 'notLoggedIn';
            //}
        }

        private function dumpThreads():void {
            adminService.threadDump.send();
        }


        private function sessionCheck():void {
            var authResult:UserServiceResponse = authService.isSessionLoggedIn.lastResult as UserServiceResponse;
            if (authResult != null && authResult.accountType == Account.ENTERPRISE + 1) {
                User.initializeUser(authResult);
                User.getInstance().userName = authResult.userName;
                currentState = "loggedIn";
            }
        }

        private function testSelenium():void {
            ProgressAlert.alert(this, "Testing Selenium...", null, exportService.test);
            exportService.test.send();
        }

        private function nukeOldData():void {
            ProgressAlert.alert(this, "Clearing orphan data...", null, adminService.clearOrphanData);
            adminService.clearOrphanData.send();
        }

        private function globalSkin():void {
            var window:GlobalSkinWindow = new GlobalSkinWindow();
            PopUpManager.addPopUp(window, this, true);
            PopUpUtil.centerPopUp(window);
        }
		]]>
    </mx:Script>
    <mx:RemoteObject id="authService" destination="login">
        <mx:method name="isSessionLoggedIn" result="sessionCheck()"/>
    </mx:RemoteObject>
    <mx:RemoteObject id="exportService" destination="exportService">
        <mx:method name="test"/>
    </mx:RemoteObject>
    <mx:RemoteObject id="authAdminService" destination="eiAdmin">
        <mx:method name="authenticateAdmin" result="handleAuthentication()"/>
    </mx:RemoteObject>
    <mx:RemoteObject id="adminService" destination="admin">
        <mx:method name="threadDump"/>
        <mx:method name="clearOrphanData"/>
    </mx:RemoteObject>
    <mx:Style source="com/easyinsight/skin/osx/OSX.css"/>
    <mx:VBox id="coreBox" width="100%" height="100%" horizontalAlign="center">
        <mx:Form id="loginForm">
            <mx:FormItem label="User Name: ">
                <mx:TextInput id="userName"/>
            </mx:FormItem>
            <mx:FormItem label="Password: ">
                <mx:TextInput id="password" displayAsPassword="true"/>
            </mx:FormItem>
            <mx:FormItem label="">
                <mx:Label id="failureMessageLabel"/>
            </mx:FormItem>
            <mx:FormItem label="">
                <mx:Button label="Submit" click="login()"/>
            </mx:FormItem>
        </mx:Form>
    </mx:VBox>

    <!-- <mx:Canvas id="coreCanvas" width="100%" height="100%">
		<mx:TabNavigator id="coreTabNavigator" width="100%" creationPolicy="all" tabChildrenChange="tabChanged()">
			<genres:GenreAdministrationPanel label="Catalog" id="catalogAdmin"/>
			<mx:HBox label="System Health" id="systemHealth"/>
		</mx:TabNavigator>	
	</mx:Canvas>-->

</mx:Application>
