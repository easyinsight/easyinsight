<?xml version="1.0" encoding="utf-8"?>
<easyinsight:EmbeddedBase xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:easyinsight="*">
    <mx:Script>
		<![CDATA[
        import com.easyinsight.analysis.InsightResponse;
        import com.easyinsight.dashboard.EmbeddedReportView;

        import mx.core.UIComponent;
        import mx.core.Application;


        [Bindable]
        private var urlKey:String;

        [Bindable]
        private var reportType:int;

        [Bindable]
        private var dataSourceID:int;


        private var _showToolbar:Boolean;

        private var _showHeader:Boolean;


        [Bindable(event="showHeaderChanged")]
        public function get showHeader():Boolean {
            return _showHeader;
        }

        public function set showHeader(value:Boolean):void {
            if (_showHeader == value) return;
            _showHeader = value;
            dispatchEvent(new Event("showHeaderChanged"));
        }

        [Bindable("showToolbarChanged")]
        public function get showToolbar():Boolean {
            return _showToolbar;
        }

        public function set showToolbar(value:Boolean):void {
            if (_showToolbar == value) return;
            _showToolbar = value;
            dispatchEvent(new Event("showToolbarChanged"));
        }

        [Bindable]
        private var showFilters:Boolean;

        override protected function childSetup():void {
            super.childSetup();
            this.urlKey = String(Application.application.parameters.analysisID);
            this.reportType = int(Application.application.parameters.reportType);
            this.dataSourceID = int(Application.application.parameters.dataSourceID);

            this.showToolbar = int(Application.application.parameters.showToolbar) == 1;
            this.showHeader = int(Application.application.parameters.showHeader) == 1;

            this.showFilters = int(Application.application.parameters.showFilters) == 1;


            var showFiltersMenu:ContextMenuItem = new ContextMenuItem("Toggle Filters");
            var showToolbarMenu:ContextMenuItem = new ContextMenuItem("Toggle Toolbar");

            // yay binding closure hack
            var s = this;

            showFiltersMenu.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, function (event:ContextMenuEvent):void {
                s.showFilters = !s.showFilters;
            });


            showToolbarMenu.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, function (event:ContextMenuEvent):void {
                s.showToolbar = !s.showToolbar;
            });

            var menu:ContextMenu = new ContextMenu();
            menu.hideBuiltInItems();
            menu.customItems = [ showFiltersMenu, showToolbarMenu ];
            this.contextMenu = menu;
        }

        override protected function go():void {
            analysisService.openAnalysisIfPossible.send(urlKey);
        }

        private function gotReportInfo():void {
            var info:InsightResponse = analysisService.openAnalysisIfPossible.lastResult as InsightResponse;
            if (info.status == InsightResponse.SUCCESS) {
                toView();
            } else {
                toLogin();
            }
        }

        override protected function createView():UIComponent {
            var view:EmbeddedReportView = new EmbeddedReportView();
            view.urlKey = urlKey;
            view.dataSourceID = dataSourceID;
            view.reportType = reportType;
            view.showToolbar = showToolbar;
            view.showFilters = showFilters;
            view.showHeader = showHeader;
            return view;
        }
        ]]>
	</mx:Script>
    <mx:RemoteObject destination="analysisDefinition" id="analysisService">
        <mx:method name="openAnalysisIfPossible" result="gotReportInfo()"/>
    </mx:RemoteObject>
</easyinsight:EmbeddedBase>
