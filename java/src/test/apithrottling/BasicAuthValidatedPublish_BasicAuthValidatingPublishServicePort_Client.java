
package test.apithrottling;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.1.1
 * Tue Mar 31 17:20:07 MDT 2009
 * Generated source version: 2.1.1
 * 
 */

public final class BasicAuthValidatedPublish_BasicAuthValidatingPublishServicePort_Client {

    private static final QName SERVICE_NAME = new QName("http://basicauth.api.easyinsight.com/", "BasicAuthValidatingPublishServiceService");

    private BasicAuthValidatedPublish_BasicAuthValidatingPublishServicePort_Client() {
    }

    public static void main(String args[]) throws Exception {
        URL wsdlURL = BasicAuthValidatingPublishServiceService.WSDL_LOCATION;
        if (args.length > 0) { 
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }
      
        BasicAuthValidatingPublishServiceService ss = new BasicAuthValidatingPublishServiceService(wsdlURL, SERVICE_NAME);
        BasicAuthValidatedPublish port = ss.getBasicAuthValidatingPublishServicePort();  
        
        {
        System.out.println("Invoking updateRow...");
        java.lang.String _updateRow_dataSourceKey = "";
        test.apithrottling.Row _updateRow_row = null;
        test.apithrottling.Where _updateRow_where = null;
        port.updateRow(_updateRow_dataSourceKey, _updateRow_row, _updateRow_where);


        }
        {
        System.out.println("Invoking addRows...");
        java.lang.String _addRows_dataSourceKey = "";
        java.util.List<test.apithrottling.Row> _addRows_rows = null;
        port.addRows(_addRows_dataSourceKey, _addRows_rows);


        }
        {
        System.out.println("Invoking replaceRows...");
        java.lang.String _replaceRows_dataSourceKey = "";
        java.util.List<test.apithrottling.Row> _replaceRows_rows = null;
        port.replaceRows(_replaceRows_dataSourceKey, _replaceRows_rows);


        }
        {
        System.out.println("Invoking validateCredentials...");
        boolean _validateCredentials__return = port.validateCredentials();
        System.out.println("validateCredentials.result=" + _validateCredentials__return);


        }
        {
        System.out.println("Invoking deleteRows...");
        java.lang.String _deleteRows_dataSourceKey = "";
        test.apithrottling.Where _deleteRows_where = null;
        port.deleteRows(_deleteRows_dataSourceKey, _deleteRows_where);


        }
        {
        System.out.println("Invoking updateRows...");
        java.lang.String _updateRows_dataSourceKey = "";
        java.util.List<test.apithrottling.Row> _updateRows_rows = null;
        test.apithrottling.Where _updateRows_where = null;
        port.updateRows(_updateRows_dataSourceKey, _updateRows_rows, _updateRows_where);


        }
        {
        System.out.println("Invoking addRow...");
        java.lang.String _addRow_dataSourceKey = "";
        test.apithrottling.Row _addRow_row = null;
        port.addRow(_addRow_dataSourceKey, _addRow_row);


        }

        System.exit(0);
    }

}
