
package com.clarity.books.service.api;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.ws.Holder;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.1 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebService(name = "BooksApiV1", targetNamespace = "http://api.service.books/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface BooksApiV1 {


    /**
     * 
     * @param token
     * @param initialReadSize
     * @param name
     * @param businessId
     * @return
     *     returns com.clarity.books.service.api.AttachmentInfo
     * @throws NotFound_Exception
     * @throws InternalError_Exception
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "file", targetNamespace = "")
    @RequestWrapper(localName = "getFile", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetFile")
    @ResponseWrapper(localName = "getFileResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetFileResponse")
    public AttachmentInfo getFile(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "businessId", targetNamespace = "")
        Long businessId,
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "initialReadSize", targetNamespace = "")
        int initialReadSize)
        throws InternalError_Exception, NotAllowed_Exception, NotFound_Exception
    ;

    /**
     * 
     * @param token
     * @param userId
     * @return
     *     returns com.clarity.books.service.api.UserInfo
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "user", targetNamespace = "")
    @RequestWrapper(localName = "getUser", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetUser")
    @ResponseWrapper(localName = "getUserResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetUserResponse")
    public UserInfo getUser(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "userId", targetNamespace = "")
        Long userId)
        throws NotAllowed_Exception
    ;

    /**
     * 
     * @param token
     * @param currencyId
     * @return
     *     returns com.clarity.books.service.api.CurrencyInfo
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "currency", targetNamespace = "")
    @RequestWrapper(localName = "getCurrency", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetCurrency")
    @ResponseWrapper(localName = "getCurrencyResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetCurrencyResponse")
    public CurrencyInfo getCurrency(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "currencyId", targetNamespace = "")
        Long currencyId)
        throws NotAllowed_Exception
    ;

    /**
     * 
     * @param last
     * @param token
     * @param userEmail
     * @param password
     * @param first
     * @param regionId
     * @return
     *     returns com.clarity.books.service.api.UserInfo
     * @throws ValidationFailed_Exception
     * @throws AlreadyExists_Exception
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "user", targetNamespace = "")
    @RequestWrapper(localName = "addUser", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.AddUser")
    @ResponseWrapper(localName = "addUserResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.AddUserResponse")
    public UserInfo addUser(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "userEmail", targetNamespace = "")
        String userEmail,
        @WebParam(name = "first", targetNamespace = "")
        String first,
        @WebParam(name = "last", targetNamespace = "")
        String last,
        @WebParam(name = "password", targetNamespace = "")
        String password,
        @WebParam(name = "regionId", targetNamespace = "")
        Long regionId)
        throws AlreadyExists_Exception, NotAllowed_Exception, ValidationFailed_Exception
    ;

    /**
     * 
     * @param token
     * @param itemId
     * @return
     *     returns com.clarity.books.service.api.ItemInfo
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "item", targetNamespace = "")
    @RequestWrapper(localName = "getItem", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetItem")
    @ResponseWrapper(localName = "getItemResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetItemResponse")
    public ItemInfo getItem(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "itemId", targetNamespace = "")
        Long itemId)
        throws NotAllowed_Exception
    ;

    /**
     * 
     * @param email
     * @param token
     * @param businessId
     * @return
     *     returns java.util.List<java.lang.String>
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "role", targetNamespace = "")
    @RequestWrapper(localName = "getRoles", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetRoles")
    @ResponseWrapper(localName = "getRolesResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetRolesResponse")
    public List<String> getRoles(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "businessId", targetNamespace = "")
        Long businessId,
        @WebParam(name = "email", targetNamespace = "")
        String email)
        throws NotAllowed_Exception
    ;

    /**
     * 
     * @param token
     * @param userId
     * @param roleName
     * @param businessId
     * @throws ValidationFailed_Exception
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "addRole", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.AddRole")
    @ResponseWrapper(localName = "addRoleResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.AddRoleResponse")
    public void addRole(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "businessId", targetNamespace = "")
        Long businessId,
        @WebParam(name = "userId", targetNamespace = "")
        Long userId,
        @WebParam(name = "roleName", targetNamespace = "")
        String roleName)
        throws NotAllowed_Exception, ValidationFailed_Exception
    ;

    /**
     * 
     * @param token
     * @param emailAddress
     * @param businessId
     * @param roleNames
     * @throws ValidationFailed_Exception
     * @throws BadArgument_Exception
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "setRoles", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.SetRoles")
    @ResponseWrapper(localName = "setRolesResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.SetRolesResponse")
    public void setRoles(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "businessId", targetNamespace = "")
        Long businessId,
        @WebParam(name = "emailAddress", targetNamespace = "")
        String emailAddress,
        @WebParam(name = "roleNames", targetNamespace = "")
        List<String> roleNames)
        throws BadArgument_Exception, NotAllowed_Exception, ValidationFailed_Exception
    ;

    /**
     * 
     * @param token
     * @param subscriptionId
     * @return
     *     returns com.clarity.books.service.api.SubscriptionInfo
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "subscription", targetNamespace = "")
    @RequestWrapper(localName = "getSubscription", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetSubscription")
    @ResponseWrapper(localName = "getSubscriptionResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetSubscriptionResponse")
    public SubscriptionInfo getSubscription(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "subscriptionId", targetNamespace = "")
        Long subscriptionId)
        throws NotAllowed_Exception
    ;

    /**
     * 
     * @param limit
     * @param token
     * @param businessId
     * @param offset
     * @return
     *     returns java.util.List<com.clarity.books.service.api.RecordInfo>
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "record", targetNamespace = "")
    @RequestWrapper(localName = "getRecords", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetRecords")
    @ResponseWrapper(localName = "getRecordsResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetRecordsResponse")
    public List<RecordInfo> getRecords(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "businessId", targetNamespace = "")
        Long businessId,
        @WebParam(name = "offset", targetNamespace = "")
        int offset,
        @WebParam(name = "limit", targetNamespace = "")
        int limit)
        throws NotAllowed_Exception
    ;

    /**
     * 
     * @param limit
     * @param fileId
     * @param token
     * @param offset
     * @return
     *     returns byte[]
     * @throws InternalError_Exception
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "data", targetNamespace = "")
    @RequestWrapper(localName = "readFile", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.ReadFile")
    @ResponseWrapper(localName = "readFileResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.ReadFileResponse")
    public byte[] readFile(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "fileId", targetNamespace = "")
        Long fileId,
        @WebParam(name = "offset", targetNamespace = "")
        int offset,
        @WebParam(name = "limit", targetNamespace = "")
        int limit)
        throws InternalError_Exception, NotAllowed_Exception
    ;

    /**
     * 
     * @param token
     * @param businessId
     * @return
     *     returns com.clarity.books.service.api.BusinessInfo
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "business", targetNamespace = "")
    @RequestWrapper(localName = "getBusiness", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetBusiness")
    @ResponseWrapper(localName = "getBusinessResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetBusinessResponse")
    public BusinessInfo getBusiness(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "businessId", targetNamespace = "")
        Long businessId)
        throws NotAllowed_Exception
    ;

    /**
     * 
     * @param recordId
     * @param token
     * @return
     *     returns com.clarity.books.service.api.RecordInfo
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "record", targetNamespace = "")
    @RequestWrapper(localName = "getRecord", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetRecord")
    @ResponseWrapper(localName = "getRecordResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetRecordResponse")
    public RecordInfo getRecord(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "recordId", targetNamespace = "")
        Long recordId)
        throws NotAllowed_Exception
    ;

    /**
     * 
     * @param localCurrencyCode
     * @param foreignCurrencyCode
     * @param token
     * @param asOf
     * @return
     *     returns com.clarity.books.service.api.ExchangeRateInfo
     * @throws NotFound_Exception
     * @throws ValidationFailed_Exception
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getExchangeRate", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetExchangeRate")
    @ResponseWrapper(localName = "getExchangeRateResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetExchangeRateResponse")
    public ExchangeRateInfo getExchangeRate(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "localCurrencyCode", targetNamespace = "")
        String localCurrencyCode,
        @WebParam(name = "foreignCurrencyCode", targetNamespace = "")
        String foreignCurrencyCode,
        @WebParam(name = "asOf", targetNamespace = "")
        String asOf)
        throws NotAllowed_Exception, NotFound_Exception, ValidationFailed_Exception
    ;

    /**
     * 
     * @param limit
     * @param token
     * @param businessId
     * @param offset
     * @return
     *     returns java.util.List<com.clarity.books.service.api.ChangesetInfo>
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "changeset", targetNamespace = "")
    @RequestWrapper(localName = "getChangesets", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetChangesets")
    @ResponseWrapper(localName = "getChangesetsResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetChangesetsResponse")
    public List<ChangesetInfo> getChangesets(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "businessId", targetNamespace = "")
        Long businessId,
        @WebParam(name = "offset", targetNamespace = "")
        int offset,
        @WebParam(name = "limit", targetNamespace = "")
        int limit)
        throws NotAllowed_Exception
    ;

    /**
     * 
     * @param startDate
     * @param currencyCode
     * @param contactInformation
     * @param token
     * @param name
     * @return
     *     returns com.clarity.books.service.api.BusinessInfo
     * @throws BadArgument_Exception
     * @throws ValidationFailed_Exception
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "business", targetNamespace = "")
    @RequestWrapper(localName = "addBusiness", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.AddBusiness")
    @ResponseWrapper(localName = "addBusinessResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.AddBusinessResponse")
    public BusinessInfo addBusiness(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "currencyCode", targetNamespace = "")
        String currencyCode,
        @WebParam(name = "startDate", targetNamespace = "")
        String startDate,
        @WebParam(name = "contactInformation", targetNamespace = "")
        ContactInformationInfo contactInformation)
        throws BadArgument_Exception, NotAllowed_Exception, ValidationFailed_Exception
    ;

    /**
     * 
     * @param token
     * @param name
     * @param businessId
     * @return
     *     returns com.clarity.books.service.api.TaxInfo
     * @throws ValidationFailed_Exception
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "tax", targetNamespace = "")
    @RequestWrapper(localName = "addTax", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.AddTax")
    @ResponseWrapper(localName = "addTaxResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.AddTaxResponse")
    public TaxInfo addTax(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "businessId", targetNamespace = "")
        Long businessId,
        @WebParam(name = "name", targetNamespace = "")
        String name)
        throws NotAllowed_Exception, ValidationFailed_Exception
    ;

    /**
     * 
     * @param token
     * @param businessId
     * @return
     *     returns java.util.List<com.clarity.books.service.api.AccountInfo>
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "account", targetNamespace = "")
    @RequestWrapper(localName = "getAccounts", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetAccounts")
    @ResponseWrapper(localName = "getAccountsResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetAccountsResponse")
    public List<AccountInfo> getAccounts(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "businessId", targetNamespace = "")
        Long businessId)
        throws NotAllowed_Exception
    ;

    /**
     * 
     * @param token
     * @param businessId
     * @return
     *     returns java.util.List<com.clarity.books.service.api.ContactInfo>
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "contact", targetNamespace = "")
    @RequestWrapper(localName = "getContacts", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetContacts")
    @ResponseWrapper(localName = "getContactsResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetContactsResponse")
    public List<ContactInfo> getContacts(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "businessId", targetNamespace = "")
        Long businessId)
        throws NotAllowed_Exception
    ;

    /**
     * 
     * @param token
     * @param itemCategoryId
     * @return
     *     returns java.util.List<com.clarity.books.service.api.ItemInfo>
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "item", targetNamespace = "")
    @RequestWrapper(localName = "getItems", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetItems")
    @ResponseWrapper(localName = "getItemsResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetItemsResponse")
    public List<ItemInfo> getItems(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "itemCategoryId", targetNamespace = "")
        Long itemCategoryId)
        throws NotAllowed_Exception
    ;

    /**
     * 
     * @param token
     * @param businessId
     * @return
     *     returns java.util.List<com.clarity.books.service.api.TaxInfo>
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "tax", targetNamespace = "")
    @RequestWrapper(localName = "getTaxes", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetTaxes")
    @ResponseWrapper(localName = "getTaxesResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetTaxesResponse")
    public List<TaxInfo> getTaxes(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "businessId", targetNamespace = "")
        Long businessId)
        throws NotAllowed_Exception
    ;

    /**
     * 
     * @param taxId
     * @param token
     * @return
     *     returns com.clarity.books.service.api.TaxInfo
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "tax", targetNamespace = "")
    @RequestWrapper(localName = "getTax", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetTax")
    @ResponseWrapper(localName = "getTaxResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetTaxResponse")
    public TaxInfo getTax(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "taxId", targetNamespace = "")
        Long taxId)
        throws NotAllowed_Exception
    ;

    /**
     * 
     * @param token
     * @param businessId
     * @return
     *     returns java.util.List<com.clarity.books.service.api.TaxCodeInfo>
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "taxCode", targetNamespace = "")
    @RequestWrapper(localName = "getTaxCodes", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetTaxCodes")
    @ResponseWrapper(localName = "getTaxCodesResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetTaxCodesResponse")
    public List<TaxCodeInfo> getTaxCodes(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "businessId", targetNamespace = "")
        Long businessId)
        throws NotAllowed_Exception
    ;

    /**
     * 
     * @param token
     * @param businessId
     * @return
     *     returns java.util.List<java.lang.String>
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "user", targetNamespace = "")
    @RequestWrapper(localName = "getUsers", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetUsers")
    @ResponseWrapper(localName = "getUsersResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetUsersResponse")
    public List<String> getUsers(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "businessId", targetNamespace = "")
        Long businessId)
        throws NotAllowed_Exception
    ;

    /**
     * 
     * @param contextId
     * @param token
     * @return
     *     returns com.clarity.books.service.api.CollaborationContextInfo
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "context", targetNamespace = "")
    @RequestWrapper(localName = "getCollaborationContext", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetCollaborationContext")
    @ResponseWrapper(localName = "getCollaborationContextResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetCollaborationContextResponse")
    public CollaborationContextInfo getCollaborationContext(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "contextId", targetNamespace = "")
        Long contextId)
        throws NotAllowed_Exception
    ;

    /**
     * 
     * @param limit
     * @param token
     * @param businessId
     * @param offset
     * @return
     *     returns java.util.List<com.clarity.books.service.api.BankReconciliationInfo>
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "bankReconciliation", targetNamespace = "")
    @RequestWrapper(localName = "getBankReconciliations", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetBankReconciliations")
    @ResponseWrapper(localName = "getBankReconciliationsResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetBankReconciliationsResponse")
    public List<BankReconciliationInfo> getBankReconciliations(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "businessId", targetNamespace = "")
        Long businessId,
        @WebParam(name = "offset", targetNamespace = "")
        int offset,
        @WebParam(name = "limit", targetNamespace = "")
        int limit)
        throws NotAllowed_Exception
    ;

    /**
     * 
     * @param token
     * @param businessId
     * @return
     *     returns java.util.List<com.clarity.books.service.api.SubscriptionPlanInfo>
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "plan", targetNamespace = "")
    @RequestWrapper(localName = "getSubscriptionPlans", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetSubscriptionPlans")
    @ResponseWrapper(localName = "getSubscriptionPlansResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetSubscriptionPlansResponse")
    public List<SubscriptionPlanInfo> getSubscriptionPlans(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "businessId", targetNamespace = "")
        Long businessId)
        throws NotAllowed_Exception
    ;

    /**
     * 
     * @param token
     * @param planId
     * @return
     *     returns java.util.List<com.clarity.books.service.api.AutomaticMessageInfo>
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "message", targetNamespace = "")
    @RequestWrapper(localName = "getAutomaticMessages", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetAutomaticMessages")
    @ResponseWrapper(localName = "getAutomaticMessagesResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetAutomaticMessagesResponse")
    public List<AutomaticMessageInfo> getAutomaticMessages(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "planId", targetNamespace = "")
        Long planId)
        throws NotAllowed_Exception
    ;

    /**
     * 
     * @param duration
     * @param restriction
     * @param token
     * @throws ValidationFailed_Exception
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "createRestrictedToken", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.CreateRestrictedToken")
    @ResponseWrapper(localName = "createRestrictedTokenResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.CreateRestrictedTokenResponse")
    public void createRestrictedToken(
        @WebParam(name = "token", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<AuthToken> token,
        @WebParam(name = "restriction", targetNamespace = "")
        String restriction,
        @WebParam(name = "duration", targetNamespace = "")
        long duration)
        throws NotAllowed_Exception, ValidationFailed_Exception
    ;

    /**
     * 
     * @param emailVerificationCode
     * @param locale
     * @param emailAddress
     * @param purpose
     * @param siteName
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(name = "success", targetNamespace = "")
    @RequestWrapper(localName = "checkEmailVerificationCode", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.CheckEmailVerificationCode")
    @ResponseWrapper(localName = "checkEmailVerificationCodeResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.CheckEmailVerificationCodeResponse")
    public boolean checkEmailVerificationCode(
        @WebParam(name = "emailAddress", targetNamespace = "")
        String emailAddress,
        @WebParam(name = "siteName", targetNamespace = "")
        String siteName,
        @WebParam(name = "locale", targetNamespace = "")
        String locale,
        @WebParam(name = "purpose", targetNamespace = "")
        String purpose,
        @WebParam(name = "emailVerificationCode", targetNamespace = "")
        String emailVerificationCode);

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.String>
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "country", targetNamespace = "")
    @RequestWrapper(localName = "getCountries", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetCountries")
    @ResponseWrapper(localName = "getCountriesResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetCountriesResponse")
    public List<String> getCountries()
        throws NotAllowed_Exception
    ;

    /**
     * 
     * @param token
     * @return
     *     returns java.util.List<com.clarity.books.service.api.CurrencyInfo>
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "currency", targetNamespace = "")
    @RequestWrapper(localName = "getCurrencies", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetCurrencies")
    @ResponseWrapper(localName = "getCurrenciesResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetCurrenciesResponse")
    public List<CurrencyInfo> getCurrencies(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token)
        throws NotAllowed_Exception
    ;

    /**
     * 
     * @param contactId
     * @param token
     * @return
     *     returns com.clarity.books.service.api.ContactInfo
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "contact", targetNamespace = "")
    @RequestWrapper(localName = "getContact", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetContact")
    @ResponseWrapper(localName = "getContactResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetContactResponse")
    public ContactInfo getContact(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "contactId", targetNamespace = "")
        Long contactId)
        throws NotAllowed_Exception
    ;

    /**
     * 
     * @param accountId
     * @param token
     * @return
     *     returns com.clarity.books.service.api.AccountInfo
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "account", targetNamespace = "")
    @RequestWrapper(localName = "getAccount", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetAccount")
    @ResponseWrapper(localName = "getAccountResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetAccountResponse")
    public AccountInfo getAccount(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "accountId", targetNamespace = "")
        Long accountId)
        throws NotAllowed_Exception
    ;

    /**
     * 
     * @param token
     * @param bankReconciliationId
     * @return
     *     returns com.clarity.books.service.api.BankReconciliationInfo
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "bankReconciliation", targetNamespace = "")
    @RequestWrapper(localName = "getBankReconciliation", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetBankReconciliation")
    @ResponseWrapper(localName = "getBankReconciliationResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetBankReconciliationResponse")
    public BankReconciliationInfo getBankReconciliation(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "bankReconciliationId", targetNamespace = "")
        Long bankReconciliationId)
        throws NotAllowed_Exception
    ;

    /**
     * 
     * @param token
     * @param planId
     * @return
     *     returns com.clarity.books.service.api.SubscriptionPlanInfo
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "plan", targetNamespace = "")
    @RequestWrapper(localName = "getSubscriptionPlan", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetSubscriptionPlan")
    @ResponseWrapper(localName = "getSubscriptionPlanResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetSubscriptionPlanResponse")
    public SubscriptionPlanInfo getSubscriptionPlan(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "planId", targetNamespace = "")
        Long planId)
        throws NotAllowed_Exception
    ;

    /**
     * 
     * @param token
     * @param messageId
     * @return
     *     returns com.clarity.books.service.api.AutomaticMessageInfo
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "message", targetNamespace = "")
    @RequestWrapper(localName = "getAutomaticMessage", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetAutomaticMessage")
    @ResponseWrapper(localName = "getAutomaticMessageResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetAutomaticMessageResponse")
    public AutomaticMessageInfo getAutomaticMessage(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "messageId", targetNamespace = "")
        Long messageId)
        throws NotAllowed_Exception
    ;

    /**
     * 
     * @param token
     * @param businessId
     * @return
     *     returns com.clarity.books.service.api.SubscriptionInfo
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "contract", targetNamespace = "")
    @RequestWrapper(localName = "getContract", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetContract")
    @ResponseWrapper(localName = "getContractResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetContractResponse")
    public SubscriptionInfo getContract(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "businessId", targetNamespace = "")
        Long businessId)
        throws NotAllowed_Exception
    ;

    /**
     * 
     * @param token
     * @param businessId
     * @return
     *     returns java.util.List<com.clarity.books.service.api.ContactInfo>
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "contact", targetNamespace = "")
    @RequestWrapper(localName = "getLinkedContacts", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetLinkedContacts")
    @ResponseWrapper(localName = "getLinkedContactsResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetLinkedContactsResponse")
    public List<ContactInfo> getLinkedContacts(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "businessId", targetNamespace = "")
        Long businessId)
        throws NotAllowed_Exception
    ;

    /**
     * 
     * @param token
     * @param businessId
     * @return
     *     returns com.clarity.books.service.api.EmailSettingsInfo
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "settings", targetNamespace = "")
    @RequestWrapper(localName = "getEmailSettings", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetEmailSettings")
    @ResponseWrapper(localName = "getEmailSettingsResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetEmailSettingsResponse")
    public EmailSettingsInfo getEmailSettings(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "businessId", targetNamespace = "")
        Long businessId)
        throws NotAllowed_Exception
    ;

    /**
     * 
     * @param limit
     * @param accountId
     * @param token
     * @param offset
     * @return
     *     returns java.util.List<com.clarity.books.service.api.JournalEntryInfo>
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "journalEntry", targetNamespace = "")
    @RequestWrapper(localName = "getJournalEntries", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetJournalEntries")
    @ResponseWrapper(localName = "getJournalEntriesResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetJournalEntriesResponse")
    public List<JournalEntryInfo> getJournalEntries(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "accountId", targetNamespace = "")
        Long accountId,
        @WebParam(name = "offset", targetNamespace = "")
        int offset,
        @WebParam(name = "limit", targetNamespace = "")
        int limit)
        throws NotAllowed_Exception
    ;

    /**
     * 
     * @param accountId
     * @param token
     * @return
     *     returns java.util.List<com.clarity.books.service.api.BalanceInfo>
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "balance", targetNamespace = "")
    @RequestWrapper(localName = "getBalances", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetBalances")
    @ResponseWrapper(localName = "getBalancesResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetBalancesResponse")
    public List<BalanceInfo> getBalances(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "accountId", targetNamespace = "")
        Long accountId)
        throws NotAllowed_Exception
    ;

    /**
     * 
     * @param accountId
     * @param token
     * @param date
     * @return
     *     returns java.util.List<com.clarity.books.service.api.BalanceInfo>
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "balance", targetNamespace = "")
    @RequestWrapper(localName = "getBalancesAtDate", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetBalancesAtDate")
    @ResponseWrapper(localName = "getBalancesAtDateResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetBalancesAtDateResponse")
    public List<BalanceInfo> getBalancesAtDate(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "accountId", targetNamespace = "")
        Long accountId,
        @WebParam(name = "date", targetNamespace = "")
        String date)
        throws NotAllowed_Exception
    ;

    /**
     * 
     * @param currencyCode
     * @param accountId
     * @param token
     * @return
     *     returns long
     * @throws NotFound_Exception
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "balance", targetNamespace = "")
    @RequestWrapper(localName = "getBalance", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetBalance")
    @ResponseWrapper(localName = "getBalanceResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetBalanceResponse")
    public long getBalance(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "accountId", targetNamespace = "")
        Long accountId,
        @WebParam(name = "currencyCode", targetNamespace = "")
        String currencyCode)
        throws NotAllowed_Exception, NotFound_Exception
    ;

    /**
     * 
     * @param currencyCode
     * @param accountId
     * @param token
     * @param date
     * @return
     *     returns long
     * @throws NotFound_Exception
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "balance", targetNamespace = "")
    @RequestWrapper(localName = "getBalanceAtDate", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetBalanceAtDate")
    @ResponseWrapper(localName = "getBalanceAtDateResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetBalanceAtDateResponse")
    public long getBalanceAtDate(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "accountId", targetNamespace = "")
        Long accountId,
        @WebParam(name = "currencyCode", targetNamespace = "")
        String currencyCode,
        @WebParam(name = "date", targetNamespace = "")
        String date)
        throws NotAllowed_Exception, NotFound_Exception
    ;

    /**
     * 
     * @param accountId
     * @param token
     * @param statementDate
     * @return
     *     returns java.util.List<com.clarity.books.service.api.BalanceInfo>
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "balance", targetNamespace = "")
    @RequestWrapper(localName = "getStatementOpeningBalances", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetStatementOpeningBalances")
    @ResponseWrapper(localName = "getStatementOpeningBalancesResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetStatementOpeningBalancesResponse")
    public List<BalanceInfo> getStatementOpeningBalances(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "accountId", targetNamespace = "")
        Long accountId,
        @WebParam(name = "statementDate", targetNamespace = "")
        String statementDate)
        throws NotAllowed_Exception
    ;

    /**
     * 
     * @param token
     * @param defaultValue
     * @param key
     * @return
     *     returns java.lang.String
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "setting", targetNamespace = "")
    @RequestWrapper(localName = "getSetting", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetSetting")
    @ResponseWrapper(localName = "getSettingResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetSettingResponse")
    public String getSetting(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "key", targetNamespace = "")
        String key,
        @WebParam(name = "defaultValue", targetNamespace = "")
        String defaultValue)
        throws NotAllowed_Exception
    ;

    /**
     * 
     * @param token
     * @param regionId
     * @return
     *     returns com.clarity.books.service.api.RegionInfo
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "region", targetNamespace = "")
    @RequestWrapper(localName = "getRegion", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetRegion")
    @ResponseWrapper(localName = "getRegionResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetRegionResponse")
    public RegionInfo getRegion(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "regionId", targetNamespace = "")
        Long regionId)
        throws NotAllowed_Exception
    ;

    /**
     * 
     * @param token
     * @param taxName
     * @param regionId
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "clearTaxRate", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.ClearTaxRate")
    @ResponseWrapper(localName = "clearTaxRateResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.ClearTaxRateResponse")
    public void clearTaxRate(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "regionId", targetNamespace = "")
        Long regionId,
        @WebParam(name = "taxName", targetNamespace = "")
        String taxName)
        throws NotAllowed_Exception
    ;

    /**
     * 
     * @param accountName
     * @param token
     * @param businessId
     * @return
     *     returns com.clarity.books.service.api.AccountInfo
     * @throws NotFound_Exception
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "account", targetNamespace = "")
    @RequestWrapper(localName = "getAccountByName", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetAccountByName")
    @ResponseWrapper(localName = "getAccountByNameResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetAccountByNameResponse")
    public AccountInfo getAccountByName(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "businessId", targetNamespace = "")
        Long businessId,
        @WebParam(name = "accountName", targetNamespace = "")
        String accountName)
        throws NotAllowed_Exception, NotFound_Exception
    ;

    /**
     * 
     * @param token
     * @return
     *     returns java.util.List<java.lang.String>
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "districtOrCounty", targetNamespace = "")
    @RequestWrapper(localName = "getAllDistrictsOrCounties", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetAllDistrictsOrCounties")
    @ResponseWrapper(localName = "getAllDistrictsOrCountiesResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetAllDistrictsOrCountiesResponse")
    public List<String> getAllDistrictsOrCounties(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token)
        throws NotAllowed_Exception
    ;

    /**
     * 
     * @param token
     * @return
     *     returns java.util.List<java.lang.String>
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "provinceOrState", targetNamespace = "")
    @RequestWrapper(localName = "getAllProvincesOrStates", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetAllProvincesOrStates")
    @ResponseWrapper(localName = "getAllProvincesOrStatesResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetAllProvincesOrStatesResponse")
    public List<String> getAllProvincesOrStates(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token)
        throws NotAllowed_Exception
    ;

    /**
     * 
     * @param provinceOrState
     * @param country
     * @return
     *     returns java.util.List<java.lang.String>
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "districtOrCounty", targetNamespace = "")
    @RequestWrapper(localName = "getDistrictsOrCounties", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetDistrictsOrCounties")
    @ResponseWrapper(localName = "getDistrictsOrCountiesResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetDistrictsOrCountiesResponse")
    public List<String> getDistrictsOrCounties(
        @WebParam(name = "country", targetNamespace = "")
        String country,
        @WebParam(name = "provinceOrState", targetNamespace = "")
        String provinceOrState)
        throws NotAllowed_Exception
    ;

    /**
     * 
     * @param token
     * @param regionId
     * @return
     *     returns com.clarity.books.service.api.CurrencyInfo
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "currency", targetNamespace = "")
    @RequestWrapper(localName = "getHomeCurrency", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetHomeCurrency")
    @ResponseWrapper(localName = "getHomeCurrencyResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetHomeCurrencyResponse")
    public CurrencyInfo getHomeCurrency(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "regionId", targetNamespace = "")
        Long regionId)
        throws NotAllowed_Exception
    ;

    /**
     * 
     * @param country
     * @return
     *     returns java.util.List<java.lang.String>
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "provinceOrState", targetNamespace = "")
    @RequestWrapper(localName = "getProvincesOrStates", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetProvincesOrStates")
    @ResponseWrapper(localName = "getProvincesOrStatesResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetProvincesOrStatesResponse")
    public List<String> getProvincesOrStates(
        @WebParam(name = "country", targetNamespace = "")
        String country)
        throws NotAllowed_Exception
    ;

    /**
     * 
     * @param token
     * @param taxName
     * @param effectiveDate
     * @param regionId
     * @return
     *     returns double
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "rate", targetNamespace = "")
    @RequestWrapper(localName = "getTaxRate", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetTaxRate")
    @ResponseWrapper(localName = "getTaxRateResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetTaxRateResponse")
    public double getTaxRate(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "regionId", targetNamespace = "")
        Long regionId,
        @WebParam(name = "taxName", targetNamespace = "")
        String taxName,
        @WebParam(name = "effectiveDate", targetNamespace = "")
        String effectiveDate)
        throws NotAllowed_Exception
    ;

    /**
     * 
     * @param email
     * @param token
     * @return
     *     returns com.clarity.books.service.api.UserInfo
     * @throws NotFound_Exception
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "user", targetNamespace = "")
    @RequestWrapper(localName = "getUserByEmail", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetUserByEmail")
    @ResponseWrapper(localName = "getUserByEmailResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetUserByEmailResponse")
    public UserInfo getUserByEmail(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "email", targetNamespace = "")
        String email)
        throws NotAllowed_Exception, NotFound_Exception
    ;

    /**
     * 
     * @param rate
     * @param previousRate
     * @param token
     * @param taxName
     * @param effectiveDate
     * @param regionId
     * @throws ValidationFailed_Exception
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "setTaxRate", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.SetTaxRate")
    @ResponseWrapper(localName = "setTaxRateResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.SetTaxRateResponse")
    public void setTaxRate(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "regionId", targetNamespace = "")
        Long regionId,
        @WebParam(name = "taxName", targetNamespace = "")
        String taxName,
        @WebParam(name = "rate", targetNamespace = "")
        double rate,
        @WebParam(name = "effectiveDate", targetNamespace = "")
        String effectiveDate,
        @WebParam(name = "previousRate", targetNamespace = "")
        double previousRate)
        throws NotAllowed_Exception, ValidationFailed_Exception
    ;

    /**
     * 
     * @param limit
     * @param token
     * @param businessId
     * @param offset
     * @return
     *     returns java.util.List<com.clarity.books.service.api.JournalEntryInfo>
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "journalEntry", targetNamespace = "")
    @RequestWrapper(localName = "getLedger", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetLedger")
    @ResponseWrapper(localName = "getLedgerResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetLedgerResponse")
    public List<JournalEntryInfo> getLedger(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "businessId", targetNamespace = "")
        Long businessId,
        @WebParam(name = "offset", targetNamespace = "")
        int offset,
        @WebParam(name = "limit", targetNamespace = "")
        int limit)
        throws NotAllowed_Exception
    ;

    /**
     * 
     * @param contactId
     * @param currencyCode
     * @param token
     * @param businessId
     * @param recordType
     * @return
     *     returns java.util.List<com.clarity.books.service.api.RecordInfo>
     * @throws BadArgument_Exception
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "record", targetNamespace = "")
    @RequestWrapper(localName = "getUnpaidRecords", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetUnpaidRecords")
    @ResponseWrapper(localName = "getUnpaidRecordsResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetUnpaidRecordsResponse")
    public List<RecordInfo> getUnpaidRecords(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "businessId", targetNamespace = "")
        Long businessId,
        @WebParam(name = "currencyCode", targetNamespace = "")
        String currencyCode,
        @WebParam(name = "recordType", targetNamespace = "")
        RecordType recordType,
        @WebParam(name = "contactId", targetNamespace = "")
        Long contactId)
        throws BadArgument_Exception, NotAllowed_Exception
    ;

    /**
     * 
     * @param contactId
     * @param currencyCode
     * @param token
     * @param businessId
     * @param recordType
     * @return
     *     returns java.util.List<com.clarity.books.service.api.RecordInfo>
     * @throws BadArgument_Exception
     * @throws ValidationFailed_Exception
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "record", targetNamespace = "")
    @RequestWrapper(localName = "getOverpaidRecords", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetOverpaidRecords")
    @ResponseWrapper(localName = "getOverpaidRecordsResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetOverpaidRecordsResponse")
    public List<RecordInfo> getOverpaidRecords(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "businessId", targetNamespace = "")
        Long businessId,
        @WebParam(name = "currencyCode", targetNamespace = "")
        String currencyCode,
        @WebParam(name = "recordType", targetNamespace = "")
        RecordType recordType,
        @WebParam(name = "contactId", targetNamespace = "")
        Long contactId)
        throws BadArgument_Exception, NotAllowed_Exception, ValidationFailed_Exception
    ;

    /**
     * 
     * @param token
     * @param businessId
     * @return
     *     returns int
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "count", targetNamespace = "")
    @RequestWrapper(localName = "getLedgerLength", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetLedgerLength")
    @ResponseWrapper(localName = "getLedgerLengthResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetLedgerLengthResponse")
    public int getLedgerLength(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "businessId", targetNamespace = "")
        Long businessId)
        throws NotAllowed_Exception
    ;

    /**
     * 
     * @param token
     * @param businessId
     * @throws InternalError_Exception
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "skipTrial", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.SkipTrial")
    @ResponseWrapper(localName = "skipTrialResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.SkipTrialResponse")
    public void skipTrial(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "businessId", targetNamespace = "")
        Long businessId)
        throws InternalError_Exception, NotAllowed_Exception
    ;

    /**
     * 
     * @param token
     * @param item
     * @throws BadArgument_Exception
     * @throws ValidationFailed_Exception
     * @throws AlreadyExists_Exception
     * @throws ConflictsWithAnother_Exception
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "saveItem", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.SaveItem")
    @ResponseWrapper(localName = "saveItemResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.SaveItemResponse")
    public void saveItem(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "item", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<ItemInfo> item)
        throws AlreadyExists_Exception, BadArgument_Exception, ConflictsWithAnother_Exception, NotAllowed_Exception, ValidationFailed_Exception
    ;

    /**
     * 
     * @param accountId
     * @param token
     * @return
     *     returns int
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "count", targetNamespace = "")
    @RequestWrapper(localName = "countJournalEntries", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.CountJournalEntries")
    @ResponseWrapper(localName = "countJournalEntriesResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.CountJournalEntriesResponse")
    public int countJournalEntries(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "accountId", targetNamespace = "")
        Long accountId)
        throws NotAllowed_Exception
    ;

    /**
     * 
     * @param token
     * @param businessId
     * @return
     *     returns int
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "count", targetNamespace = "")
    @RequestWrapper(localName = "countChangesets", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.CountChangesets")
    @ResponseWrapper(localName = "countChangesetsResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.CountChangesetsResponse")
    public int countChangesets(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "businessId", targetNamespace = "")
        Long businessId)
        throws NotAllowed_Exception
    ;

    /**
     * 
     * @param limit
     * @param token
     * @param businessId
     * @param offset
     * @return
     *     returns int
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "count", targetNamespace = "")
    @RequestWrapper(localName = "countRecords", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.CountRecords")
    @ResponseWrapper(localName = "countRecordsResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.CountRecordsResponse")
    public int countRecords(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "businessId", targetNamespace = "")
        Long businessId,
        @WebParam(name = "offset", targetNamespace = "")
        int offset,
        @WebParam(name = "limit", targetNamespace = "")
        int limit)
        throws NotAllowed_Exception
    ;

    /**
     * 
     * @param contactId
     * @param token
     * @return
     *     returns int
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "count", targetNamespace = "")
    @RequestWrapper(localName = "countRecordsForContact", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.CountRecordsForContact")
    @ResponseWrapper(localName = "countRecordsForContactResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.CountRecordsForContactResponse")
    public int countRecordsForContact(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "contactId", targetNamespace = "")
        Long contactId)
        throws NotAllowed_Exception
    ;

    /**
     * 
     * @param buffer
     * @param contextId
     * @param complete
     * @param token
     * @param filename
     * @param contentType
     * @param characterEncoding
     * @return
     *     returns com.clarity.books.service.api.AttachmentInfo
     * @throws InternalError_Exception
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "attachment", targetNamespace = "")
    @RequestWrapper(localName = "addAttachment", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.AddAttachment")
    @ResponseWrapper(localName = "addAttachmentResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.AddAttachmentResponse")
    public AttachmentInfo addAttachment(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "contextId", targetNamespace = "")
        Long contextId,
        @WebParam(name = "filename", targetNamespace = "")
        String filename,
        @WebParam(name = "contentType", targetNamespace = "")
        String contentType,
        @WebParam(name = "characterEncoding", targetNamespace = "")
        String characterEncoding,
        @WebParam(name = "buffer", targetNamespace = "")
        byte[] buffer,
        @WebParam(name = "complete", targetNamespace = "")
        boolean complete)
        throws InternalError_Exception, NotAllowed_Exception
    ;

    /**
     * 
     * @param token
     * @param name
     * @param businessId
     * @return
     *     returns com.clarity.books.service.api.ContactInfo
     * @throws ValidationFailed_Exception
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "contact", targetNamespace = "")
    @RequestWrapper(localName = "addNewCustomer", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.AddNewCustomer")
    @ResponseWrapper(localName = "addNewCustomerResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.AddNewCustomerResponse")
    public ContactInfo addNewCustomer(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "businessId", targetNamespace = "")
        Long businessId,
        @WebParam(name = "name", targetNamespace = "")
        String name)
        throws NotAllowed_Exception, ValidationFailed_Exception
    ;

    /**
     * 
     * @param token
     * @param name
     * @param businessId
     * @return
     *     returns com.clarity.books.service.api.ContactInfo
     * @throws ValidationFailed_Exception
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "vendor", targetNamespace = "")
    @RequestWrapper(localName = "addNewVendor", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.AddNewVendor")
    @ResponseWrapper(localName = "addNewVendorResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.AddNewVendorResponse")
    public ContactInfo addNewVendor(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "businessId", targetNamespace = "")
        Long businessId,
        @WebParam(name = "name", targetNamespace = "")
        String name)
        throws NotAllowed_Exception, ValidationFailed_Exception
    ;

    /**
     * 
     * @param arg2
     * @param attachmentId
     * @param token
     * @throws InternalError_Exception
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "appendToAttachment", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.AppendToAttachment")
    @ResponseWrapper(localName = "appendToAttachmentResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.AppendToAttachmentResponse")
    public void appendToAttachment(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "attachmentId", targetNamespace = "")
        Long attachmentId,
        @WebParam(name = "arg2", targetNamespace = "")
        byte[] arg2)
        throws InternalError_Exception, NotAllowed_Exception
    ;

    /**
     * 
     * @param fileId
     * @param arg2
     * @param token
     * @throws InternalError_Exception
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "appendToFile", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.AppendToFile")
    @ResponseWrapper(localName = "appendToFileResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.AppendToFileResponse")
    public void appendToFile(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "fileId", targetNamespace = "")
        Long fileId,
        @WebParam(name = "arg2", targetNamespace = "")
        byte[] arg2)
        throws InternalError_Exception, NotAllowed_Exception
    ;

    /**
     * 
     * @param token
     * @param newPassword
     * @param userId
     * @param oldPassword
     * @throws BadPassword_Exception
     * @throws ValidationFailed_Exception
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "changeUserPassword", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.ChangeUserPassword")
    @ResponseWrapper(localName = "changeUserPasswordResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.ChangeUserPasswordResponse")
    public void changeUserPassword(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "userId", targetNamespace = "")
        Long userId,
        @WebParam(name = "oldPassword", targetNamespace = "")
        String oldPassword,
        @WebParam(name = "newPassword", targetNamespace = "")
        String newPassword)
        throws BadPassword_Exception, NotAllowed_Exception, ValidationFailed_Exception
    ;

    /**
     * 
     * @param attachmentId
     * @param token
     * @throws InternalError_Exception
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "completeAttachment", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.CompleteAttachment")
    @ResponseWrapper(localName = "completeAttachmentResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.CompleteAttachmentResponse")
    public void completeAttachment(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "attachmentId", targetNamespace = "")
        Long attachmentId)
        throws InternalError_Exception, NotAllowed_Exception
    ;

    /**
     * 
     * @param fileId
     * @param token
     * @throws InternalError_Exception
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "completeFile", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.CompleteFile")
    @ResponseWrapper(localName = "completeFileResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.CompleteFileResponse")
    public void completeFile(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "fileId", targetNamespace = "")
        Long fileId)
        throws InternalError_Exception, NotAllowed_Exception
    ;

    /**
     * 
     * @param newPassword
     * @param locale
     * @param verificationCode
     * @param emailAddress
     * @param siteName
     * @throws NotFound_Exception
     * @throws BadArgument_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "completePasswordReset", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.CompletePasswordReset")
    @ResponseWrapper(localName = "completePasswordResetResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.CompletePasswordResetResponse")
    public void completePasswordReset(
        @WebParam(name = "emailAddress", targetNamespace = "")
        String emailAddress,
        @WebParam(name = "verificationCode", targetNamespace = "")
        String verificationCode,
        @WebParam(name = "newPassword", targetNamespace = "")
        String newPassword,
        @WebParam(name = "siteName", targetNamespace = "")
        String siteName,
        @WebParam(name = "locale", targetNamespace = "")
        String locale)
        throws BadArgument_Exception, NotFound_Exception
    ;

    /**
     * 
     * @param emailVerificationCode
     * @param locale
     * @param emailAddress
     * @param siteName
     * @return
     *     returns com.clarity.books.service.api.AuthToken
     * @throws NotFound_Exception
     * @throws BadArgument_Exception
     * @throws AlreadyActivated_Exception
     */
    @WebMethod
    @WebResult(name = "token", targetNamespace = "")
    @RequestWrapper(localName = "completeSignUp", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.CompleteSignUp")
    @ResponseWrapper(localName = "completeSignUpResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.CompleteSignUpResponse")
    public AuthToken completeSignUp(
        @WebParam(name = "emailAddress", targetNamespace = "")
        String emailAddress,
        @WebParam(name = "siteName", targetNamespace = "")
        String siteName,
        @WebParam(name = "locale", targetNamespace = "")
        String locale,
        @WebParam(name = "emailVerificationCode", targetNamespace = "")
        String emailVerificationCode)
        throws AlreadyActivated_Exception, BadArgument_Exception, NotFound_Exception
    ;

    /**
     * 
     * @param token
     * @param businessId
     * @return
     *     returns int
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "count", targetNamespace = "")
    @RequestWrapper(localName = "countBankReconciliations", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.CountBankReconciliations")
    @ResponseWrapper(localName = "countBankReconciliationsResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.CountBankReconciliationsResponse")
    public int countBankReconciliations(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "businessId", targetNamespace = "")
        Long businessId)
        throws NotAllowed_Exception
    ;

    /**
     * 
     * @param token
     * @param businessId
     * @param recordType
     * @return
     *     returns int
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "count", targetNamespace = "")
    @RequestWrapper(localName = "countRecordsOfType", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.CountRecordsOfType")
    @ResponseWrapper(localName = "countRecordsOfTypeResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.CountRecordsOfTypeResponse")
    public int countRecordsOfType(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "businessId", targetNamespace = "")
        Long businessId,
        @WebParam(name = "recordType", targetNamespace = "")
        RecordType recordType)
        throws NotAllowed_Exception
    ;

    /**
     * 
     * @param token
     * @param planId
     * @return
     *     returns int
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "count", targetNamespace = "")
    @RequestWrapper(localName = "countSubscriptionsWithPlan", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.CountSubscriptionsWithPlan")
    @ResponseWrapper(localName = "countSubscriptionsWithPlanResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.CountSubscriptionsWithPlanResponse")
    public int countSubscriptionsWithPlan(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "planId", targetNamespace = "")
        Long planId)
        throws NotAllowed_Exception
    ;

    /**
     * 
     * @param amount
     * @param record
     * @param token
     * @throws InternalError_Exception
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "debitFuturePayAgreement", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.DebitFuturePayAgreement")
    @ResponseWrapper(localName = "debitFuturePayAgreementResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.DebitFuturePayAgreementResponse")
    public void debitFuturePayAgreement(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "record", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<RecordInfo> record,
        @WebParam(name = "amount", targetNamespace = "")
        long amount)
        throws InternalError_Exception, NotAllowed_Exception
    ;

    /**
     * 
     * @param token
     * @return
     *     returns com.clarity.books.service.api.AuthToken
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "token", targetNamespace = "")
    @RequestWrapper(localName = "decodeAuthToken", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.DecodeAuthToken")
    @ResponseWrapper(localName = "decodeAuthTokenResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.DecodeAuthTokenResponse")
    public AuthToken decodeAuthToken(
        @WebParam(name = "token", targetNamespace = "")
        String token)
        throws NotAllowed_Exception
    ;

    /**
     * 
     * @param duration
     * @param username
     * @param locale
     * @param password
     * @param siteName
     * @return
     *     returns com.clarity.books.service.api.AuthToken
     * @throws BadPassword_Exception
     * @throws NotActivated_Exception
     */
    @WebMethod
    @WebResult(name = "token", targetNamespace = "")
    @RequestWrapper(localName = "doLogin", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.DoLogin")
    @ResponseWrapper(localName = "doLoginResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.DoLoginResponse")
    public AuthToken doLogin(
        @WebParam(name = "username", targetNamespace = "")
        String username,
        @WebParam(name = "password", targetNamespace = "")
        String password,
        @WebParam(name = "siteName", targetNamespace = "")
        String siteName,
        @WebParam(name = "locale", targetNamespace = "")
        String locale,
        @WebParam(name = "duration", targetNamespace = "")
        long duration)
        throws BadPassword_Exception, NotActivated_Exception
    ;

    /**
     * 
     */
    @WebMethod
    @RequestWrapper(localName = "doLogout", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.DoLogout")
    @ResponseWrapper(localName = "doLogoutResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.DoLogoutResponse")
    public void doLogout();

    /**
     * 
     * @param token
     * @return
     *     returns java.lang.String
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "token", targetNamespace = "")
    @RequestWrapper(localName = "encodeAuthToken", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.EncodeAuthToken")
    @ResponseWrapper(localName = "encodeAuthTokenResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.EncodeAuthTokenResponse")
    public String encodeAuthToken(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token)
        throws NotAllowed_Exception
    ;

    /**
     * 
     * @param duration
     * @param token
     * @throws ValidationFailed_Exception
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "extendLogin", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.ExtendLogin")
    @ResponseWrapper(localName = "extendLoginResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.ExtendLoginResponse")
    public void extendLogin(
        @WebParam(name = "token", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<AuthToken> token,
        @WebParam(name = "duration", targetNamespace = "")
        long duration)
        throws NotAllowed_Exception, ValidationFailed_Exception
    ;

    /**
     * 
     * @param token
     * @param provinceOrState
     * @param districtOrCounty
     * @param country
     * @return
     *     returns com.clarity.books.service.api.RegionInfo
     * @throws DoesNotExist_Exception
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "region", targetNamespace = "")
    @RequestWrapper(localName = "findRegion", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.FindRegion")
    @ResponseWrapper(localName = "findRegionResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.FindRegionResponse")
    public RegionInfo findRegion(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "country", targetNamespace = "")
        String country,
        @WebParam(name = "provinceOrState", targetNamespace = "")
        String provinceOrState,
        @WebParam(name = "districtOrCounty", targetNamespace = "")
        String districtOrCounty)
        throws DoesNotExist_Exception, NotAllowed_Exception
    ;

    /**
     * 
     * @param token
     * @param businessId
     * @return
     *     returns java.util.List<com.clarity.books.service.api.ItemInfo>
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "item", targetNamespace = "")
    @RequestWrapper(localName = "getAllItems", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetAllItems")
    @ResponseWrapper(localName = "getAllItemsResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetAllItemsResponse")
    public List<ItemInfo> getAllItems(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "businessId", targetNamespace = "")
        Long businessId)
        throws NotAllowed_Exception
    ;

    /**
     * 
     * @param attachmentId
     * @param token
     * @param initialReadSize
     * @return
     *     returns com.clarity.books.service.api.AttachmentInfo
     * @throws InternalError_Exception
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "attachment", targetNamespace = "")
    @RequestWrapper(localName = "getAttachment", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetAttachment")
    @ResponseWrapper(localName = "getAttachmentResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetAttachmentResponse")
    public AttachmentInfo getAttachment(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "attachmentId", targetNamespace = "")
        Long attachmentId,
        @WebParam(name = "initialReadSize", targetNamespace = "")
        int initialReadSize)
        throws InternalError_Exception, NotAllowed_Exception
    ;

    /**
     * 
     * @param token
     * @param businessId
     * @return
     *     returns java.util.List<com.clarity.books.service.api.ContractPlanInfo>
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "plan", targetNamespace = "")
    @RequestWrapper(localName = "getAvailableContractPlans", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetAvailableContractPlans")
    @ResponseWrapper(localName = "getAvailableContractPlansResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetAvailableContractPlansResponse")
    public List<ContractPlanInfo> getAvailableContractPlans(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "businessId", targetNamespace = "")
        Long businessId)
        throws NotAllowed_Exception
    ;

    /**
     * 
     * @param taxInfoClass
     * @param token
     * @param businessId
     * @return
     *     returns com.clarity.books.service.api.BasicTaxInfo
     * @throws BadArgument_Exception
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "basicTaxInfo", targetNamespace = "")
    @RequestWrapper(localName = "getBasicTaxInfo", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetBasicTaxInfo")
    @ResponseWrapper(localName = "getBasicTaxInfoResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetBasicTaxInfoResponse")
    public BasicTaxInfo getBasicTaxInfo(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "businessId", targetNamespace = "")
        Long businessId,
        @WebParam(name = "taxInfoClass", targetNamespace = "")
        String taxInfoClass)
        throws BadArgument_Exception, NotAllowed_Exception
    ;

    /**
     * 
     * @param token
     * @param userId
     * @return
     *     returns java.util.List<com.clarity.books.service.api.BusinessInfo>
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "business", targetNamespace = "")
    @RequestWrapper(localName = "getBusinessesForUser", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetBusinessesForUser")
    @ResponseWrapper(localName = "getBusinessesForUserResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetBusinessesForUserResponse")
    public List<BusinessInfo> getBusinessesForUser(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "userId", targetNamespace = "")
        Long userId)
        throws NotAllowed_Exception
    ;

    /**
     * 
     * @param taxInfoClass
     * @param token
     * @param businessId
     * @return
     *     returns com.clarity.books.service.api.CanadianTaxInfo
     * @throws BadArgument_Exception
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "canadianTaxInfo", targetNamespace = "")
    @RequestWrapper(localName = "getCanadianTaxInfo", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetCanadianTaxInfo")
    @ResponseWrapper(localName = "getCanadianTaxInfoResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetCanadianTaxInfoResponse")
    public CanadianTaxInfo getCanadianTaxInfo(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "businessId", targetNamespace = "")
        Long businessId,
        @WebParam(name = "taxInfoClass", targetNamespace = "")
        String taxInfoClass)
        throws BadArgument_Exception, NotAllowed_Exception
    ;

    /**
     * 
     * @param token
     * @param contactType
     * @param businessId
     * @return
     *     returns java.util.List<com.clarity.books.service.api.ContactInfo>
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "contact", targetNamespace = "")
    @RequestWrapper(localName = "getContactsOfType", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetContactsOfType")
    @ResponseWrapper(localName = "getContactsOfTypeResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetContactsOfTypeResponse")
    public List<ContactInfo> getContactsOfType(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "businessId", targetNamespace = "")
        Long businessId,
        @WebParam(name = "contactType", targetNamespace = "")
        ContactType contactType)
        throws NotAllowed_Exception
    ;

    /**
     * 
     * @param currencyCode
     * @param token
     * @return
     *     returns com.clarity.books.service.api.CurrencyInfo
     * @throws NotFound_Exception
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "currency", targetNamespace = "")
    @RequestWrapper(localName = "getCurrencyByCode", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetCurrencyByCode")
    @ResponseWrapper(localName = "getCurrencyByCodeResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetCurrencyByCodeResponse")
    public CurrencyInfo getCurrencyByCode(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "currencyCode", targetNamespace = "")
        String currencyCode)
        throws NotAllowed_Exception, NotFound_Exception
    ;

    /**
     * 
     * @param token
     * @param businessId
     * @return
     *     returns java.util.List<com.clarity.books.service.api.ContactInfo>
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "contact", targetNamespace = "")
    @RequestWrapper(localName = "getCustomers", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetCustomers")
    @ResponseWrapper(localName = "getCustomersResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetCustomersResponse")
    public List<ContactInfo> getCustomers(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "businessId", targetNamespace = "")
        Long businessId)
        throws NotAllowed_Exception
    ;

    /**
     * 
     * @param token
     * @return
     *     returns com.clarity.books.service.api.RegionInfo
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "region", targetNamespace = "")
    @RequestWrapper(localName = "getDefaultRegion", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetDefaultRegion")
    @ResponseWrapper(localName = "getDefaultRegionResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetDefaultRegionResponse")
    public RegionInfo getDefaultRegion(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token)
        throws NotAllowed_Exception
    ;

    /**
     * 
     * @param token
     * @param agreementId
     * @return
     *     returns com.clarity.books.service.api.FuturePayAgreementInfo
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "agreement", targetNamespace = "")
    @RequestWrapper(localName = "getFuturePayAgreement", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetFuturePayAgreement")
    @ResponseWrapper(localName = "getFuturePayAgreementResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetFuturePayAgreementResponse")
    public FuturePayAgreementInfo getFuturePayAgreement(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "agreementId", targetNamespace = "")
        Long agreementId)
        throws NotAllowed_Exception
    ;

    /**
     * 
     * @param returnUrl
     * @param returnLink
     * @param currencyCode
     * @param contactId
     * @param token
     * @param description
     * @return
     *     returns java.lang.String
     * @throws NotFound_Exception
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "url", targetNamespace = "")
    @RequestWrapper(localName = "getFuturePaySetupUrl", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetFuturePaySetupUrl")
    @ResponseWrapper(localName = "getFuturePaySetupUrlResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetFuturePaySetupUrlResponse")
    public String getFuturePaySetupUrl(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "contactId", targetNamespace = "")
        Long contactId,
        @WebParam(name = "description", targetNamespace = "")
        String description,
        @WebParam(name = "currencyCode", targetNamespace = "")
        String currencyCode,
        @WebParam(name = "returnLink", targetNamespace = "")
        String returnLink,
        @WebParam(name = "returnUrl", targetNamespace = "")
        String returnUrl)
        throws NotAllowed_Exception, NotFound_Exception
    ;

    /**
     * 
     * @param parentId
     * @param token
     * @param name
     * @return
     *     returns com.clarity.books.service.api.ItemCategoryInfo
     * @throws NotFound_Exception
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "category", targetNamespace = "")
    @RequestWrapper(localName = "getItemSubcategory", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetItemSubcategory")
    @ResponseWrapper(localName = "getItemSubcategoryResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetItemSubcategoryResponse")
    public ItemCategoryInfo getItemSubcategory(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "parentId", targetNamespace = "")
        Long parentId,
        @WebParam(name = "name", targetNamespace = "")
        String name)
        throws NotAllowed_Exception, NotFound_Exception
    ;

    /**
     * 
     * @param token
     * @return
     *     returns java.util.List<com.clarity.books.service.api.BusinessInfo>
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "business", targetNamespace = "")
    @RequestWrapper(localName = "getMyBusinesses", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetMyBusinesses")
    @ResponseWrapper(localName = "getMyBusinessesResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetMyBusinessesResponse")
    public List<BusinessInfo> getMyBusinesses(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token)
        throws NotAllowed_Exception
    ;

    /**
     * 
     * @param token
     * @return
     *     returns com.clarity.books.service.api.UserInfo
     */
    @WebMethod
    @WebResult(name = "user", targetNamespace = "")
    @RequestWrapper(localName = "getMyUser", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetMyUser")
    @ResponseWrapper(localName = "getMyUserResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetMyUserResponse")
    public UserInfo getMyUser(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token);

    /**
     * 
     * @param defaultValue
     * @param key
     * @param siteName
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "setting", targetNamespace = "")
    @RequestWrapper(localName = "getPublicSetting", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetPublicSetting")
    @ResponseWrapper(localName = "getPublicSettingResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetPublicSettingResponse")
    public String getPublicSetting(
        @WebParam(name = "siteName", targetNamespace = "")
        String siteName,
        @WebParam(name = "key", targetNamespace = "")
        String key,
        @WebParam(name = "defaultValue", targetNamespace = "")
        String defaultValue);

    /**
     * 
     * @param limit
     * @param contactId
     * @param token
     * @param offset
     * @return
     *     returns java.util.List<com.clarity.books.service.api.RecordInfo>
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "record", targetNamespace = "")
    @RequestWrapper(localName = "getRecordsForContact", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetRecordsForContact")
    @ResponseWrapper(localName = "getRecordsForContactResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetRecordsForContactResponse")
    public List<RecordInfo> getRecordsForContact(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "contactId", targetNamespace = "")
        Long contactId,
        @WebParam(name = "offset", targetNamespace = "")
        int offset,
        @WebParam(name = "limit", targetNamespace = "")
        int limit)
        throws NotAllowed_Exception
    ;

    /**
     * 
     * @param limit
     * @param token
     * @param businessId
     * @param offset
     * @param recordType
     * @return
     *     returns java.util.List<com.clarity.books.service.api.RecordInfo>
     * @throws ValidationFailed_Exception
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "record", targetNamespace = "")
    @RequestWrapper(localName = "getRecordsOfType", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetRecordsOfType")
    @ResponseWrapper(localName = "getRecordsOfTypeResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetRecordsOfTypeResponse")
    public List<RecordInfo> getRecordsOfType(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "businessId", targetNamespace = "")
        Long businessId,
        @WebParam(name = "recordType", targetNamespace = "")
        RecordType recordType,
        @WebParam(name = "offset", targetNamespace = "")
        int offset,
        @WebParam(name = "limit", targetNamespace = "")
        int limit)
        throws NotAllowed_Exception, ValidationFailed_Exception
    ;

    /**
     * 
     * @param siteName
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "title", targetNamespace = "")
    @RequestWrapper(localName = "getSiteTitle", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetSiteTitle")
    @ResponseWrapper(localName = "getSiteTitleResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetSiteTitleResponse")
    public String getSiteTitle(
        @WebParam(name = "siteName", targetNamespace = "")
        String siteName);

    /**
     * 
     * @param token
     * @param itemCategoryId
     * @return
     *     returns java.util.List<com.clarity.books.service.api.ItemCategoryInfo>
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "category", targetNamespace = "")
    @RequestWrapper(localName = "getSubcategories", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetSubcategories")
    @ResponseWrapper(localName = "getSubcategoriesResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetSubcategoriesResponse")
    public List<ItemCategoryInfo> getSubcategories(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "itemCategoryId", targetNamespace = "")
        Long itemCategoryId)
        throws NotAllowed_Exception
    ;

    /**
     * 
     * @param contactId
     * @param token
     * @return
     *     returns java.util.List<com.clarity.books.service.api.SubscriptionInfo>
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "subscription", targetNamespace = "")
    @RequestWrapper(localName = "getSubscriptionsWithContact", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetSubscriptionsWithContact")
    @ResponseWrapper(localName = "getSubscriptionsWithContactResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetSubscriptionsWithContactResponse")
    public List<SubscriptionInfo> getSubscriptionsWithContact(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "contactId", targetNamespace = "")
        Long contactId)
        throws NotAllowed_Exception
    ;

    /**
     * 
     * @param limit
     * @param token
     * @param planId
     * @param offset
     * @return
     *     returns java.util.List<com.clarity.books.service.api.SubscriptionInfo>
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "subscription", targetNamespace = "")
    @RequestWrapper(localName = "getSubscriptionsWithPlan", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetSubscriptionsWithPlan")
    @ResponseWrapper(localName = "getSubscriptionsWithPlanResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetSubscriptionsWithPlanResponse")
    public List<SubscriptionInfo> getSubscriptionsWithPlan(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "planId", targetNamespace = "")
        Long planId,
        @WebParam(name = "offset", targetNamespace = "")
        int offset,
        @WebParam(name = "limit", targetNamespace = "")
        int limit)
        throws NotAllowed_Exception
    ;

    /**
     * 
     * @param forDate
     * @param timeZone
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "timeString", targetNamespace = "")
    @RequestWrapper(localName = "getTimeInZone", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetTimeInZone")
    @ResponseWrapper(localName = "getTimeInZoneResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetTimeInZoneResponse")
    public String getTimeInZone(
        @WebParam(name = "timeZone", targetNamespace = "")
        String timeZone,
        @WebParam(name = "forDate", targetNamespace = "")
        XMLGregorianCalendar forDate);

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(name = "tz", targetNamespace = "")
    @RequestWrapper(localName = "getTimeZones", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetTimeZones")
    @ResponseWrapper(localName = "getTimeZonesResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetTimeZonesResponse")
    public List<String> getTimeZones();

    /**
     * 
     * @param accountId
     * @param excludedBankReconciliationId
     * @param maxDate
     * @param token
     * @return
     *     returns java.util.List<com.clarity.books.service.api.JournalEntryInfo>
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "journalEntry", targetNamespace = "")
    @RequestWrapper(localName = "getUnclearedTransactions", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetUnclearedTransactions")
    @ResponseWrapper(localName = "getUnclearedTransactionsResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetUnclearedTransactionsResponse")
    public List<JournalEntryInfo> getUnclearedTransactions(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "accountId", targetNamespace = "")
        Long accountId,
        @WebParam(name = "excludedBankReconciliationId", targetNamespace = "")
        Long excludedBankReconciliationId,
        @WebParam(name = "maxDate", targetNamespace = "")
        String maxDate)
        throws NotAllowed_Exception
    ;

    /**
     * 
     * @param taxInfoClass
     * @param token
     * @param businessId
     * @return
     *     returns com.clarity.books.service.api.VatTaxInfo
     * @throws BadArgument_Exception
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "vatTaxInfo", targetNamespace = "")
    @RequestWrapper(localName = "getVatTaxInfo", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetVatTaxInfo")
    @ResponseWrapper(localName = "getVatTaxInfoResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetVatTaxInfoResponse")
    public VatTaxInfo getVatTaxInfo(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "businessId", targetNamespace = "")
        Long businessId,
        @WebParam(name = "taxInfoClass", targetNamespace = "")
        String taxInfoClass)
        throws BadArgument_Exception, NotAllowed_Exception
    ;

    /**
     * 
     * @param token
     * @param businessId
     * @return
     *     returns java.util.List<com.clarity.books.service.api.ContactInfo>
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "contact", targetNamespace = "")
    @RequestWrapper(localName = "getVendors", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetVendors")
    @ResponseWrapper(localName = "getVendorsResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetVendorsResponse")
    public List<ContactInfo> getVendors(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "businessId", targetNamespace = "")
        Long businessId)
        throws NotAllowed_Exception
    ;

    /**
     * 
     * @param token
     * @param businessId
     * @return
     *     returns com.clarity.books.service.api.WorldPayInfo
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "worldPay", targetNamespace = "")
    @RequestWrapper(localName = "getWorldPay", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetWorldPay")
    @ResponseWrapper(localName = "getWorldPayResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetWorldPayResponse")
    public WorldPayInfo getWorldPay(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "businessId", targetNamespace = "")
        Long businessId)
        throws NotAllowed_Exception
    ;

    /**
     * 
     * @param token
     * @param accountType
     * @param businessId
     * @return
     *     returns java.lang.String
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "number", targetNamespace = "")
    @RequestWrapper(localName = "predictAccountNumber", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.PredictAccountNumber")
    @ResponseWrapper(localName = "predictAccountNumberResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.PredictAccountNumberResponse")
    public String predictAccountNumber(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "businessId", targetNamespace = "")
        Long businessId,
        @WebParam(name = "accountType", targetNamespace = "")
        AccountType accountType)
        throws NotAllowed_Exception
    ;

    /**
     * 
     * @param contactId
     * @param token
     * @param businessId
     * @param recordType
     * @return
     *     returns java.lang.String
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "number", targetNamespace = "")
    @RequestWrapper(localName = "predictRecordNumber", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.PredictRecordNumber")
    @ResponseWrapper(localName = "predictRecordNumberResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.PredictRecordNumberResponse")
    public String predictRecordNumber(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "businessId", targetNamespace = "")
        Long businessId,
        @WebParam(name = "recordType", targetNamespace = "")
        RecordType recordType,
        @WebParam(name = "contactId", targetNamespace = "")
        Long contactId)
        throws NotAllowed_Exception
    ;

    /**
     * 
     * @param limit
     * @param fileId
     * @param token
     * @param offset
     * @return
     *     returns byte[]
     * @throws InternalError_Exception
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "data", targetNamespace = "")
    @RequestWrapper(localName = "readAttachment", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.ReadAttachment")
    @ResponseWrapper(localName = "readAttachmentResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.ReadAttachmentResponse")
    public byte[] readAttachment(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "fileId", targetNamespace = "")
        Long fileId,
        @WebParam(name = "offset", targetNamespace = "")
        int offset,
        @WebParam(name = "limit", targetNamespace = "")
        int limit)
        throws InternalError_Exception, NotAllowed_Exception
    ;

    /**
     * 
     * @param locale
     * @param emailAddress
     * @param siteName
     * @throws NotFound_Exception
     * @throws BadArgument_Exception
     * @throws InternalError_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "requestEmailVerificationCode", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.RequestEmailVerificationCode")
    @ResponseWrapper(localName = "requestEmailVerificationCodeResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.RequestEmailVerificationCodeResponse")
    public void requestEmailVerificationCode(
        @WebParam(name = "emailAddress", targetNamespace = "")
        String emailAddress,
        @WebParam(name = "siteName", targetNamespace = "")
        String siteName,
        @WebParam(name = "locale", targetNamespace = "")
        String locale)
        throws BadArgument_Exception, InternalError_Exception, NotFound_Exception
    ;

    /**
     * 
     * @param locale
     * @param emailAddress
     * @param siteName
     * @throws NotFound_Exception
     * @throws BadArgument_Exception
     * @throws InternalError_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "requestPasswordReset", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.RequestPasswordReset")
    @ResponseWrapper(localName = "requestPasswordResetResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.RequestPasswordResetResponse")
    public void requestPasswordReset(
        @WebParam(name = "emailAddress", targetNamespace = "")
        String emailAddress,
        @WebParam(name = "siteName", targetNamespace = "")
        String siteName,
        @WebParam(name = "locale", targetNamespace = "")
        String locale)
        throws BadArgument_Exception, InternalError_Exception, NotFound_Exception
    ;

    /**
     * 
     * @param token
     * @param businessId
     * @throws ValidationFailed_Exception
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "retryContractPayment", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.RetryContractPayment")
    @ResponseWrapper(localName = "retryContractPaymentResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.RetryContractPaymentResponse")
    public void retryContractPayment(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "businessId", targetNamespace = "")
        Long businessId)
        throws NotAllowed_Exception, ValidationFailed_Exception
    ;

    /**
     * 
     * @param token
     * @param account
     * @throws ValidationFailed_Exception
     * @throws BadArgument_Exception
     * @throws AlreadyExists_Exception
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "saveAccount", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.SaveAccount")
    @ResponseWrapper(localName = "saveAccountResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.SaveAccountResponse")
    public void saveAccount(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "account", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<AccountInfo> account)
        throws AlreadyExists_Exception, BadArgument_Exception, NotAllowed_Exception, ValidationFailed_Exception
    ;

    /**
     * 
     * @param message
     * @param token
     * @throws ValidationFailed_Exception
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "saveAutomaticMessage", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.SaveAutomaticMessage")
    @ResponseWrapper(localName = "saveAutomaticMessageResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.SaveAutomaticMessageResponse")
    public void saveAutomaticMessage(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "message", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<AutomaticMessageInfo> message)
        throws NotAllowed_Exception, ValidationFailed_Exception
    ;

    /**
     * 
     * @param token
     * @param bankReconciliation
     * @throws ValidationFailed_Exception
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "saveBankReconciliation", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.SaveBankReconciliation")
    @ResponseWrapper(localName = "saveBankReconciliationResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.SaveBankReconciliationResponse")
    public void saveBankReconciliation(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "bankReconciliation", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<BankReconciliationInfo> bankReconciliation)
        throws NotAllowed_Exception, ValidationFailed_Exception
    ;

    /**
     * 
     * @param token
     * @param businessId
     * @param rti
     * @throws BadArgument_Exception
     * @throws ValidationFailed_Exception
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "saveBasicTaxInfo", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.SaveBasicTaxInfo")
    @ResponseWrapper(localName = "saveBasicTaxInfoResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.SaveBasicTaxInfoResponse")
    public void saveBasicTaxInfo(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "businessId", targetNamespace = "")
        Long businessId,
        @WebParam(name = "rti", targetNamespace = "")
        BasicTaxInfo rti)
        throws BadArgument_Exception, NotAllowed_Exception, ValidationFailed_Exception
    ;

    /**
     * 
     * @param token
     * @param business
     * @throws BadArgument_Exception
     * @throws ValidationFailed_Exception
     * @throws AlreadyExists_Exception
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "saveBusiness", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.SaveBusiness")
    @ResponseWrapper(localName = "saveBusinessResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.SaveBusinessResponse")
    public void saveBusiness(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "business", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<BusinessInfo> business)
        throws AlreadyExists_Exception, BadArgument_Exception, NotAllowed_Exception, ValidationFailed_Exception
    ;

    /**
     * 
     * @param token
     * @param businessId
     * @param rti
     * @throws ValidationFailed_Exception
     * @throws BadArgument_Exception
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "saveCanadianTaxInfo", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.SaveCanadianTaxInfo")
    @ResponseWrapper(localName = "saveCanadianTaxInfoResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.SaveCanadianTaxInfoResponse")
    public void saveCanadianTaxInfo(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "businessId", targetNamespace = "")
        Long businessId,
        @WebParam(name = "rti", targetNamespace = "")
        CanadianTaxInfo rti)
        throws BadArgument_Exception, NotAllowed_Exception, ValidationFailed_Exception
    ;

    /**
     * 
     * @param token
     * @param event
     * @return
     *     returns com.clarity.books.service.api.CollaborationEventInfo
     * @throws ValidationFailed_Exception
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "collaborationEvent", targetNamespace = "")
    @RequestWrapper(localName = "saveCollaborationEvent", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.SaveCollaborationEvent")
    @ResponseWrapper(localName = "saveCollaborationEventResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.SaveCollaborationEventResponse")
    public CollaborationEventInfo saveCollaborationEvent(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "event", targetNamespace = "")
        CollaborationEventInfo event)
        throws NotAllowed_Exception, ValidationFailed_Exception
    ;

    /**
     * 
     * @param token
     * @param contact
     * @throws ValidationFailed_Exception
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "saveContact", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.SaveContact")
    @ResponseWrapper(localName = "saveContactResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.SaveContactResponse")
    public void saveContact(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "contact", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<ContactInfo> contact)
        throws NotAllowed_Exception, ValidationFailed_Exception
    ;

    /**
     * 
     * @param emailSettings
     * @param token
     * @param businessId
     * @throws ValidationFailed_Exception
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "saveEmailSettings", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.SaveEmailSettings")
    @ResponseWrapper(localName = "saveEmailSettingsResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.SaveEmailSettingsResponse")
    public void saveEmailSettings(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "businessId", targetNamespace = "")
        Long businessId,
        @WebParam(name = "emailSettings", targetNamespace = "")
        EmailSettingsInfo emailSettings)
        throws NotAllowed_Exception, ValidationFailed_Exception
    ;

    /**
     * 
     * @param record
     * @param token
     * @throws ValidationFailed_Exception
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "saveRecord", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.SaveRecord")
    @ResponseWrapper(localName = "saveRecordResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.SaveRecordResponse")
    public void saveRecord(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "record", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<RecordInfo> record)
        throws NotAllowed_Exception, ValidationFailed_Exception
    ;

    /**
     * 
     * @param subscription
     * @param token
     * @throws ValidationFailed_Exception
     * @throws ConcurrentChangeException_Exception
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "saveSubscription", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.SaveSubscription")
    @ResponseWrapper(localName = "saveSubscriptionResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.SaveSubscriptionResponse")
    public void saveSubscription(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "subscription", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<SubscriptionInfo> subscription)
        throws ConcurrentChangeException_Exception, NotAllowed_Exception, ValidationFailed_Exception
    ;

    /**
     * 
     * @param plan
     * @param token
     * @throws ValidationFailed_Exception
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "saveSubscriptionPlan", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.SaveSubscriptionPlan")
    @ResponseWrapper(localName = "saveSubscriptionPlanResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.SaveSubscriptionPlanResponse")
    public void saveSubscriptionPlan(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "plan", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<SubscriptionPlanInfo> plan)
        throws NotAllowed_Exception, ValidationFailed_Exception
    ;

    /**
     * 
     * @param tax
     * @param token
     * @throws ValidationFailed_Exception
     * @throws ConcurrentChangeException_Exception
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "saveTax", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.SaveTax")
    @ResponseWrapper(localName = "saveTaxResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.SaveTaxResponse")
    public void saveTax(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "tax", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<TaxInfo> tax)
        throws ConcurrentChangeException_Exception, NotAllowed_Exception, ValidationFailed_Exception
    ;

    /**
     * 
     * @param taxCodes
     * @param token
     * @param businessId
     * @return
     *     returns java.util.List<com.clarity.books.service.api.TaxCodeInfo>
     * @throws ValidationFailed_Exception
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "taxCode", targetNamespace = "")
    @RequestWrapper(localName = "saveTaxCodes", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.SaveTaxCodes")
    @ResponseWrapper(localName = "saveTaxCodesResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.SaveTaxCodesResponse")
    public List<TaxCodeInfo> saveTaxCodes(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "businessId", targetNamespace = "")
        Long businessId,
        @WebParam(name = "taxCodes", targetNamespace = "")
        List<TaxCodeInfo> taxCodes)
        throws NotAllowed_Exception, ValidationFailed_Exception
    ;

    /**
     * 
     * @param token
     * @param user
     * @throws ValidationFailed_Exception
     * @throws ConflictsWithAnother_Exception
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "saveUser", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.SaveUser")
    @ResponseWrapper(localName = "saveUserResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.SaveUserResponse")
    public void saveUser(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "user", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<UserInfo> user)
        throws ConflictsWithAnother_Exception, NotAllowed_Exception, ValidationFailed_Exception
    ;

    /**
     * 
     * @param token
     * @param businessId
     * @param rti
     * @throws ValidationFailed_Exception
     * @throws BadArgument_Exception
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "saveVatTaxInfo", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.SaveVatTaxInfo")
    @ResponseWrapper(localName = "saveVatTaxInfoResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.SaveVatTaxInfoResponse")
    public void saveVatTaxInfo(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "businessId", targetNamespace = "")
        Long businessId,
        @WebParam(name = "rti", targetNamespace = "")
        VatTaxInfo rti)
        throws BadArgument_Exception, NotAllowed_Exception, ValidationFailed_Exception
    ;

    /**
     * 
     * @param token
     * @param worldPay
     * @throws ValidationFailed_Exception
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "saveWorldPay", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.SaveWorldPay")
    @ResponseWrapper(localName = "saveWorldPayResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.SaveWorldPayResponse")
    public void saveWorldPay(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "worldPay", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<WorldPayInfo> worldPay)
        throws NotAllowed_Exception, ValidationFailed_Exception
    ;

    /**
     * 
     * @param token
     * @param businessId
     * @param toAddress
     * @throws ValidationFailed_Exception
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "sendTestEmail", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.SendTestEmail")
    @ResponseWrapper(localName = "sendTestEmailResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.SendTestEmailResponse")
    public void sendTestEmail(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "businessId", targetNamespace = "")
        Long businessId,
        @WebParam(name = "toAddress", targetNamespace = "")
        String toAddress)
        throws NotAllowed_Exception, ValidationFailed_Exception
    ;

    /**
     * 
     * @param paymentAccountId
     * @param expenseAccountId
     * @param contactId
     * @param token
     * @param businessId
     * @throws NotFound_Exception
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "setContractLinks", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.SetContractLinks")
    @ResponseWrapper(localName = "setContractLinksResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.SetContractLinksResponse")
    public void setContractLinks(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "businessId", targetNamespace = "")
        Long businessId,
        @WebParam(name = "expenseAccountId", targetNamespace = "")
        Long expenseAccountId,
        @WebParam(name = "paymentAccountId", targetNamespace = "")
        Long paymentAccountId,
        @WebParam(name = "contactId", targetNamespace = "")
        Long contactId)
        throws NotAllowed_Exception, NotFound_Exception
    ;

    /**
     * 
     * @param token
     * @param planId
     * @param businessId
     * @throws NotFound_Exception
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "setContractPlan", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.SetContractPlan")
    @ResponseWrapper(localName = "setContractPlanResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.SetContractPlanResponse")
    public void setContractPlan(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "businessId", targetNamespace = "")
        Long businessId,
        @WebParam(name = "planId", targetNamespace = "")
        Long planId)
        throws NotAllowed_Exception, NotFound_Exception
    ;

    /**
     * 
     * @param contactInformation
     * @param locale
     * @param password
     * @param siteName
     * @throws ValidationFailed_Exception
     * @throws BadArgument_Exception
     * @throws AlreadyExists_Exception
     * @throws InternalError_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "signUp", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.SignUp")
    @ResponseWrapper(localName = "signUpResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.SignUpResponse")
    public void signUp(
        @WebParam(name = "contactInformation", targetNamespace = "")
        ContactInformationInfo contactInformation,
        @WebParam(name = "password", targetNamespace = "")
        String password,
        @WebParam(name = "siteName", targetNamespace = "")
        String siteName,
        @WebParam(name = "locale", targetNamespace = "")
        String locale)
        throws AlreadyExists_Exception, BadArgument_Exception, InternalError_Exception, ValidationFailed_Exception
    ;

    /**
     * 
     * @param publicAccess
     * @param complete
     * @param token
     * @param initialContent
     * @param filename
     * @param contentType
     * @param businessId
     * @param characterEncoding
     * @return
     *     returns com.clarity.books.service.api.AttachmentInfo
     * @throws InternalError_Exception
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "file", targetNamespace = "")
    @RequestWrapper(localName = "storeFile", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.StoreFile")
    @ResponseWrapper(localName = "storeFileResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.StoreFileResponse")
    public AttachmentInfo storeFile(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "businessId", targetNamespace = "")
        Long businessId,
        @WebParam(name = "filename", targetNamespace = "")
        String filename,
        @WebParam(name = "contentType", targetNamespace = "")
        String contentType,
        @WebParam(name = "characterEncoding", targetNamespace = "")
        String characterEncoding,
        @WebParam(name = "initialContent", targetNamespace = "")
        byte[] initialContent,
        @WebParam(name = "complete", targetNamespace = "")
        boolean complete,
        @WebParam(name = "publicAccess", targetNamespace = "")
        boolean publicAccess)
        throws InternalError_Exception, NotAllowed_Exception
    ;

    /**
     * 
     * @param body
     * @param token
     * @param subject
     * @throws ValidationFailed_Exception
     * @throws BadArgument_Exception
     * @throws InternalError_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "submitFeedback", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.SubmitFeedback")
    @ResponseWrapper(localName = "submitFeedbackResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.SubmitFeedbackResponse")
    public void submitFeedback(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "subject", targetNamespace = "")
        String subject,
        @WebParam(name = "body", targetNamespace = "")
        String body)
        throws BadArgument_Exception, InternalError_Exception, ValidationFailed_Exception
    ;

    /**
     * 
     * @param toEmail
     * @param token
     * @param messageId
     * @throws ValidationFailed_Exception
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "testAutomaticMessage", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.TestAutomaticMessage")
    @ResponseWrapper(localName = "testAutomaticMessageResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.TestAutomaticMessageResponse")
    public void testAutomaticMessage(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "messageId", targetNamespace = "")
        Long messageId,
        @WebParam(name = "toEmail", targetNamespace = "")
        String toEmail)
        throws NotAllowed_Exception, ValidationFailed_Exception
    ;

    /**
     * 
     * @param currencyCode
     * @param token
     * @param businessId
     * @return
     *     returns java.util.List<com.clarity.books.service.api.AvailablePaymentMethodInfo>
     * @throws BadArgument_Exception
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAvailablePaymentMethods", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetAvailablePaymentMethods")
    @ResponseWrapper(localName = "getAvailablePaymentMethodsResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetAvailablePaymentMethodsResponse")
    public List<AvailablePaymentMethodInfo> getAvailablePaymentMethods(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "businessId", targetNamespace = "")
        Long businessId,
        @WebParam(name = "currencyCode", targetNamespace = "")
        String currencyCode)
        throws BadArgument_Exception, NotAllowed_Exception
    ;

    /**
     * 
     * @param returnUrl
     * @param returnLink
     * @param token
     * @param businessId
     * @return
     *     returns java.util.List<com.clarity.books.service.api.PaymentSetupInfo>
     * @throws NotAllowed_Exception
     */
    @WebMethod
    @WebResult(name = "paymentSetupInfo", targetNamespace = "")
    @RequestWrapper(localName = "getPaymentSetupInfoForBusiness", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetPaymentSetupInfoForBusiness")
    @ResponseWrapper(localName = "getPaymentSetupInfoForBusinessResponse", targetNamespace = "http://api.service.books/", className = "com.clarity.books.service.api.GetPaymentSetupInfoForBusinessResponse")
    public List<PaymentSetupInfo> getPaymentSetupInfoForBusiness(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "businessId", targetNamespace = "")
        Long businessId,
        @WebParam(name = "returnLink", targetNamespace = "")
        String returnLink,
        @WebParam(name = "returnUrl", targetNamespace = "")
        String returnUrl)
        throws NotAllowed_Exception
    ;

}
