
package com.sforce.soap.enterprise;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import com.sforce.soap.enterprise.sobject.SObject;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.1-hudson-2079-RC1
 * Generated source version: 2.1
 * 
 */
@WebService(name = "Soap", targetNamespace = "urn:enterprise.soap.sforce.com")
@XmlSeeAlso({
    com.sforce.soap.enterprise.fault.ObjectFactory.class,
    com.sforce.soap.enterprise.ObjectFactory.class,
    com.sforce.soap.enterprise.sobject.ObjectFactory.class
})
public interface Soap {


    /**
     * Login to the Salesforce.com SOAP Api
     * 
     * @param password
     * @param username
     * @return
     *     returns com.sforce.soap.enterprise.LoginResult
     * @throws UnexpectedErrorFault
     * @throws LoginFault
     * @throws InvalidIdFault
     */
    @WebMethod
    @WebResult(name = "result", targetNamespace = "urn:enterprise.soap.sforce.com")
    @RequestWrapper(localName = "login", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.Login")
    @ResponseWrapper(localName = "loginResponse", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.LoginResponse")
    public LoginResult login(
        @WebParam(name = "username", targetNamespace = "urn:enterprise.soap.sforce.com")
        String username,
        @WebParam(name = "password", targetNamespace = "urn:enterprise.soap.sforce.com")
        String password)
        throws InvalidIdFault, LoginFault, UnexpectedErrorFault
    ;

    /**
     * Describe an sObject
     * 
     * @param sObjectType
     * @return
     *     returns com.sforce.soap.enterprise.DescribeSObjectResult
     * @throws InvalidSObjectFault
     * @throws UnexpectedErrorFault
     */
    @WebMethod
    @WebResult(name = "result", targetNamespace = "urn:enterprise.soap.sforce.com")
    @RequestWrapper(localName = "describeSObject", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.DescribeSObject")
    @ResponseWrapper(localName = "describeSObjectResponse", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.DescribeSObjectResponse")
    public DescribeSObjectResult describeSObject(
        @WebParam(name = "sObjectType", targetNamespace = "urn:enterprise.soap.sforce.com")
        String sObjectType)
        throws InvalidSObjectFault, UnexpectedErrorFault
    ;

    /**
     * Describe a number sObjects
     * 
     * @param sObjectType
     * @return
     *     returns java.util.List<com.sforce.soap.enterprise.DescribeSObjectResult>
     * @throws InvalidSObjectFault
     * @throws UnexpectedErrorFault
     */
    @WebMethod
    @WebResult(name = "result", targetNamespace = "urn:enterprise.soap.sforce.com")
    @RequestWrapper(localName = "describeSObjects", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.DescribeSObjects")
    @ResponseWrapper(localName = "describeSObjectsResponse", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.DescribeSObjectsResponse")
    public List<DescribeSObjectResult> describeSObjects(
        @WebParam(name = "sObjectType", targetNamespace = "urn:enterprise.soap.sforce.com")
        List<String> sObjectType)
        throws InvalidSObjectFault, UnexpectedErrorFault
    ;

    /**
     * Describe the Global state
     * 
     * @return
     *     returns com.sforce.soap.enterprise.DescribeGlobalResult
     * @throws UnexpectedErrorFault
     */
    @WebMethod
    @WebResult(name = "result", targetNamespace = "urn:enterprise.soap.sforce.com")
    @RequestWrapper(localName = "describeGlobal", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.DescribeGlobal")
    @ResponseWrapper(localName = "describeGlobalResponse", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.DescribeGlobalResponse")
    public DescribeGlobalResult describeGlobal()
        throws UnexpectedErrorFault
    ;

    /**
     * Describe the layout of an sObject
     * 
     * @param sObjectType
     * @param recordTypeIds
     * @return
     *     returns com.sforce.soap.enterprise.DescribeLayoutResult
     * @throws InvalidSObjectFault
     * @throws UnexpectedErrorFault
     */
    @WebMethod
    @WebResult(name = "result", targetNamespace = "urn:enterprise.soap.sforce.com")
    @RequestWrapper(localName = "describeLayout", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.DescribeLayout")
    @ResponseWrapper(localName = "describeLayoutResponse", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.DescribeLayoutResponse")
    public DescribeLayoutResult describeLayout(
        @WebParam(name = "sObjectType", targetNamespace = "urn:enterprise.soap.sforce.com")
        String sObjectType,
        @WebParam(name = "recordTypeIds", targetNamespace = "urn:enterprise.soap.sforce.com")
        List<String> recordTypeIds)
        throws InvalidSObjectFault, UnexpectedErrorFault
    ;

    /**
     * Describe the layout of the SoftPhone
     * 
     * @return
     *     returns com.sforce.soap.enterprise.DescribeSoftphoneLayoutResult
     * @throws UnexpectedErrorFault
     */
    @WebMethod
    @WebResult(name = "result", targetNamespace = "urn:enterprise.soap.sforce.com")
    @RequestWrapper(localName = "describeSoftphoneLayout", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.DescribeSoftphoneLayout")
    @ResponseWrapper(localName = "describeSoftphoneLayoutResponse", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.DescribeSoftphoneLayoutResponse")
    public DescribeSoftphoneLayoutResult describeSoftphoneLayout()
        throws UnexpectedErrorFault
    ;

    /**
     * Describe the tabs that appear on a users page
     * 
     * @return
     *     returns java.util.List<com.sforce.soap.enterprise.DescribeTabSetResult>
     * @throws UnexpectedErrorFault
     */
    @WebMethod
    @WebResult(name = "result", targetNamespace = "urn:enterprise.soap.sforce.com")
    @RequestWrapper(localName = "describeTabs", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.DescribeTabs")
    @ResponseWrapper(localName = "describeTabsResponse", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.DescribeTabsResponse")
    public List<DescribeTabSetResult> describeTabs()
        throws UnexpectedErrorFault
    ;

    /**
     * Create a set of new sObjects
     * 
     * @param sObjects
     * @return
     *     returns java.util.List<com.sforce.soap.enterprise.SaveResult>
     * @throws InvalidSObjectFault
     * @throws UnexpectedErrorFault
     * @throws InvalidIdFault
     */
    @WebMethod
    @WebResult(name = "result", targetNamespace = "urn:enterprise.soap.sforce.com")
    @RequestWrapper(localName = "create", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.Create")
    @ResponseWrapper(localName = "createResponse", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.CreateResponse")
    public List<SaveResult> create(
        @WebParam(name = "sObjects", targetNamespace = "urn:enterprise.soap.sforce.com")
        List<SObject> sObjects)
        throws InvalidIdFault, InvalidSObjectFault, UnexpectedErrorFault
    ;

    /**
     * Update a set of sObjects
     * 
     * @param sObjects
     * @return
     *     returns java.util.List<com.sforce.soap.enterprise.SaveResult>
     * @throws InvalidSObjectFault
     * @throws UnexpectedErrorFault
     * @throws InvalidIdFault
     */
    @WebMethod
    @WebResult(name = "result", targetNamespace = "urn:enterprise.soap.sforce.com")
    @RequestWrapper(localName = "update", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.Update")
    @ResponseWrapper(localName = "updateResponse", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.UpdateResponse")
    public List<SaveResult> update(
        @WebParam(name = "sObjects", targetNamespace = "urn:enterprise.soap.sforce.com")
        List<SObject> sObjects)
        throws InvalidIdFault, InvalidSObjectFault, UnexpectedErrorFault
    ;

    /**
     * Update or insert a set of sObjects based on object id
     * 
     * @param externalIDFieldName
     * @param sObjects
     * @return
     *     returns java.util.List<com.sforce.soap.enterprise.UpsertResult>
     * @throws InvalidSObjectFault
     * @throws UnexpectedErrorFault
     * @throws InvalidFieldFault
     * @throws InvalidIdFault
     */
    @WebMethod
    @WebResult(name = "result", targetNamespace = "urn:enterprise.soap.sforce.com")
    @RequestWrapper(localName = "upsert", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.Upsert")
    @ResponseWrapper(localName = "upsertResponse", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.UpsertResponse")
    public List<UpsertResult> upsert(
        @WebParam(name = "externalIDFieldName", targetNamespace = "urn:enterprise.soap.sforce.com")
        String externalIDFieldName,
        @WebParam(name = "sObjects", targetNamespace = "urn:enterprise.soap.sforce.com")
        List<SObject> sObjects)
        throws InvalidFieldFault, InvalidIdFault, InvalidSObjectFault, UnexpectedErrorFault
    ;

    /**
     * Merge and update a set of sObjects based on object id
     * 
     * @param request
     * @return
     *     returns java.util.List<com.sforce.soap.enterprise.MergeResult>
     * @throws InvalidSObjectFault
     * @throws UnexpectedErrorFault
     * @throws InvalidIdFault
     */
    @WebMethod
    @WebResult(name = "result", targetNamespace = "urn:enterprise.soap.sforce.com")
    @RequestWrapper(localName = "merge", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.Merge")
    @ResponseWrapper(localName = "mergeResponse", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.MergeResponse")
    public List<MergeResult> merge(
        @WebParam(name = "request", targetNamespace = "urn:enterprise.soap.sforce.com")
        List<MergeRequest> request)
        throws InvalidIdFault, InvalidSObjectFault, UnexpectedErrorFault
    ;

    /**
     * Delete a set of sObjects
     * 
     * @param ids
     * @return
     *     returns java.util.List<com.sforce.soap.enterprise.DeleteResult>
     * @throws UnexpectedErrorFault
     */
    @WebMethod
    @WebResult(name = "result", targetNamespace = "urn:enterprise.soap.sforce.com")
    @RequestWrapper(localName = "delete", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.Delete")
    @ResponseWrapper(localName = "deleteResponse", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.DeleteResponse")
    public List<DeleteResult> delete(
        @WebParam(name = "ids", targetNamespace = "urn:enterprise.soap.sforce.com")
        List<String> ids)
        throws UnexpectedErrorFault
    ;

    /**
     * Undelete a set of sObjects
     * 
     * @param ids
     * @return
     *     returns java.util.List<com.sforce.soap.enterprise.UndeleteResult>
     * @throws UnexpectedErrorFault
     */
    @WebMethod
    @WebResult(name = "result", targetNamespace = "urn:enterprise.soap.sforce.com")
    @RequestWrapper(localName = "undelete", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.Undelete")
    @ResponseWrapper(localName = "undeleteResponse", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.UndeleteResponse")
    public List<UndeleteResult> undelete(
        @WebParam(name = "ids", targetNamespace = "urn:enterprise.soap.sforce.com")
        List<String> ids)
        throws UnexpectedErrorFault
    ;

    /**
     * Get a set of sObjects
     * 
     * @param sObjectType
     * @param fieldList
     * @param ids
     * @return
     *     returns java.util.List<com.sforce.soap.enterprise.sobject.SObject>
     * @throws InvalidSObjectFault
     * @throws UnexpectedErrorFault
     * @throws InvalidFieldFault
     */
    @WebMethod
    @WebResult(name = "result", targetNamespace = "urn:enterprise.soap.sforce.com")
    @RequestWrapper(localName = "retrieve", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.Retrieve")
    @ResponseWrapper(localName = "retrieveResponse", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.RetrieveResponse")
    public List<SObject> retrieve(
        @WebParam(name = "fieldList", targetNamespace = "urn:enterprise.soap.sforce.com")
        String fieldList,
        @WebParam(name = "sObjectType", targetNamespace = "urn:enterprise.soap.sforce.com")
        String sObjectType,
        @WebParam(name = "ids", targetNamespace = "urn:enterprise.soap.sforce.com")
        List<String> ids)
        throws InvalidFieldFault, InvalidSObjectFault, UnexpectedErrorFault
    ;

    /**
     * Submit an entity to a workflow process or process a workitem
     * 
     * @param actions
     * @return
     *     returns java.util.List<com.sforce.soap.enterprise.ProcessResult>
     * @throws UnexpectedErrorFault
     */
    @WebMethod
    @WebResult(name = "result", targetNamespace = "urn:enterprise.soap.sforce.com")
    @RequestWrapper(localName = "process", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.Process")
    @ResponseWrapper(localName = "processResponse", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.ProcessResponse")
    public List<ProcessResult> process(
        @WebParam(name = "actions", targetNamespace = "urn:enterprise.soap.sforce.com")
        List<ProcessRequest> actions)
        throws UnexpectedErrorFault
    ;

    /**
     * convert a set of leads
     * 
     * @param leadConverts
     * @return
     *     returns java.util.List<com.sforce.soap.enterprise.LeadConvertResult>
     * @throws UnexpectedErrorFault
     */
    @WebMethod
    @WebResult(name = "result", targetNamespace = "urn:enterprise.soap.sforce.com")
    @RequestWrapper(localName = "convertLead", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.ConvertLead")
    @ResponseWrapper(localName = "convertLeadResponse", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.ConvertLeadResponse")
    public List<LeadConvertResult> convertLead(
        @WebParam(name = "leadConverts", targetNamespace = "urn:enterprise.soap.sforce.com")
        List<LeadConvert> leadConverts)
        throws UnexpectedErrorFault
    ;

    /**
     * Get the IDs for deleted sObjects
     * 
     * @param sObjectType
     * @param startDate
     * @param endDate
     * @return
     *     returns com.sforce.soap.enterprise.GetDeletedResult
     * @throws InvalidSObjectFault
     * @throws UnexpectedErrorFault
     */
    @WebMethod
    @WebResult(name = "result", targetNamespace = "urn:enterprise.soap.sforce.com")
    @RequestWrapper(localName = "getDeleted", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.GetDeleted")
    @ResponseWrapper(localName = "getDeletedResponse", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.GetDeletedResponse")
    public GetDeletedResult getDeleted(
        @WebParam(name = "sObjectType", targetNamespace = "urn:enterprise.soap.sforce.com")
        String sObjectType,
        @WebParam(name = "startDate", targetNamespace = "urn:enterprise.soap.sforce.com")
        XMLGregorianCalendar startDate,
        @WebParam(name = "endDate", targetNamespace = "urn:enterprise.soap.sforce.com")
        XMLGregorianCalendar endDate)
        throws InvalidSObjectFault, UnexpectedErrorFault
    ;

    /**
     * Get the IDs for updated sObjects
     * 
     * @param sObjectType
     * @param startDate
     * @param endDate
     * @return
     *     returns com.sforce.soap.enterprise.GetUpdatedResult
     * @throws InvalidSObjectFault
     * @throws UnexpectedErrorFault
     */
    @WebMethod
    @WebResult(name = "result", targetNamespace = "urn:enterprise.soap.sforce.com")
    @RequestWrapper(localName = "getUpdated", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.GetUpdated")
    @ResponseWrapper(localName = "getUpdatedResponse", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.GetUpdatedResponse")
    public GetUpdatedResult getUpdated(
        @WebParam(name = "sObjectType", targetNamespace = "urn:enterprise.soap.sforce.com")
        String sObjectType,
        @WebParam(name = "startDate", targetNamespace = "urn:enterprise.soap.sforce.com")
        XMLGregorianCalendar startDate,
        @WebParam(name = "endDate", targetNamespace = "urn:enterprise.soap.sforce.com")
        XMLGregorianCalendar endDate)
        throws InvalidSObjectFault, UnexpectedErrorFault
    ;

    /**
     * Create a Query Cursor
     * 
     * @param queryString
     * @return
     *     returns com.sforce.soap.enterprise.QueryResult
     * @throws InvalidSObjectFault
     * @throws UnexpectedErrorFault
     * @throws InvalidFieldFault
     * @throws MalformedQueryFault
     */
    @WebMethod
    @WebResult(name = "result", targetNamespace = "urn:enterprise.soap.sforce.com")
    @RequestWrapper(localName = "query", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.Query")
    @ResponseWrapper(localName = "queryResponse", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.QueryResponse")
    public QueryResult query(
        @WebParam(name = "queryString", targetNamespace = "urn:enterprise.soap.sforce.com")
        String queryString)
        throws InvalidFieldFault, InvalidSObjectFault, MalformedQueryFault, UnexpectedErrorFault
    ;

    /**
     * Create a Query Cursor, including deleted sObjects
     * 
     * @param queryString
     * @return
     *     returns com.sforce.soap.enterprise.QueryResult
     * @throws InvalidSObjectFault
     * @throws UnexpectedErrorFault
     * @throws InvalidFieldFault
     * @throws MalformedQueryFault
     */
    @WebMethod
    @WebResult(name = "result", targetNamespace = "urn:enterprise.soap.sforce.com")
    @RequestWrapper(localName = "queryAll", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.QueryAll")
    @ResponseWrapper(localName = "queryAllResponse", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.QueryAllResponse")
    public QueryResult queryAll(
        @WebParam(name = "queryString", targetNamespace = "urn:enterprise.soap.sforce.com")
        String queryString)
        throws InvalidFieldFault, InvalidSObjectFault, MalformedQueryFault, UnexpectedErrorFault
    ;

    /**
     * Gets the next batch of sObjects from a query
     * 
     * @param queryLocator
     * @return
     *     returns com.sforce.soap.enterprise.QueryResult
     * @throws UnexpectedErrorFault
     * @throws InvalidQueryLocatorFault
     */
    @WebMethod
    @WebResult(name = "result", targetNamespace = "urn:enterprise.soap.sforce.com")
    @RequestWrapper(localName = "queryMore", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.QueryMore")
    @ResponseWrapper(localName = "queryMoreResponse", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.QueryMoreResponse")
    public QueryResult queryMore(
        @WebParam(name = "queryLocator", targetNamespace = "urn:enterprise.soap.sforce.com")
        String queryLocator)
        throws InvalidQueryLocatorFault, UnexpectedErrorFault
    ;

    /**
     * Search for sObjects
     * 
     * @param searchString
     * @return
     *     returns com.sforce.soap.enterprise.SearchResult
     * @throws InvalidSObjectFault
     * @throws MalformedSearchFault
     * @throws UnexpectedErrorFault
     * @throws InvalidFieldFault
     */
    @WebMethod
    @WebResult(name = "result", targetNamespace = "urn:enterprise.soap.sforce.com")
    @RequestWrapper(localName = "search", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.Search")
    @ResponseWrapper(localName = "searchResponse", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.SearchResponse")
    public SearchResult search(
        @WebParam(name = "searchString", targetNamespace = "urn:enterprise.soap.sforce.com")
        String searchString)
        throws InvalidFieldFault, InvalidSObjectFault, MalformedSearchFault, UnexpectedErrorFault
    ;

    /**
     * Gets server timestamp
     * 
     * @return
     *     returns com.sforce.soap.enterprise.GetServerTimestampResult
     * @throws UnexpectedErrorFault
     */
    @WebMethod
    @WebResult(name = "result", targetNamespace = "urn:enterprise.soap.sforce.com")
    @RequestWrapper(localName = "getServerTimestamp", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.GetServerTimestamp")
    @ResponseWrapper(localName = "getServerTimestampResponse", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.GetServerTimestampResponse")
    public GetServerTimestampResult getServerTimestamp()
        throws UnexpectedErrorFault
    ;

    /**
     * Set a user's password
     * 
     * @param password
     * @param userId
     * @return
     *     returns com.sforce.soap.enterprise.SetPasswordResult
     * @throws InvalidNewPasswordFault
     * @throws UnexpectedErrorFault
     * @throws InvalidIdFault
     */
    @WebMethod
    @WebResult(name = "result", targetNamespace = "urn:enterprise.soap.sforce.com")
    @RequestWrapper(localName = "setPassword", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.SetPassword")
    @ResponseWrapper(localName = "setPasswordResponse", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.SetPasswordResponse")
    public SetPasswordResult setPassword(
        @WebParam(name = "userId", targetNamespace = "urn:enterprise.soap.sforce.com")
        String userId,
        @WebParam(name = "password", targetNamespace = "urn:enterprise.soap.sforce.com")
        String password)
        throws InvalidIdFault, InvalidNewPasswordFault, UnexpectedErrorFault
    ;

    /**
     * Reset a user's password
     * 
     * @param userId
     * @return
     *     returns com.sforce.soap.enterprise.ResetPasswordResult
     * @throws UnexpectedErrorFault
     * @throws InvalidIdFault
     */
    @WebMethod
    @WebResult(name = "result", targetNamespace = "urn:enterprise.soap.sforce.com")
    @RequestWrapper(localName = "resetPassword", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.ResetPassword")
    @ResponseWrapper(localName = "resetPasswordResponse", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.ResetPasswordResponse")
    public ResetPasswordResult resetPassword(
        @WebParam(name = "userId", targetNamespace = "urn:enterprise.soap.sforce.com")
        String userId)
        throws InvalidIdFault, UnexpectedErrorFault
    ;

    /**
     * Returns standard information relevant to the current user
     * 
     * @return
     *     returns com.sforce.soap.enterprise.GetUserInfoResult
     * @throws UnexpectedErrorFault
     */
    @WebMethod
    @WebResult(name = "result", targetNamespace = "urn:enterprise.soap.sforce.com")
    @RequestWrapper(localName = "getUserInfo", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.GetUserInfo")
    @ResponseWrapper(localName = "getUserInfoResponse", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.GetUserInfoResponse")
    public GetUserInfoResult getUserInfo()
        throws UnexpectedErrorFault
    ;

}
