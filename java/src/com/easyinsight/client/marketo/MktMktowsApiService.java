
/*
 * 
 */

package com.easyinsight.client.marketo;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by Apache CXF 2.1.1
 * Wed Mar 17 14:42:09 MDT 2010
 * Generated source version: 2.1.1
 * 
 */
 
/*
 * 
 */

@WebServiceClient(name = "MktMktowsApiService", 
                  wsdlLocation = "https://na-d.marketo.com/soap/mktows/1_2?WSDL",
                  targetNamespace = "http://www.marketo.com/mktows/") 
public class MktMktowsApiService extends Service {

    public final static URL WSDL_LOCATION;
    public final static QName SERVICE = new QName("http://www.marketo.com/mktows/", "MktMktowsApiService");
    public final static QName MktowsApiSoapPort = new QName("http://www.marketo.com/mktows/", "MktowsApiSoapPort");
    static {
        URL url = null;
        try {
            url = new URL("https://na-d.marketo.com/soap/mktows/1_2?WSDL");
        } catch (MalformedURLException e) {
            System.err.println("Can not initialize the default wsdl from file:/C:/Users/abaldwin/Documents/EasyInsight/code/java/src/com/easyinsight/client/marketo/1_2.wsdl");
            // e.printStackTrace();
        }
        WSDL_LOCATION = url;
    }

    public MktMktowsApiService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public MktMktowsApiService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public MktMktowsApiService() {
        super(WSDL_LOCATION, SERVICE);
    }

    /**
     * 
     * @return
     *     returns MktowsPort
     */
    @WebEndpoint(name = "MktowsApiSoapPort")
    public MktowsPort getMktowsApiSoapPort() {
        return super.getPort(MktowsApiSoapPort, MktowsPort.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns MktowsPort
     */
    @WebEndpoint(name = "MktowsApiSoapPort")
    public MktowsPort getMktowsApiSoapPort(WebServiceFeature... features) {
        return super.getPort(MktowsApiSoapPort, MktowsPort.class, features);
    }

}
