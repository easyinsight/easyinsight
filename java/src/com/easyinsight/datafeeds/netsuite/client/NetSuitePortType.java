
package com.easyinsight.datafeeds.netsuite.client;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebService(name = "NetSuitePortType", targetNamespace = "urn:platform_2014_1.webservices.netsuite.com")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface NetSuitePortType {


    /**
     * 
     * @param passport
     * @return
     *     returns com.easyinsight.datafeeds.netsuite.client.SessionResponse
     * @throws InvalidCredentialsFault_Exception
     * @throws InvalidVersionFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     * @throws InsufficientPermissionFault_Exception
     * @throws InvalidAccountFault_Exception
     */
    @WebMethod(action = "login")
    @WebResult(name = "sessionResponse", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "login", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.LoginRequest")
    @ResponseWrapper(localName = "loginResponse", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.LoginResponse")
    public SessionResponse login(
        @WebParam(name = "passport", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com")
        Passport passport)
        throws ExceededRequestLimitFault_Exception, InsufficientPermissionFault_Exception, InvalidAccountFault_Exception, InvalidCredentialsFault_Exception, InvalidVersionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param ssoPassport
     * @return
     *     returns com.easyinsight.datafeeds.netsuite.client.SessionResponse
     * @throws InvalidCredentialsFault_Exception
     * @throws InvalidVersionFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     * @throws InsufficientPermissionFault_Exception
     * @throws InvalidAccountFault_Exception
     */
    @WebMethod(action = "ssoLogin")
    @WebResult(name = "sessionResponse", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "ssoLogin", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.SsoLoginRequest")
    @ResponseWrapper(localName = "ssoLoginResponse", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.SsoLoginResponse")
    public SessionResponse ssoLogin(
        @WebParam(name = "ssoPassport", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com")
        SsoPassport ssoPassport)
        throws ExceededRequestLimitFault_Exception, InsufficientPermissionFault_Exception, InvalidAccountFault_Exception, InvalidCredentialsFault_Exception, InvalidVersionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param ssoCredentials
     * @return
     *     returns com.easyinsight.datafeeds.netsuite.client.SessionResponse
     * @throws InvalidCredentialsFault_Exception
     * @throws InvalidVersionFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     * @throws InsufficientPermissionFault_Exception
     * @throws InvalidAccountFault_Exception
     */
    @WebMethod(action = "mapSso")
    @WebResult(name = "sessionResponse", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "mapSso", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.MapSsoRequest")
    @ResponseWrapper(localName = "mapSsoResponse", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.MapSsoResponse")
    public SessionResponse mapSso(
        @WebParam(name = "ssoCredentials", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com")
        SsoCredentials ssoCredentials)
        throws ExceededRequestLimitFault_Exception, InsufficientPermissionFault_Exception, InvalidAccountFault_Exception, InvalidCredentialsFault_Exception, InvalidVersionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param changePassword
     * @return
     *     returns com.easyinsight.datafeeds.netsuite.client.SessionResponse
     * @throws InvalidCredentialsFault_Exception
     * @throws InvalidVersionFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     * @throws InsufficientPermissionFault_Exception
     * @throws InvalidAccountFault_Exception
     */
    @WebMethod(action = "changePassword")
    @WebResult(name = "sessionResponse", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "changePassword", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.ChangePasswordRequest")
    @ResponseWrapper(localName = "changePasswordResponse", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.ChangePasswordResponse")
    public SessionResponse changePassword(
        @WebParam(name = "changePassword", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com")
        ChangePassword changePassword)
        throws ExceededRequestLimitFault_Exception, InsufficientPermissionFault_Exception, InvalidAccountFault_Exception, InvalidCredentialsFault_Exception, InvalidVersionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param changeEmail
     * @return
     *     returns com.easyinsight.datafeeds.netsuite.client.SessionResponse
     * @throws InvalidCredentialsFault_Exception
     * @throws InvalidVersionFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     * @throws InsufficientPermissionFault_Exception
     * @throws InvalidAccountFault_Exception
     */
    @WebMethod(action = "changeEmail")
    @WebResult(name = "sessionResponse", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "changeEmail", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.ChangeEmailRequest")
    @ResponseWrapper(localName = "changeEmailResponse", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.ChangeEmailResponse")
    public SessionResponse changeEmail(
        @WebParam(name = "changeEmail", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com")
        ChangeEmail changeEmail)
        throws ExceededRequestLimitFault_Exception, InsufficientPermissionFault_Exception, InvalidAccountFault_Exception, InvalidCredentialsFault_Exception, InvalidVersionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @return
     *     returns com.easyinsight.datafeeds.netsuite.client.SessionResponse
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     * @throws InvalidSessionFault_Exception
     */
    @WebMethod(action = "logout")
    @WebResult(name = "sessionResponse", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "logout", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.LogoutRequest")
    @ResponseWrapper(localName = "logoutResponse", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.LogoutResponse")
    public SessionResponse logout()
        throws ExceededRequestLimitFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param record
     * @return
     *     returns com.easyinsight.datafeeds.netsuite.client.WriteResponse
     * @throws InvalidCredentialsFault_Exception
     * @throws ExceededRecordCountFault_Exception
     * @throws ExceededUsageLimitFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws InvalidSessionFault_Exception
     */
    @WebMethod(action = "add")
    @WebResult(name = "writeResponse", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "add", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.AddRequest")
    @ResponseWrapper(localName = "addResponse", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.AddResponse")
    public WriteResponse add(
        @WebParam(name = "record", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com")
        Record record)
        throws ExceededRecordCountFault_Exception, ExceededRequestLimitFault_Exception, ExceededRequestSizeFault_Exception, ExceededUsageLimitFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param baseRef
     * @return
     *     returns com.easyinsight.datafeeds.netsuite.client.WriteResponse
     * @throws InvalidCredentialsFault_Exception
     * @throws ExceededRecordCountFault_Exception
     * @throws ExceededUsageLimitFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     * @throws InvalidSessionFault_Exception
     */
    @WebMethod(action = "delete")
    @WebResult(name = "writeResponse", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "delete", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.DeleteRequest")
    @ResponseWrapper(localName = "deleteResponse", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.DeleteResponse")
    public WriteResponse delete(
        @WebParam(name = "baseRef", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com")
        BaseRef baseRef)
        throws ExceededRecordCountFault_Exception, ExceededRequestLimitFault_Exception, ExceededRequestSizeFault_Exception, ExceededUsageLimitFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param searchRecord
     * @return
     *     returns com.easyinsight.datafeeds.netsuite.client.SearchResult
     * @throws InvalidCredentialsFault_Exception
     * @throws ExceededRecordCountFault_Exception
     * @throws ExceededUsageLimitFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws InvalidSessionFault_Exception
     */
    @WebMethod(action = "search")
    @WebResult(name = "searchResult", targetNamespace = "urn:core_2014_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "search", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.SearchRequest")
    @ResponseWrapper(localName = "searchResponse", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.SearchResponse")
    public SearchResult search(
        @WebParam(name = "searchRecord", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com")
        SearchRecord searchRecord)
        throws ExceededRecordCountFault_Exception, ExceededRequestLimitFault_Exception, ExceededRequestSizeFault_Exception, ExceededUsageLimitFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param pageIndex
     * @return
     *     returns com.easyinsight.datafeeds.netsuite.client.SearchResult
     * @throws ExceededRecordCountFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededUsageLimitFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     * @throws InvalidSessionFault_Exception
     */
    @WebMethod(action = "searchMore")
    @WebResult(name = "searchResult", targetNamespace = "urn:core_2014_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "searchMore", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.SearchMoreRequest")
    @ResponseWrapper(localName = "searchMoreResponse", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.SearchMoreResponse")
    public SearchResult searchMore(
        @WebParam(name = "pageIndex", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com")
        int pageIndex)
        throws ExceededRecordCountFault_Exception, ExceededRequestLimitFault_Exception, ExceededRequestSizeFault_Exception, ExceededUsageLimitFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param searchId
     * @param pageIndex
     * @return
     *     returns com.easyinsight.datafeeds.netsuite.client.SearchResult
     * @throws InvalidCredentialsFault_Exception
     * @throws ExceededRecordCountFault_Exception
     * @throws ExceededUsageLimitFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     * @throws InvalidSessionFault_Exception
     */
    @WebMethod(action = "searchMoreWithId")
    @WebResult(name = "searchResult", targetNamespace = "urn:core_2014_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "searchMoreWithId", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.SearchMoreWithIdRequest")
    @ResponseWrapper(localName = "searchMoreWithIdResponse", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.SearchMoreWithIdResponse")
    public SearchResult searchMoreWithId(
        @WebParam(name = "searchId", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com")
        String searchId,
        @WebParam(name = "pageIndex", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com")
        int pageIndex)
        throws ExceededRecordCountFault_Exception, ExceededRequestLimitFault_Exception, ExceededRequestSizeFault_Exception, ExceededUsageLimitFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @return
     *     returns com.easyinsight.datafeeds.netsuite.client.SearchResult
     * @throws ExceededRecordCountFault_Exception
     * @throws ExceededUsageLimitFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     * @throws InvalidSessionFault_Exception
     */
    @WebMethod(action = "searchNext")
    @WebResult(name = "searchResult", targetNamespace = "urn:core_2014_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "searchNext", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.SearchNextRequest")
    @ResponseWrapper(localName = "searchNextResponse", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.SearchNextResponse")
    public SearchResult searchNext()
        throws ExceededRecordCountFault_Exception, ExceededRequestLimitFault_Exception, ExceededRequestSizeFault_Exception, ExceededUsageLimitFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param record
     * @return
     *     returns com.easyinsight.datafeeds.netsuite.client.WriteResponse
     * @throws InvalidCredentialsFault_Exception
     * @throws ExceededRecordCountFault_Exception
     * @throws ExceededUsageLimitFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws InvalidSessionFault_Exception
     */
    @WebMethod(action = "update")
    @WebResult(name = "writeResponse", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "update", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.UpdateRequest")
    @ResponseWrapper(localName = "updateResponse", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.UpdateResponse")
    public WriteResponse update(
        @WebParam(name = "record", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com")
        Record record)
        throws ExceededRecordCountFault_Exception, ExceededRequestLimitFault_Exception, ExceededRequestSizeFault_Exception, ExceededUsageLimitFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param record
     * @return
     *     returns com.easyinsight.datafeeds.netsuite.client.WriteResponse
     * @throws InvalidCredentialsFault_Exception
     * @throws ExceededRecordCountFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededUsageLimitFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     * @throws InvalidSessionFault_Exception
     */
    @WebMethod(action = "upsert")
    @WebResult(name = "writeResponse", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "upsert", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.UpsertRequest")
    @ResponseWrapper(localName = "upsertResponse", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.UpsertResponse")
    public WriteResponse upsert(
        @WebParam(name = "record", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com")
        Record record)
        throws ExceededRecordCountFault_Exception, ExceededRequestLimitFault_Exception, ExceededRequestSizeFault_Exception, ExceededUsageLimitFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param record
     * @return
     *     returns com.easyinsight.datafeeds.netsuite.client.WriteResponseList
     * @throws InvalidCredentialsFault_Exception
     * @throws ExceededRecordCountFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededUsageLimitFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws InvalidSessionFault_Exception
     */
    @WebMethod(action = "addList")
    @WebResult(name = "writeResponseList", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "addList", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.AddListRequest")
    @ResponseWrapper(localName = "addListResponse", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.AddListResponse")
    public WriteResponseList addList(
        @WebParam(name = "record", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com")
        List<Record> record)
        throws ExceededRecordCountFault_Exception, ExceededRequestLimitFault_Exception, ExceededRequestSizeFault_Exception, ExceededUsageLimitFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param baseRef
     * @return
     *     returns com.easyinsight.datafeeds.netsuite.client.WriteResponseList
     * @throws InvalidCredentialsFault_Exception
     * @throws ExceededRecordCountFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededUsageLimitFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws InvalidSessionFault_Exception
     */
    @WebMethod(action = "deleteList")
    @WebResult(name = "writeResponseList", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "deleteList", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.DeleteListRequest")
    @ResponseWrapper(localName = "deleteListResponse", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.DeleteListResponse")
    public WriteResponseList deleteList(
        @WebParam(name = "baseRef", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com")
        List<BaseRef> baseRef)
        throws ExceededRecordCountFault_Exception, ExceededRequestLimitFault_Exception, ExceededRequestSizeFault_Exception, ExceededUsageLimitFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param record
     * @return
     *     returns com.easyinsight.datafeeds.netsuite.client.WriteResponseList
     * @throws InvalidCredentialsFault_Exception
     * @throws ExceededRecordCountFault_Exception
     * @throws ExceededUsageLimitFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws InvalidSessionFault_Exception
     */
    @WebMethod(action = "updateList")
    @WebResult(name = "writeResponseList", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "updateList", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.UpdateListRequest")
    @ResponseWrapper(localName = "updateListResponse", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.UpdateListResponse")
    public WriteResponseList updateList(
        @WebParam(name = "record", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com")
        List<Record> record)
        throws ExceededRecordCountFault_Exception, ExceededRequestLimitFault_Exception, ExceededRequestSizeFault_Exception, ExceededUsageLimitFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param record
     * @return
     *     returns com.easyinsight.datafeeds.netsuite.client.WriteResponseList
     * @throws InvalidCredentialsFault_Exception
     * @throws ExceededRecordCountFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededUsageLimitFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     * @throws InvalidSessionFault_Exception
     */
    @WebMethod(action = "upsertList")
    @WebResult(name = "writeResponseList", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "upsertList", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.UpsertListRequest")
    @ResponseWrapper(localName = "upsertListResponse", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.UpsertListResponse")
    public WriteResponseList upsertList(
        @WebParam(name = "record", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com")
        List<Record> record)
        throws ExceededRecordCountFault_Exception, ExceededRequestLimitFault_Exception, ExceededRequestSizeFault_Exception, ExceededUsageLimitFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param baseRef
     * @return
     *     returns com.easyinsight.datafeeds.netsuite.client.ReadResponse
     * @throws InvalidCredentialsFault_Exception
     * @throws ExceededRecordCountFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededUsageLimitFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws InvalidSessionFault_Exception
     */
    @WebMethod(action = "get")
    @WebResult(name = "readResponse", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "get", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.GetRequest")
    @ResponseWrapper(localName = "getResponse", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.GetResponse")
    public ReadResponse get(
        @WebParam(name = "baseRef", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com")
        BaseRef baseRef)
        throws ExceededRecordCountFault_Exception, ExceededRequestLimitFault_Exception, ExceededRequestSizeFault_Exception, ExceededUsageLimitFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param baseRef
     * @return
     *     returns com.easyinsight.datafeeds.netsuite.client.ReadResponseList
     * @throws InvalidCredentialsFault_Exception
     * @throws ExceededRecordCountFault_Exception
     * @throws ExceededUsageLimitFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws InvalidSessionFault_Exception
     */
    @WebMethod(action = "getList")
    @WebResult(name = "readResponseList", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "getList", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.GetListRequest")
    @ResponseWrapper(localName = "getListResponse", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.GetListResponse")
    public ReadResponseList getList(
        @WebParam(name = "baseRef", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com")
        List<BaseRef> baseRef)
        throws ExceededRecordCountFault_Exception, ExceededRequestLimitFault_Exception, ExceededRequestSizeFault_Exception, ExceededUsageLimitFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param record
     * @return
     *     returns com.easyinsight.datafeeds.netsuite.client.GetAllResult
     * @throws InvalidCredentialsFault_Exception
     * @throws ExceededRecordCountFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededUsageLimitFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     * @throws InvalidSessionFault_Exception
     */
    @WebMethod(action = "getAll")
    @WebResult(name = "getAllResult", targetNamespace = "urn:core_2014_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "getAll", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.GetAllRequest")
    @ResponseWrapper(localName = "getAllResponse", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.GetAllResponse")
    public GetAllResult getAll(
        @WebParam(name = "record", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com")
        GetAllRecord record)
        throws ExceededRecordCountFault_Exception, ExceededRequestLimitFault_Exception, ExceededRequestSizeFault_Exception, ExceededUsageLimitFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param record
     * @return
     *     returns com.easyinsight.datafeeds.netsuite.client.GetSavedSearchResult
     * @throws InvalidCredentialsFault_Exception
     * @throws ExceededRecordCountFault_Exception
     * @throws ExceededUsageLimitFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws InvalidSessionFault_Exception
     */
    @WebMethod(action = "getSavedSearch")
    @WebResult(name = "getSavedSearchResult", targetNamespace = "urn:core_2014_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "getSavedSearch", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.GetSavedSearchRequest")
    @ResponseWrapper(localName = "getSavedSearchResponse", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.GetSavedSearchResponse")
    public GetSavedSearchResult getSavedSearch(
        @WebParam(name = "record", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com")
        GetSavedSearchRecord record)
        throws ExceededRecordCountFault_Exception, ExceededRequestLimitFault_Exception, ExceededRequestSizeFault_Exception, ExceededUsageLimitFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param includeInactives
     * @param customizationType
     * @return
     *     returns com.easyinsight.datafeeds.netsuite.client.GetCustomizationIdResult
     * @throws InvalidCredentialsFault_Exception
     * @throws ExceededRecordCountFault_Exception
     * @throws ExceededUsageLimitFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws InvalidSessionFault_Exception
     */
    @WebMethod(action = "getCustomizationId")
    @WebResult(name = "getCustomizationIdResult", targetNamespace = "urn:core_2014_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "getCustomizationId", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.GetCustomizationIdRequest")
    @ResponseWrapper(localName = "getCustomizationIdResponse", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.GetCustomizationIdResponse")
    public GetCustomizationIdResult getCustomizationId(
        @WebParam(name = "customizationType", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com")
        CustomizationType customizationType,
        @WebParam(name = "includeInactives", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com")
        boolean includeInactives)
        throws ExceededRecordCountFault_Exception, ExceededRequestLimitFault_Exception, ExceededRequestSizeFault_Exception, ExceededUsageLimitFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param initializeRecord
     * @return
     *     returns com.easyinsight.datafeeds.netsuite.client.ReadResponse
     * @throws InvalidCredentialsFault_Exception
     * @throws ExceededRecordCountFault_Exception
     * @throws ExceededUsageLimitFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     * @throws InvalidSessionFault_Exception
     */
    @WebMethod(action = "initialize")
    @WebResult(name = "readResponse", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "initialize", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.InitializeRequest")
    @ResponseWrapper(localName = "initializeResponse", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.InitializeResponse")
    public ReadResponse initialize(
        @WebParam(name = "initializeRecord", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com")
        InitializeRecord initializeRecord)
        throws ExceededRecordCountFault_Exception, ExceededRequestLimitFault_Exception, ExceededRequestSizeFault_Exception, ExceededUsageLimitFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param initializeRecord
     * @return
     *     returns com.easyinsight.datafeeds.netsuite.client.ReadResponseList
     * @throws InvalidCredentialsFault_Exception
     * @throws ExceededRecordCountFault_Exception
     * @throws ExceededUsageLimitFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     * @throws InvalidSessionFault_Exception
     */
    @WebMethod(action = "initializeList")
    @WebResult(name = "readResponseList", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "initializeList", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.InitializeListRequest")
    @ResponseWrapper(localName = "initializeListResponse", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.InitializeListResponse")
    public ReadResponseList initializeList(
        @WebParam(name = "initializeRecord", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com")
        List<InitializeRecord> initializeRecord)
        throws ExceededRecordCountFault_Exception, ExceededRequestLimitFault_Exception, ExceededRequestSizeFault_Exception, ExceededUsageLimitFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param fieldDescription
     * @param pageIndex
     * @return
     *     returns com.easyinsight.datafeeds.netsuite.client.GetSelectValueResult
     * @throws InvalidCredentialsFault_Exception
     * @throws ExceededRecordCountFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededUsageLimitFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws InvalidSessionFault_Exception
     */
    @WebMethod(action = "getSelectValue")
    @WebResult(name = "getSelectValueResult", targetNamespace = "urn:core_2014_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "getSelectValue", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.GetSelectValueRequest")
    @ResponseWrapper(localName = "getSelectValueResponse", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.GetSelectValueResponse")
    public GetSelectValueResult getSelectValue(
        @WebParam(name = "fieldDescription", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com")
        GetSelectValueFieldDescription fieldDescription,
        @WebParam(name = "pageIndex", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com")
        int pageIndex)
        throws ExceededRecordCountFault_Exception, ExceededRequestLimitFault_Exception, ExceededRequestSizeFault_Exception, ExceededUsageLimitFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param itemAvailabilityFilter
     * @return
     *     returns com.easyinsight.datafeeds.netsuite.client.GetItemAvailabilityResult
     * @throws InvalidCredentialsFault_Exception
     * @throws ExceededRecordCountFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededUsageLimitFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     * @throws InvalidSessionFault_Exception
     */
    @WebMethod(action = "getItemAvailability")
    @WebResult(name = "getItemAvailabilityResult", targetNamespace = "urn:core_2014_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "getItemAvailability", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.GetItemAvailabilityRequest")
    @ResponseWrapper(localName = "getItemAvailabilityResponse", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.GetItemAvailabilityResponse")
    public GetItemAvailabilityResult getItemAvailability(
        @WebParam(name = "itemAvailabilityFilter", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com")
        ItemAvailabilityFilter itemAvailabilityFilter)
        throws ExceededRecordCountFault_Exception, ExceededRequestLimitFault_Exception, ExceededRequestSizeFault_Exception, ExceededUsageLimitFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param budgetExchangeRateFilter
     * @return
     *     returns com.easyinsight.datafeeds.netsuite.client.GetBudgetExchangeRateResult
     * @throws InvalidCredentialsFault_Exception
     * @throws ExceededRecordCountFault_Exception
     * @throws ExceededUsageLimitFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     * @throws InvalidSessionFault_Exception
     */
    @WebMethod(action = "getBudgetExchangeRate")
    @WebResult(name = "getBudgetExchangeRateResult", targetNamespace = "urn:core_2014_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "getBudgetExchangeRate", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.GetBudgetExchangeRateRequest")
    @ResponseWrapper(localName = "getBudgetExchangeRateResponse", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.GetBudgetExchangeRateResponse")
    public GetBudgetExchangeRateResult getBudgetExchangeRate(
        @WebParam(name = "budgetExchangeRateFilter", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com")
        BudgetExchangeRateFilter budgetExchangeRateFilter)
        throws ExceededRecordCountFault_Exception, ExceededRequestLimitFault_Exception, ExceededRequestSizeFault_Exception, ExceededUsageLimitFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param consolidatedExchangeRateFilter
     * @return
     *     returns com.easyinsight.datafeeds.netsuite.client.GetConsolidatedExchangeRateResult
     * @throws InvalidCredentialsFault_Exception
     * @throws ExceededRecordCountFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededUsageLimitFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws InvalidSessionFault_Exception
     */
    @WebMethod(action = "getConsolidatedExchangeRate")
    @WebResult(name = "getConsolidatedExchangeRateResult", targetNamespace = "urn:core_2014_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "getConsolidatedExchangeRate", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.GetConsolidatedExchangeRateRequest")
    @ResponseWrapper(localName = "getConsolidatedExchangeRateResponse", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.GetConsolidatedExchangeRateResponse")
    public GetConsolidatedExchangeRateResult getConsolidatedExchangeRate(
        @WebParam(name = "consolidatedExchangeRateFilter", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com")
        ConsolidatedExchangeRateFilter consolidatedExchangeRateFilter)
        throws ExceededRecordCountFault_Exception, ExceededRequestLimitFault_Exception, ExceededRequestSizeFault_Exception, ExceededUsageLimitFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param account
     * @return
     *     returns com.easyinsight.datafeeds.netsuite.client.GetDataCenterUrlsResult
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     */
    @WebMethod(action = "getDataCenterUrls")
    @WebResult(name = "getDataCenterUrlsResult", targetNamespace = "urn:core_2014_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "getDataCenterUrls", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.GetDataCenterUrlsRequest")
    @ResponseWrapper(localName = "getDataCenterUrlsResponse", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.GetDataCenterUrlsResponse")
    public GetDataCenterUrlsResult getDataCenterUrls(
        @WebParam(name = "account", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com")
        String account)
        throws ExceededRequestSizeFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param filters
     * @param pageIndex
     * @param fields
     * @return
     *     returns com.easyinsight.datafeeds.netsuite.client.GetPostingTransactionSummaryResult
     * @throws InvalidCredentialsFault_Exception
     * @throws ExceededRecordCountFault_Exception
     * @throws ExceededUsageLimitFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws InvalidSessionFault_Exception
     */
    @WebMethod(action = "getPostingTransactionSummary")
    @WebResult(name = "getPostingTransactionSummaryResult", targetNamespace = "urn:core_2014_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "getPostingTransactionSummary", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.GetPostingTransactionSummaryRequest")
    @ResponseWrapper(localName = "getPostingTransactionSummaryResponse", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.GetPostingTransactionSummaryResponse")
    public GetPostingTransactionSummaryResult getPostingTransactionSummary(
        @WebParam(name = "fields", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com")
        PostingTransactionSummaryField fields,
        @WebParam(name = "filters", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com")
        PostingTransactionSummaryFilter filters,
        @WebParam(name = "pageIndex", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com")
        int pageIndex)
        throws ExceededRecordCountFault_Exception, ExceededRequestLimitFault_Exception, ExceededRequestSizeFault_Exception, ExceededUsageLimitFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @return
     *     returns com.easyinsight.datafeeds.netsuite.client.GetServerTimeResult
     * @throws InvalidCredentialsFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededUsageLimitFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     * @throws InvalidSessionFault_Exception
     */
    @WebMethod(action = "getServerTime")
    @WebResult(name = "getServerTimeResult", targetNamespace = "urn:core_2014_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "getServerTime", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.GetServerTimeRequest")
    @ResponseWrapper(localName = "getServerTimeResponse", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.GetServerTimeResponse")
    public GetServerTimeResult getServerTime()
        throws ExceededRequestLimitFault_Exception, ExceededUsageLimitFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param attachReference
     * @return
     *     returns com.easyinsight.datafeeds.netsuite.client.WriteResponse
     * @throws InvalidCredentialsFault_Exception
     * @throws ExceededRecordCountFault_Exception
     * @throws ExceededUsageLimitFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws InvalidSessionFault_Exception
     */
    @WebMethod(action = "attach")
    @WebResult(name = "writeResponse", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "attach", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.AttachRequest")
    @ResponseWrapper(localName = "attachResponse", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.AttachResponse")
    public WriteResponse attach(
        @WebParam(name = "attachReference", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com")
        AttachReference attachReference)
        throws ExceededRecordCountFault_Exception, ExceededRequestLimitFault_Exception, ExceededRequestSizeFault_Exception, ExceededUsageLimitFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param detachReference
     * @return
     *     returns com.easyinsight.datafeeds.netsuite.client.WriteResponse
     * @throws InvalidCredentialsFault_Exception
     * @throws ExceededRecordCountFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededUsageLimitFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws InvalidSessionFault_Exception
     */
    @WebMethod(action = "detach")
    @WebResult(name = "writeResponse", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "detach", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.DetachRequest")
    @ResponseWrapper(localName = "detachResponse", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.DetachResponse")
    public WriteResponse detach(
        @WebParam(name = "detachReference", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com")
        DetachReference detachReference)
        throws ExceededRecordCountFault_Exception, ExceededRequestLimitFault_Exception, ExceededRequestSizeFault_Exception, ExceededUsageLimitFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param updateInviteeStatusReference
     * @return
     *     returns com.easyinsight.datafeeds.netsuite.client.WriteResponse
     * @throws InvalidCredentialsFault_Exception
     * @throws ExceededRecordCountFault_Exception
     * @throws ExceededUsageLimitFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws InvalidSessionFault_Exception
     */
    @WebMethod(action = "updateInviteeStatus")
    @WebResult(name = "writeResponse", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "updateInviteeStatus", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.UpdateInviteeStatusRequest")
    @ResponseWrapper(localName = "updateInviteeStatusResponse", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.UpdateInviteeStatusResponse")
    public WriteResponse updateInviteeStatus(
        @WebParam(name = "updateInviteeStatusReference", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com")
        UpdateInviteeStatusReference updateInviteeStatusReference)
        throws ExceededRecordCountFault_Exception, ExceededRequestLimitFault_Exception, ExceededRequestSizeFault_Exception, ExceededUsageLimitFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param updateInviteeStatusReference
     * @return
     *     returns com.easyinsight.datafeeds.netsuite.client.WriteResponseList
     * @throws InvalidCredentialsFault_Exception
     * @throws ExceededRecordCountFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededUsageLimitFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws InvalidSessionFault_Exception
     */
    @WebMethod(action = "updateInviteeStatusList")
    @WebResult(name = "writeResponseList", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "updateInviteeStatusList", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.UpdateInviteeStatusListRequest")
    @ResponseWrapper(localName = "updateInviteeStatusListResponse", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.UpdateInviteeStatusListResponse")
    public WriteResponseList updateInviteeStatusList(
        @WebParam(name = "updateInviteeStatusReference", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com")
        List<UpdateInviteeStatusReference> updateInviteeStatusReference)
        throws ExceededRecordCountFault_Exception, ExceededRequestLimitFault_Exception, ExceededRequestSizeFault_Exception, ExceededUsageLimitFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param record
     * @return
     *     returns com.easyinsight.datafeeds.netsuite.client.AsyncStatusResult
     * @throws InvalidCredentialsFault_Exception
     * @throws ExceededRecordCountFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws InvalidSessionFault_Exception
     */
    @WebMethod(action = "asyncAddList")
    @WebResult(name = "asyncStatusResult", targetNamespace = "urn:core_2014_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "asyncAddList", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.AsyncAddListRequest")
    @ResponseWrapper(localName = "asyncAddListResponse", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.AsyncStatusResponse")
    public AsyncStatusResult asyncAddList(
        @WebParam(name = "record", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com")
        List<Record> record)
        throws ExceededRecordCountFault_Exception, ExceededRequestLimitFault_Exception, ExceededRequestSizeFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param record
     * @return
     *     returns com.easyinsight.datafeeds.netsuite.client.AsyncStatusResult
     * @throws InvalidCredentialsFault_Exception
     * @throws ExceededRecordCountFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     * @throws InvalidSessionFault_Exception
     */
    @WebMethod(action = "asyncUpdateList")
    @WebResult(name = "asyncStatusResult", targetNamespace = "urn:core_2014_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "asyncUpdateList", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.AsyncUpdateListRequest")
    @ResponseWrapper(localName = "asyncUpdateListResponse", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.AsyncStatusResponse")
    public AsyncStatusResult asyncUpdateList(
        @WebParam(name = "record", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com")
        List<Record> record)
        throws ExceededRecordCountFault_Exception, ExceededRequestLimitFault_Exception, ExceededRequestSizeFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param record
     * @return
     *     returns com.easyinsight.datafeeds.netsuite.client.AsyncStatusResult
     * @throws InvalidCredentialsFault_Exception
     * @throws ExceededRecordCountFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     * @throws InvalidSessionFault_Exception
     */
    @WebMethod(action = "asyncUpsertList")
    @WebResult(name = "asyncStatusResult", targetNamespace = "urn:core_2014_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "asyncUpsertList", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.AsyncUpsertListRequest")
    @ResponseWrapper(localName = "asyncUpsertListResponse", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.AsyncStatusResponse")
    public AsyncStatusResult asyncUpsertList(
        @WebParam(name = "record", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com")
        List<Record> record)
        throws ExceededRecordCountFault_Exception, ExceededRequestLimitFault_Exception, ExceededRequestSizeFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param baseRef
     * @return
     *     returns com.easyinsight.datafeeds.netsuite.client.AsyncStatusResult
     * @throws InvalidCredentialsFault_Exception
     * @throws ExceededRecordCountFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws InvalidSessionFault_Exception
     */
    @WebMethod(action = "asyncDeleteList")
    @WebResult(name = "asyncStatusResult", targetNamespace = "urn:core_2014_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "asyncDeleteList", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.AsyncDeleteListRequest")
    @ResponseWrapper(localName = "asyncDeleteListResponse", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.AsyncStatusResponse")
    public AsyncStatusResult asyncDeleteList(
        @WebParam(name = "baseRef", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com")
        List<BaseRef> baseRef)
        throws ExceededRecordCountFault_Exception, ExceededRequestLimitFault_Exception, ExceededRequestSizeFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param baseRef
     * @return
     *     returns com.easyinsight.datafeeds.netsuite.client.AsyncStatusResult
     * @throws InvalidCredentialsFault_Exception
     * @throws ExceededRecordCountFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     * @throws InvalidSessionFault_Exception
     */
    @WebMethod(action = "asyncGetList")
    @WebResult(name = "asyncStatusResult", targetNamespace = "urn:core_2014_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "asyncGetList", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.AsyncGetListRequest")
    @ResponseWrapper(localName = "asyncGetListResponse", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.AsyncStatusResponse")
    public AsyncStatusResult asyncGetList(
        @WebParam(name = "baseRef", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com")
        List<BaseRef> baseRef)
        throws ExceededRecordCountFault_Exception, ExceededRequestLimitFault_Exception, ExceededRequestSizeFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param initializeRecord
     * @return
     *     returns com.easyinsight.datafeeds.netsuite.client.AsyncStatusResult
     * @throws InvalidCredentialsFault_Exception
     * @throws ExceededRecordCountFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededUsageLimitFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     * @throws InvalidSessionFault_Exception
     */
    @WebMethod(action = "asyncInitializeList")
    @WebResult(name = "asyncStatusResult", targetNamespace = "urn:core_2014_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "asyncInitializeList", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.AsyncInitializeListRequest")
    @ResponseWrapper(localName = "asyncInitializeListResponse", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.AsyncStatusResponse")
    public AsyncStatusResult asyncInitializeList(
        @WebParam(name = "initializeRecord", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com")
        List<InitializeRecord> initializeRecord)
        throws ExceededRecordCountFault_Exception, ExceededRequestLimitFault_Exception, ExceededRequestSizeFault_Exception, ExceededUsageLimitFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param searchRecord
     * @return
     *     returns com.easyinsight.datafeeds.netsuite.client.AsyncStatusResult
     * @throws InvalidCredentialsFault_Exception
     * @throws ExceededRecordCountFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     * @throws InvalidSessionFault_Exception
     */
    @WebMethod(action = "asyncSearch")
    @WebResult(name = "asyncStatusResult", targetNamespace = "urn:core_2014_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "asyncSearch", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.AsyncSearchRequest")
    @ResponseWrapper(localName = "asyncSearchResponse", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.AsyncStatusResponse")
    public AsyncStatusResult asyncSearch(
        @WebParam(name = "searchRecord", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com")
        SearchRecord searchRecord)
        throws ExceededRecordCountFault_Exception, ExceededRequestLimitFault_Exception, ExceededRequestSizeFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param jobId
     * @param pageIndex
     * @return
     *     returns com.easyinsight.datafeeds.netsuite.client.AsyncResult
     * @throws InvalidCredentialsFault_Exception
     * @throws ExceededRecordCountFault_Exception
     * @throws ExceededUsageLimitFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws AsyncFault_Exception
     * @throws InvalidSessionFault_Exception
     */
    @WebMethod(action = "getAsyncResult")
    @WebResult(name = "asyncResult", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "getAsyncResult", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.GetAsyncResultRequest")
    @ResponseWrapper(localName = "getAsyncResultResponse", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.GetAsyncResultResponse")
    public AsyncResult getAsyncResult(
        @WebParam(name = "jobId", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com")
        String jobId,
        @WebParam(name = "pageIndex", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com")
        int pageIndex)
        throws AsyncFault_Exception, ExceededRecordCountFault_Exception, ExceededRequestLimitFault_Exception, ExceededRequestSizeFault_Exception, ExceededUsageLimitFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param jobId
     * @return
     *     returns com.easyinsight.datafeeds.netsuite.client.AsyncStatusResult
     * @throws InvalidCredentialsFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     * @throws AsyncFault_Exception
     * @throws InvalidSessionFault_Exception
     */
    @WebMethod(action = "checkAsyncStatus")
    @WebResult(name = "asyncStatusResult", targetNamespace = "urn:core_2014_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "checkAsyncStatus", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.CheckAsyncStatusRequest")
    @ResponseWrapper(localName = "checkAsyncStatusResponse", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.AsyncStatusResponse")
    public AsyncStatusResult checkAsyncStatus(
        @WebParam(name = "jobId", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com")
        String jobId)
        throws AsyncFault_Exception, ExceededRequestLimitFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param getDeletedFilter
     * @return
     *     returns com.easyinsight.datafeeds.netsuite.client.GetDeletedResult
     * @throws InvalidCredentialsFault_Exception
     * @throws ExceededRecordCountFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededUsageLimitFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     * @throws InvalidSessionFault_Exception
     */
    @WebMethod(action = "getDeleted")
    @WebResult(name = "getDeletedResult", targetNamespace = "urn:core_2014_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "getDeleted", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.GetDeletedRequest")
    @ResponseWrapper(localName = "getDeletedResponse", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com", className = "com.easyinsight.datafeeds.netsuite.client.GetDeletedResponse")
    public GetDeletedResult getDeleted(
        @WebParam(name = "getDeletedFilter", targetNamespace = "urn:messages_2014_1.platform.webservices.netsuite.com")
        GetDeletedFilter getDeletedFilter)
        throws ExceededRecordCountFault_Exception, ExceededRequestLimitFault_Exception, ExceededRequestSizeFault_Exception, ExceededUsageLimitFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

}
